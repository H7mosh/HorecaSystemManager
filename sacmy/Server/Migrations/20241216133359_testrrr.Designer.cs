// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using sacmy.Server.DatabaseContext;

#nullable disable

namespace sacmy.Server.Migrations
{
    [DbContext(typeof(SafeenCompanyDbContext))]
    [Migration("20241216133359_testrrr")]
    partial class testrrr
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("Arabic_CI_AS")
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AspNetUserRole", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex(new[] { "RoleId" }, "IX_AspNetUserRoles_RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.Advertise", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Advertise", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.AppSessionLog", b =>
                {
                    b.Property<Guid>("SessionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdditionalInfo")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("AppVersion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CloseLongitude")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CloseTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("DeviceInfo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("OpenLocation")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("OpenTime")
                        .HasColumnType("datetime");

                    b.HasKey("SessionId")
                        .HasName("PK__AppSessi__C9F492904C3CD18B");

                    b.HasIndex("CustomerId");

                    b.ToTable("AppSessionLogs");
                });

            modelBuilder.Entity("sacmy.Server.Models.AspNetRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "NormalizedName" }, "RoleNameIndex")
                        .IsUnique()
                        .HasFilter("([NormalizedName] IS NOT NULL)");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("sacmy.Server.Models.AspNetRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "RoleId" }, "IX_AspNetRoleClaims_RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("sacmy.Server.Models.AspNetUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "NormalizedEmail" }, "EmailIndex");

                    b.HasIndex(new[] { "NormalizedUserName" }, "UserNameIndex")
                        .IsUnique()
                        .HasFilter("([NormalizedUserName] IS NOT NULL)");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("sacmy.Server.Models.AspNetUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId" }, "IX_AspNetUserClaims_UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("sacmy.Server.Models.AspNetUserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex(new[] { "UserId" }, "IX_AspNetUserLogins_UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("sacmy.Server.Models.AspNetUserToken", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("sacmy.Server.Models.Balance", b =>
                {
                    b.Property<decimal?>("Btotal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m)
                        .HasColumnName("BTotal");

                    b.Property<string>("Btype")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("BType");

                    b.Property<DateTime?>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("date")
                        .HasDefaultValueSql("(CONVERT([datetime],CONVERT([varchar],getdate(),(1)),(1)))");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("id");

                    b.Property<string>("Note")
                        .HasColumnType("ntext")
                        .HasColumnName("note");

                    b.Property<DateTime?>("Now")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("now")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Subb")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("subb");

                    b.Property<string>("Treasurer")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Treasurer");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.ToTable("Balance", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.BarcodStore", b =>
                {
                    b.Property<long?>("BarcodeG")
                        .HasColumnType("bigint")
                        .HasColumnName("barcode_G");

                    b.ToTable("Barcod_Store", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.BnBuyFatoraLastRecord", b =>
                {
                    b.Property<string>("Customer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("customer");

                    b.Property<decimal?>("Prise")
                        .HasColumnType("money")
                        .HasColumnName("prise");

                    b.Property<int?>("Secode")
                        .HasColumnType("int")
                        .HasColumnName("secode");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.ToTable((string)null);

                    b.ToView("BN_BuyFatora_LastRecords", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.BnLastRecord", b =>
                {
                    b.Property<string>("Customer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("customer");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<decimal?>("Prise")
                        .HasColumnType("money")
                        .HasColumnName("prise");

                    b.Property<int?>("Secode")
                        .HasColumnType("int")
                        .HasColumnName("secode");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.ToTable((string)null);

                    b.ToView("BN_Last_Records", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.Bonna", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Barcode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Box")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Collection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Decor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EdgeChipWarranty")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Glaze")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("Height")
                        .HasColumnType("float");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KitchenType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Length")
                        .HasColumnType("float");

                    b.Property<string>("MaterialType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Pcs")
                        .HasColumnType("int");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ProductType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<double?>("Volume")
                        .HasColumnType("float");

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.Property<double?>("Width")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Bonna", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.BonnaCollection", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BonnaCollection1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("BonnaCollection");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("HorecaInfoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("HorecaInfoId");

                    b.ToTable("BonnaCollections");
                });

            modelBuilder.Entity("sacmy.Server.Models.Brand", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<string>("NameAr")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("NameKr")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("NameTr")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("sacmy.Server.Models.BuyFatora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("ID");

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<string>("Bankinfo")
                        .HasColumnType("ntext")
                        .HasColumnName("Bankinfo");

                    b.Property<string>("CarNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("carNo");

                    b.Property<bool?>("Checkeed")
                        .HasColumnType("bit")
                        .HasColumnName("checkeed");

                    b.Property<string>("CostType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("costType");

                    b.Property<string>("Customer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("customer");

                    b.Property<DateTime?>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("DATE")
                        .HasDefaultValueSql("(CONVERT([datetime],CONVERT([varchar],getdate(),(1)),(1)))");

                    b.Property<DateTime?>("Datee")
                        .HasColumnType("datetime2")
                        .HasColumnName("datee");

                    b.Property<decimal?>("Discount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m)
                        .HasColumnName("discount");

                    b.Property<double?>("Dolar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("Driver")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DriverMob")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("driverMob");

                    b.Property<DateTime?>("EditedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Edited_Date");

                    b.Property<string>("EditedUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Edited_User");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<decimal?>("Hamalya")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m)
                        .HasColumnName("hamalya");

                    b.Property<bool?>("Hidee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("hidee");

                    b.Property<int?>("Idd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("idd");

                    b.Property<decimal?>("Ijraaa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m)
                        .HasColumnName("ijraaa");

                    b.Property<decimal?>("Ijraaa2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m)
                        .HasColumnName("ijraaa2");

                    b.Property<bool?>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("IsDeleted");

                    b.Property<double?>("ManCcount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0)
                        .HasColumnName("man_ccount");

                    b.Property<string>("Mandob")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Mob")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mob");

                    b.Property<string>("NoteOther")
                        .HasColumnType("ntext")
                        .HasColumnName("noteOther");

                    b.Property<string>("Notes")
                        .HasColumnType("ntext")
                        .HasColumnName("notes");

                    b.Property<bool?>("Notify")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("Notify");

                    b.Property<bool?>("NotifyMe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("NotifyMe");

                    b.Property<DateTime?>("Now")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("now")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<double?>("Nsba")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double?>("Nsbaother")
                        .HasColumnType("float");

                    b.Property<decimal?>("Payed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m);

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Payment_Date");

                    b.Property<decimal?>("Remaing")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m);

                    b.Property<int?>("RemindAfter")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("RemindAfter");

                    b.Property<string>("Sender")
                        .HasMaxLength(550)
                        .HasColumnType("nvarchar(550)")
                        .HasColumnName("Sender");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<decimal?>("Tootal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m);

                    b.Property<int?>("TotalPoints")
                        .HasColumnType("int")
                        .HasColumnName("Total_Points");

                    b.Property<string>("Treasurer")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Treasurer");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.HasKey("Id");

                    b.ToTable("BuyFatora", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.BuyFatoraItem", b =>
                {
                    b.Property<int>("BuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BU_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BuId"));

                    b.Property<string>("BoxContain")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("CodIqd")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("codIQD");

                    b.Property<string>("Codd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("codd");

                    b.Property<double?>("Countt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("Factoryy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("factoryy");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Itemm")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("itemm");

                    b.Property<int?>("Points")
                        .HasColumnType("int");

                    b.Property<decimal?>("Prise")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m)
                        .HasColumnName("prise");

                    b.Property<decimal?>("PurchasePrise")
                        .HasColumnType("money")
                        .HasColumnName("Purchase_prise");

                    b.Property<string>("QiyasUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("qiyas_unit");

                    b.Property<double?>("QttRemaining")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0)
                        .HasColumnName("Qtt_Remaining");

                    b.Property<double?>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0)
                        .HasColumnName("quantity")
                        .HasComment("Qtt_Remaining");

                    b.Property<decimal?>("Rub7Karton")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m)
                        .HasColumnName("Rub7_karton");

                    b.Property<int?>("Secode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("secode");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<decimal?>("Total")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m)
                        .HasColumnName("total");

                    b.Property<int?>("TtalPoints")
                        .HasColumnType("int");

                    b.Property<string>("Typee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("typee");

                    b.Property<string>("Wajba")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("wajba");

                    b.Property<float?>("Weznn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("real")
                        .HasDefaultValue(0f);

                    b.HasKey("BuId");

                    b.ToTable("BuyFatoraItem", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.Catalog", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BrandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NameAr")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("NameKr")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("NameTr")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "BrandId" }, "IX_Catalogs_BrandId");

                    b.ToTable("Catalogs");
                });

            modelBuilder.Entity("sacmy.Server.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BrandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameKr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameTr")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "BrandId" }, "IX_Categories_BrandId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("sacmy.Server.Models.Category1", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NameAr")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NameAR");

                    b.Property<string>("NameEn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NameEN");

                    b.Property<string>("NameKr")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NameKR");

                    b.Property<string>("NameTr")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NameTR");

                    b.HasKey("Id");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.Collection", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BrandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameKr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameTr")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "BrandId" }, "IX_Collections_BrandId");

                    b.ToTable("Collections");
                });

            modelBuilder.Entity("sacmy.Server.Models.CommentTrackState", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("StateAr")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StateEn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("TrackCommentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "TrackCommentId" }, "IX_CommentTrackState_TrackCommentId");

                    b.ToTable("CommentTrackState", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.Company", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<string>("Company1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("company");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Mob")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mob");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.ToTable("company", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.CompanyMassarif", b =>
                {
                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("date");

                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("id");

                    b.Property<string>("Masraftype")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("masraftype");

                    b.Property<string>("Note")
                        .HasColumnType("ntext")
                        .HasColumnName("note");

                    b.Property<DateTime?>("Now")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("now")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Symbol")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Treasurer");

                    b.Property<decimal?>("Total")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m)
                        .HasColumnName("total");

                    b.Property<string>("Treasurer")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Treasurer");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.ToTable("CompanyMassarif", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.CompanyRemainingOld", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Datee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("datee")
                        .HasDefaultValueSql("(CONVERT([datetime],CONVERT([varchar],getdate(),(1)),(1)))");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<string>("Notes")
                        .HasColumnType("ntext")
                        .HasColumnName("notes");

                    b.Property<DateTime?>("Now")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("now")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<decimal?>("Total")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m)
                        .HasColumnName("total");

                    b.Property<string>("Treasurer")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Treasurer");

                    b.Property<string>("Typee")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("typee");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.HasKey("Id")
                        .HasName("PK_Company_Remain_Old");

                    b.ToTable("Company_RemainingOld", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.CostumerLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Location")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Costumer_Locations", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.CostumerType", b =>
                {
                    b.Property<string>("CostumerType1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("CostumerType");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Nsba")
                        .HasColumnType("float")
                        .HasColumnName("nsba");

                    b.ToTable("CostumerType", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.CountAllCostomerBuyFatora", b =>
                {
                    b.Property<bool?>("Checkeed")
                        .HasColumnType("bit")
                        .HasColumnName("checkeed");

                    b.Property<string>("Customer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("customer");

                    b.Property<decimal?>("Remain")
                        .HasColumnType("money");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.ToTable((string)null);

                    b.ToView("Count_ALL_Costomer_BuyFatora", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.CountAllCostomerPayFrom", b =>
                {
                    b.Property<string>("Customer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("customer");

                    b.Property<decimal?>("Pftotal")
                        .HasColumnType("money")
                        .HasColumnName("PFTotal");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.ToTable((string)null);

                    b.ToView("Count_ALL_Costomer_Pay_FROM", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.CountAllCostomerPayTo", b =>
                {
                    b.Property<string>("Customer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("customer");

                    b.Property<decimal?>("Pttotal")
                        .HasColumnType("money")
                        .HasColumnName("PTTotal");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.ToTable((string)null);

                    b.ToView("Count_ALL_Costomer_Pay_To", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.CountAllCostomerReturnFatora", b =>
                {
                    b.Property<string>("Customer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("customer");

                    b.Property<decimal?>("RetRemain")
                        .HasColumnType("money")
                        .HasColumnName("Ret_Remain");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.ToTable((string)null);

                    b.ToView("Count_ALL_Costomer_ReturnFatora", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.CountAllCostomerSafi", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<decimal?>("BuyRemain")
                        .HasColumnType("money")
                        .HasColumnName("Buy_Remain");

                    b.Property<string>("CostType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("costType");

                    b.Property<string>("Customer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("customer");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Mob")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mob");

                    b.Property<decimal?>("Pftotal")
                        .HasColumnType("money")
                        .HasColumnName("PFTotal");

                    b.Property<decimal?>("Pttotal")
                        .HasColumnType("money")
                        .HasColumnName("PTTotal");

                    b.Property<decimal?>("RetRemain")
                        .HasColumnType("money")
                        .HasColumnName("Ret_Remain");

                    b.Property<decimal?>("Safiremain")
                        .HasColumnType("money")
                        .HasColumnName("SAFIREMAIN");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.ToTable((string)null);

                    b.ToView("Count_ALL_Costomer_SAFI", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.CountAllCostomerSafiAll", b =>
                {
                    b.Property<string>("Customer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("customer");

                    b.Property<decimal?>("Safiremain")
                        .HasColumnType("money")
                        .HasColumnName("SAFIREMAIN");

                    b.ToTable((string)null);

                    b.ToView("Count_ALL_Costomer_SAFI_ALL", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.CountAllPersonSafi", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<string>("Mob")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mob");

                    b.Property<string>("Person")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Pfqasa")
                        .HasColumnType("money")
                        .HasColumnName("PFQasa");

                    b.Property<decimal?>("Ptoqasa")
                        .HasColumnType("money")
                        .HasColumnName("PTOQasa");

                    b.Property<decimal?>("Remain")
                        .HasColumnType("money");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.ToTable((string)null);

                    b.ToView("Count_ALL_Person_SAFI", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.Currency", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<decimal>("ExchangeRate")
                        .HasColumnType("smallmoney");

                    b.HasKey("Id");

                    b.ToTable("Currency", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.CurrencyType", b =>
                {
                    b.Property<string>("CurrencyName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("currency_Name");

                    b.Property<string>("CurrencySymbol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("currency_Symbol");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.ToTable("currency_type", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("active");

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<string>("CostType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("costType");

                    b.Property<string>("Costlocat")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("costlocat");

                    b.Property<string>("Customer1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("customer");

                    b.Property<string>("DeviceId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("deviceId");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("FirebaseToken")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("firebaseToken");

                    b.Property<bool?>("IsPlusOneChecked")
                        .HasColumnType("bit")
                        .HasColumnName("isPlusOneChecked");

                    b.Property<string>("ManAddress")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Man_address");

                    b.Property<double?>("ManCcount")
                        .HasColumnType("float")
                        .HasColumnName("man_ccount");

                    b.Property<string>("ManMob")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Man_mob");

                    b.Property<string>("Mandob")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Mob")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mob");

                    b.Property<double?>("Nsba")
                        .HasColumnType("float");

                    b.Property<double?>("OtherNsba")
                        .HasColumnType("float")
                        .HasColumnName("otherNsba");

                    b.Property<string>("Password")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("password");

                    b.Property<double?>("PlusOne")
                        .HasColumnType("float")
                        .HasColumnName("plusOne");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("refreshToken");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("UserAcc")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("userAcc");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.HasKey("Id");

                    b.ToTable("customer", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.CustomerBillPoint", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BillId")
                        .HasColumnType("int")
                        .HasColumnName("billId");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customerId");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<int>("Points")
                        .HasColumnType("int")
                        .HasColumnName("points");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerBillPoints");
                });

            modelBuilder.Entity("sacmy.Server.Models.CustomerFavouriteProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeletedFromFavourite")
                        .HasColumnType("bit");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.ToTable("CustomerFavouriteProduct", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.CustomerProductRelation", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("DiscountPercentage")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDiscounted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRaised")
                        .HasColumnType("bit");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("RaisePercentage")
                        .HasColumnType("decimal(5, 2)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.ToTable("CustomerProductRelations");
                });

            modelBuilder.Entity("sacmy.Server.Models.CustomerViewedProduct", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductId");

                    b.ToTable("CustomerViewedProduct", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Branch")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BranchAr")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BranchKr")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BranchTr")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Brand")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CanclledDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)")
                        .HasColumnName("code");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FirebaseToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)")
                        .HasColumnName("First Name");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("JobTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitleAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitleKr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitleTr")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("jobTitleTr");

                    b.Property<string>("LastName")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("phone number");

                    b.Property<Guid?>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("Shown")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Employee", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.EmpolyeeRole", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("EmpolyeeRole", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.EventCompany", b =>
                {
                    b.Property<int>("IdEvent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_event");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEvent"));

                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("company");

                    b.Property<DateTime?>("Datee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("datee")
                        .HasDefaultValueSql("(CONVERT([date],CONVERT([varchar],getdate(),(1)),(1)))");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<DateTime?>("MtabqaDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("mtabqaDate");

                    b.Property<string>("MtabqaDatee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mtabqaDatee");

                    b.Property<string>("Notess")
                        .HasColumnType("ntext")
                        .HasColumnName("notess");

                    b.Property<DateTime?>("Noww")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("noww")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<int?>("Trans")
                        .HasColumnType("int")
                        .HasColumnName("trans");

                    b.Property<decimal?>("Ttttotal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m)
                        .HasColumnName("TTTtotal");

                    b.Property<string>("Typeevent")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("typeevent");

                    b.HasKey("IdEvent");

                    b.ToTable("Event_company", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.EventCostumer", b =>
                {
                    b.Property<int>("IdEvent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_event");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEvent"));

                    b.Property<bool?>("Checkeed")
                        .HasColumnType("bit")
                        .HasColumnName("checkeed");

                    b.Property<string>("Costumer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("costumer");

                    b.Property<DateTime?>("Datee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("datee")
                        .HasDefaultValueSql("(CONVERT([date],CONVERT([varchar],getdate(),(1)),(1)))");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<DateTime?>("MtabqaDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("mtabqaDate");

                    b.Property<string>("MtabqaDatee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mtabqaDatee");

                    b.Property<string>("Notess")
                        .HasColumnType("ntext")
                        .HasColumnName("notess");

                    b.Property<DateTime?>("Noww")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("noww")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<int?>("Trans")
                        .HasColumnType("int")
                        .HasColumnName("trans");

                    b.Property<decimal?>("Ttttotal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m)
                        .HasColumnName("TTTtotal");

                    b.Property<string>("Typeevent")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("typeevent");

                    b.HasKey("IdEvent");

                    b.ToTable("Event_costumer", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.EventDeleted", b =>
                {
                    b.Property<DateTime?>("DeletedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Deleted_Date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal?>("EventTotal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m)
                        .HasColumnName("Event_Total");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Typeevent")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("typeevent");

                    b.Property<DateTime?>("TypeeventDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("typeevent_Date");

                    b.Property<string>("TypeeventId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("typeevent_ID");

                    b.Property<string>("TypeeventName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("typeevent_Name");

                    b.Property<string>("UserDeleted")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("User_deleted");

                    b.ToTable("Event_Deleted", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.EventEdited", b =>
                {
                    b.Property<DateTime?>("DeletedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Deleted_Date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal?>("EventTotal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m)
                        .HasColumnName("Event_Total");

                    b.Property<decimal?>("EventTotalNew")
                        .HasColumnType("money")
                        .HasColumnName("Event_TotalNew");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Typeevent")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("typeevent");

                    b.Property<DateTime?>("TypeeventDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("typeevent_Date");

                    b.Property<string>("TypeeventId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("typeevent_ID");

                    b.Property<string>("TypeeventName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("typeevent_Name");

                    b.Property<string>("UserDeleted")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("User_deleted");

                    b.ToTable("Event_Edited", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.EventIxraci", b =>
                {
                    b.Property<DateTime?>("Datee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("datee")
                        .HasDefaultValueSql("(CONVERT([date],CONVERT([varchar],getdate(),(1)),(1)))");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<int>("IdEvent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_event");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEvent"));

                    b.Property<string>("IxraciN")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ixraciN");

                    b.Property<DateTime?>("MtabqaDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("mtabqaDate");

                    b.Property<string>("MtabqaDatee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mtabqaDatee");

                    b.Property<string>("Notess")
                        .HasColumnType("ntext")
                        .HasColumnName("notess");

                    b.Property<DateTime?>("Noww")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("noww")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<int?>("Trans")
                        .HasColumnType("int")
                        .HasColumnName("trans");

                    b.Property<decimal?>("Ttttotal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m)
                        .HasColumnName("TTTtotal");

                    b.Property<string>("Typeevent")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("typeevent");

                    b.ToTable("Event_ixraci", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.EventMandob", b =>
                {
                    b.Property<bool?>("Checkeed")
                        .HasColumnType("bit")
                        .HasColumnName("checkeed");

                    b.Property<DateTime?>("Datee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("datee")
                        .HasDefaultValueSql("(CONVERT([date],CONVERT([varchar],getdate(),(1)),(1)))");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<int>("IdEvent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_event");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEvent"));

                    b.Property<string>("Mandob")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("MtabqaDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("mtabqaDate");

                    b.Property<string>("MtabqaDatee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mtabqaDatee");

                    b.Property<string>("Notess")
                        .HasColumnType("ntext")
                        .HasColumnName("notess");

                    b.Property<DateTime?>("Noww")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("noww")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<int?>("Trans")
                        .HasColumnType("int")
                        .HasColumnName("trans");

                    b.Property<decimal?>("Ttttotal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m)
                        .HasColumnName("TTTtotal");

                    b.Property<string>("Typeevent")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("typeevent");

                    b.ToTable("Event_Mandob", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.EventOffice", b =>
                {
                    b.Property<DateTime?>("Datee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("datee")
                        .HasDefaultValueSql("(CONVERT([date],CONVERT([varchar],getdate(),(1)),(1)))");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<int>("IdEvent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_event");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEvent"));

                    b.Property<DateTime?>("MtabqaDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("mtabqaDate");

                    b.Property<string>("MtabqaDatee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mtabqaDatee");

                    b.Property<string>("Notess")
                        .HasColumnType("ntext")
                        .HasColumnName("notess");

                    b.Property<DateTime?>("Noww")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("noww")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Officee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("officee");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Symbol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Trans")
                        .HasColumnType("int")
                        .HasColumnName("trans");

                    b.Property<decimal?>("Ttttotal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m)
                        .HasColumnName("TTTtotal");

                    b.Property<string>("Typeevent")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("typeevent");

                    b.ToTable("Event_Office", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.EventOfficeIqd", b =>
                {
                    b.Property<int>("IdEvent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_event");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEvent"));

                    b.Property<DateTime?>("Datee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("datee")
                        .HasDefaultValueSql("(CONVERT([date],CONVERT([varchar],getdate(),(1)),(1)))");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<DateTime?>("MtabqaDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("mtabqaDate");

                    b.Property<string>("MtabqaDatee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mtabqaDatee");

                    b.Property<string>("Notess")
                        .HasColumnType("ntext")
                        .HasColumnName("notess");

                    b.Property<DateTime?>("Noww")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("noww")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Officee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("officee");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<int?>("Trans")
                        .HasColumnType("int")
                        .HasColumnName("trans");

                    b.Property<decimal?>("Ttttotal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m)
                        .HasColumnName("TTTtotal");

                    b.Property<string>("Typeevent")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("typeevent");

                    b.HasKey("IdEvent");

                    b.ToTable("Event_Office_IQD", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.EventPerson", b =>
                {
                    b.Property<string>("Costumer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("costumer");

                    b.Property<DateTime?>("Datee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("datee")
                        .HasDefaultValueSql("(CONVERT([date],CONVERT([varchar],getdate(),(1)),(1)))");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<int>("IdEvent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_event");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEvent"));

                    b.Property<DateTime?>("MtabqaDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("mtabqaDate");

                    b.Property<string>("MtabqaDatee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mtabqaDatee");

                    b.Property<string>("Notess")
                        .HasColumnType("ntext")
                        .HasColumnName("notess");

                    b.Property<DateTime?>("Noww")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("noww")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<int?>("Trans")
                        .HasColumnType("int")
                        .HasColumnName("trans");

                    b.Property<decimal?>("Ttttotal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m)
                        .HasColumnName("TTTtotal");

                    b.Property<string>("Typeevent")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("typeevent");

                    b.ToTable("Event_Person", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.ExchangeFatora", b =>
                {
                    b.Property<bool?>("Checkeed")
                        .HasColumnType("bit")
                        .HasColumnName("checkeed");

                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("company");

                    b.Property<string>("Customer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("customer");

                    b.Property<DateTime?>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("DATE")
                        .HasDefaultValueSql("(CONVERT([datetime],CONVERT([varchar],getdate(),(1)),(1)))");

                    b.Property<DateTime?>("Datee")
                        .HasColumnType("datetime2")
                        .HasColumnName("datee");

                    b.Property<string>("FromStor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("fromStor");

                    b.Property<int>("IdExcha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("ID_Excha");

                    b.Property<int>("IdPurch")
                        .HasColumnType("int")
                        .HasColumnName("id_Purch");

                    b.Property<int>("IdSales")
                        .HasColumnType("int")
                        .HasColumnName("id_sales");

                    b.Property<string>("Notes")
                        .HasColumnType("ntext")
                        .HasColumnName("notes");

                    b.Property<DateTime?>("Now")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("now")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("PuEventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Pu_event_id");

                    b.Property<string>("SalEventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("sal_event_id");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("TooStor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("Trans")
                        .HasColumnType("bit")
                        .HasColumnName("trans");

                    b.Property<string>("Treasurer")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Treasurer");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.ToTable("ExchangeFatora", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.ExchangeFatoraItem", b =>
                {
                    b.Property<string>("BoxContain")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("BuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BU_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BuId"));

                    b.Property<string>("CodIqd")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("codIQD");

                    b.Property<string>("Codd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("codd");

                    b.Property<double?>("Countt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("Factoryy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("factoryy");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Itemm")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("itemm");

                    b.Property<decimal?>("Prise")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m)
                        .HasColumnName("prise");

                    b.Property<decimal?>("PurchasePrise")
                        .HasColumnType("money")
                        .HasColumnName("Purchase_prise");

                    b.Property<string>("QiyasUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("qiyas_unit");

                    b.Property<double?>("QttRemaining")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0)
                        .HasColumnName("Qtt_Remaining");

                    b.Property<double?>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0)
                        .HasColumnName("quantity")
                        .HasComment("Qtt_Remaining");

                    b.Property<decimal?>("Rub7Karton")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m)
                        .HasColumnName("Rub7_karton");

                    b.Property<int?>("Secode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("secode");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<decimal?>("Total")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m)
                        .HasColumnName("total");

                    b.Property<string>("Typee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("typee");

                    b.Property<string>("Wajba")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("wajba");

                    b.Property<float?>("Weznn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("real")
                        .HasDefaultValue(0f);

                    b.ToTable("ExchangeFatoraItem", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.Factory", b =>
                {
                    b.Property<string>("Factory1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("factory");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.ToTable("factory", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.FeatureItem", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsBestSeller")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNew")
                        .HasColumnType("bit");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SkuCod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SKU_cod");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.ToTable("FeatureItem", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.HorecaImage", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("HorecaInfoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("image");

                    b.HasKey("Id");

                    b.HasIndex("HorecaInfoId");

                    b.ToTable("HorecaImages");
                });

            modelBuilder.Entity("sacmy.Server.Models.HorecaInformation", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Concept")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Governorate")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("isDeleted");

                    b.Property<string>("Location")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LocationDescription")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)")
                        .HasColumnName("Location_description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerPhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PurcasingManagerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchasingManagerPhone")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.ToTable("HorecaInformations");
                });

            modelBuilder.Entity("sacmy.Server.Models.HorecaMenuImage", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Createddate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("HorecaInfoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("image");

                    b.HasKey("Id");

                    b.HasIndex("HorecaInfoId");

                    b.ToTable("HorecaMenuImage", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.HorecaStatictsInformation", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("BonnaPercentage")
                        .HasColumnType("int");

                    b.Property<string>("BonnaReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BranchesCount")
                        .HasColumnType("int");

                    b.Property<int?>("ChairsCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("HorecaInfoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsHeBonnaBuyer")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHeBuyingFromAnotherGlassAgency")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHeNudeBuyer")
                        .HasColumnType("bit")
                        .HasColumnName("isHeNudeBuyer");

                    b.Property<bool?>("IsHePasabahceBuyer")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHeSafeenAhmedCompanyCustomer")
                        .HasColumnType("bit");

                    b.Property<int?>("NudePercentage")
                        .HasColumnType("int");

                    b.Property<string>("NudeReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PasabahcePercentage")
                        .HasColumnType("int");

                    b.Property<string>("PasabahceReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<int?>("TablesCount")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_HorecaStatictsCompany");

                    b.HasIndex("HorecaInfoId");

                    b.ToTable("HorecaStatictsInformation", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.Item", b =>
                {
                    b.Property<string>("Barcod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("barcod");

                    b.Property<string>("BoxContain")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Category")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("category");

                    b.Property<string>("Cod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cod");

                    b.Property<string>("CodIqd")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("codIQD");

                    b.Property<double?>("Count")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("Factory")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("factory");

                    b.Property<string>("Imagling")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("imagling");

                    b.Property<string>("Inn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("inn");

                    b.Property<bool?>("IsplusOneChecked")
                        .HasColumnType("bit")
                        .HasColumnName("isplusOneChecked");

                    b.Property<string>("Item1")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("item");

                    b.Property<double?>("Mkaab")
                        .HasColumnType("float");

                    b.Property<string>("Outt")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("outt");

                    b.Property<double?>("PlusOne")
                        .HasColumnType("float")
                        .HasColumnName("plusOne");

                    b.Property<int?>("Points")
                        .HasColumnType("int");

                    b.Property<double?>("Prise")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0)
                        .HasColumnName("prise");

                    b.Property<string>("QiyasUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("qiyas_unit");

                    b.Property<int>("Secode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("secode");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Treasurer")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Treasurer");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("type");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.ToTable("item", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.Item1", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Area")
                        .HasColumnType("float");

                    b.Property<string>("Base")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Catalog")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Color")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Decription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<double?>("Diameter")
                        .HasColumnType("float");

                    b.Property<string>("Ean")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Function")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GlassType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("Height")
                        .HasColumnType("float");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Images")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InnerType")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<byte>("InnerTypeCount")
                        .HasColumnType("tinyint");

                    b.Property<string>("InnerTypeImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MinimumQuantityWarning")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OuterType")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<byte>("OuterTypeCount")
                        .HasColumnType("tinyint");

                    b.Property<string>("OuterTypeImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PattrenNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Points")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ProductionTechnique")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("SeCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("SecondryCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Series")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid?>("SpecificationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Top")
                        .HasColumnType("float");

                    b.Property<string>("Upc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("Volume")
                        .HasColumnType("float");

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SecondryCategoryId");

                    b.ToTable("Items", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.ItemCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SecondryCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ItemCategory", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.ItemImage", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset?>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("link");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.ToTable("ItemImages");
                });

            modelBuilder.Entity("sacmy.Server.Models.ItemSpecification", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DescriptionAr")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DescriptionAR");

                    b.Property<string>("DescriptionEn")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DescriptionEN");

                    b.Property<string>("DescriptionKr")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DescriptionKR");

                    b.Property<string>("DescriptionTr")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("DescriptionTR");

                    b.Property<string>("ImageName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TitleAr")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TitleEn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TitleEN");

                    b.Property<string>("TitleKr")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TitleKR");

                    b.Property<string>("TitleTr")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TitleTR");

                    b.HasKey("Id");

                    b.ToTable("ItemSpecification", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.ItemsItemSpecification", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SpecificationsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("SpecificationsId");

                    b.ToTable("Items_ItemSpecification", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.IxraciName", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("IxraciN")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Mob")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mob");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.ToTable("ixraci_Name", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.KpItemsProd", b =>
                {
                    b.Property<double?>("Area")
                        .HasColumnType("float");

                    b.Property<double?>("Base")
                        .HasColumnType("float");

                    b.Property<string>("BrandAr")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("BrandEn")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<Guid>("BrandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BrandImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrandKr")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("BrandTr")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("CatalogAr")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("CatalogEn")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<Guid?>("CatalogId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CatalogKr")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("CatalogTr")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("CategoryAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategoryImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryKr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryTr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollectionAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollectionEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CollectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CollectionImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollectionKr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollectionTr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Decription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Diameter")
                        .HasColumnType("float");

                    b.Property<string>("Ean")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("Height")
                        .HasColumnType("float");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InnerType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("InnerTypeCount")
                        .HasColumnType("int");

                    b.Property<string>("InnerTypeImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("OuterType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OuterTypeCount")
                        .HasColumnType("int");

                    b.Property<string>("OuterTypeImages")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatternNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Points")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Sku")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StoreBranch")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Store_Branch");

                    b.Property<string>("StoreName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("Top")
                        .HasColumnType("float");

                    b.Property<string>("Upc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("Volume")
                        .HasColumnType("float");

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.ToTable((string)null);

                    b.ToView("KP_Items_Prod", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.KpProductFirstImage", b =>
                {
                    b.Property<string>("ImageLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.ToTable((string)null);

                    b.ToView("KP_Product_First_Images", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.KpPurchase", b =>
                {
                    b.Property<string>("Codd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("codd");

                    b.Property<double?>("QttyPurch")
                        .HasColumnType("float")
                        .HasColumnName("Qtty_Purch");

                    b.Property<string>("Store")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.ToTable((string)null);

                    b.ToView("KP_Purchase", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.KpReturn", b =>
                {
                    b.Property<string>("Codd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("codd");

                    b.Property<double?>("QttyReturn")
                        .HasColumnType("float")
                        .HasColumnName("Qtty_Return");

                    b.Property<string>("Store")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.ToTable((string)null);

                    b.ToView("KP_Return", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.KpSale", b =>
                {
                    b.Property<string>("Codd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("codd");

                    b.Property<double?>("QttySales")
                        .HasColumnType("float")
                        .HasColumnName("Qtty_Sales");

                    b.Property<string>("Store")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.ToTable((string)null);

                    b.ToView("KP_Sales", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.KpStore", b =>
                {
                    b.Property<double?>("Area")
                        .HasColumnType("float");

                    b.Property<double?>("Base")
                        .HasColumnType("float");

                    b.Property<string>("BrandAr")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("BrandEn")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<Guid>("BrandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BrandImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrandKr")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("BrandTr")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("CatalogAr")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("CatalogEn")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<Guid?>("CatalogId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CatalogKr")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("CatalogTr")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("CategoryAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategoryImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryKr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryTr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollectionAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollectionEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CollectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CollectionImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollectionKr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CollectionTr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Decription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Diameter")
                        .HasColumnType("float");

                    b.Property<string>("Ean")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("Height")
                        .HasColumnType("float");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InnerType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("InnerTypeCount")
                        .HasColumnType("int");

                    b.Property<string>("InnerTypeImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("OuterType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OuterTypeCount")
                        .HasColumnType("int");

                    b.Property<string>("OuterTypeImages")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatternNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Points")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double?>("QttyPurch")
                        .HasColumnType("float")
                        .HasColumnName("Qtty_Purch");

                    b.Property<double?>("QttyReturn")
                        .HasColumnType("float")
                        .HasColumnName("Qtty_Return");

                    b.Property<double?>("QttySales")
                        .HasColumnType("float")
                        .HasColumnName("Qtty_Sales");

                    b.Property<string>("Sku")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StoreBranch")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Store_Branch");

                    b.Property<double?>("Top")
                        .HasColumnType("float");

                    b.Property<string>("Upc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("Volume")
                        .HasColumnType("float");

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.ToTable((string)null);

                    b.ToView("KP_Store", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.Leveel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Leveel1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("leveel");

                    b.ToTable("leveel", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.MandobName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ManAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Man_address");

                    b.Property<double?>("ManCcount")
                        .HasColumnType("float")
                        .HasColumnName("man_ccount");

                    b.Property<string>("ManMob")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Man_mob");

                    b.Property<string>("Mandob")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Pass")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("pass");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.Property<string>("Uusername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uusername");

                    b.ToTable("MandobName", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.Masraftype", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Masraftype1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("masraftype");

                    b.ToTable("masraftype", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.Material", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NameAr")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameKr")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameTr")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("sacmy.Server.Models.MmMaxzanByWajbaFullItem", b =>
                {
                    b.Property<double?>("AvrgPrice")
                        .HasColumnType("float");

                    b.Property<string>("Barcod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("barcod");

                    b.Property<string>("BoxContain")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Cod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cod");

                    b.Property<string>("CodIqd")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("codIQD");

                    b.Property<double?>("Count")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATE");

                    b.Property<string>("Factory")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("factory");

                    b.Property<string>("Item")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("item");

                    b.Property<int?>("Points")
                        .HasColumnType("int");

                    b.Property<double?>("Prise")
                        .HasColumnType("float")
                        .HasColumnName("prise");

                    b.Property<string>("QiyasUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("qiyas_unit");

                    b.Property<double?>("QttyPurch")
                        .HasColumnType("float")
                        .HasColumnName("Qtty_Purch");

                    b.Property<double?>("QttyReturn")
                        .HasColumnType("float")
                        .HasColumnName("Qtty_Return");

                    b.Property<double?>("QttySales")
                        .HasColumnType("float")
                        .HasColumnName("Qtty_Sales");

                    b.Property<double?>("Remain")
                        .HasColumnType("float");

                    b.Property<int>("Secode")
                        .HasColumnType("int")
                        .HasColumnName("secode");

                    b.Property<double?>("Smtotal")
                        .HasColumnType("float")
                        .HasColumnName("SMtotal");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<double?>("TotalRemain")
                        .HasColumnType("float")
                        .HasColumnName("Total_Remain");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("type");

                    b.Property<string>("Wajba")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("wajba");

                    b.ToTable((string)null);

                    b.ToView("MM_Maxzan_By_Wajba_Full_Items", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.MmMaxzanFullItemProcWithOutWajba", b =>
                {
                    b.Property<string>("BoxContain")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Cod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cod");

                    b.Property<string>("CodIqd")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("codIQD");

                    b.Property<double?>("Count")
                        .HasColumnType("float");

                    b.Property<string>("Factory")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("factory");

                    b.Property<string>("Item")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("item");

                    b.Property<double?>("Prise")
                        .HasColumnType("float")
                        .HasColumnName("prise");

                    b.Property<string>("QiyasUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("qiyas_unit");

                    b.Property<double?>("QttyPurch")
                        .HasColumnType("float")
                        .HasColumnName("Qtty_Purch");

                    b.Property<double?>("QttyReturn")
                        .HasColumnType("float")
                        .HasColumnName("Qtty_Return");

                    b.Property<double?>("QttySales")
                        .HasColumnType("float")
                        .HasColumnName("Qtty_Sales");

                    b.Property<double?>("Remain")
                        .HasColumnType("float");

                    b.Property<int>("Secode")
                        .HasColumnType("int")
                        .HasColumnName("secode");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<double?>("TotalRemain")
                        .HasColumnType("float")
                        .HasColumnName("Total_Remain");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("type");

                    b.ToTable((string)null);

                    b.ToView("MM_Maxzan_Full_Item_Proc_with_out_Wajba", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.MmMaxzanFullItemProcWithWajba", b =>
                {
                    b.Property<double?>("AvrgPrice")
                        .HasColumnType("float");

                    b.Property<string>("Barcod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("barcod");

                    b.Property<string>("BoxContain")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Cod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cod");

                    b.Property<string>("CodIqd")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("codIQD");

                    b.Property<double?>("Count")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATE");

                    b.Property<string>("Factory")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("factory");

                    b.Property<string>("Item")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("item");

                    b.Property<int?>("Points")
                        .HasColumnType("int");

                    b.Property<double?>("Prise")
                        .HasColumnType("float")
                        .HasColumnName("prise");

                    b.Property<string>("QiyasUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("qiyas_unit");

                    b.Property<double?>("QttyPurch")
                        .HasColumnType("float")
                        .HasColumnName("Qtty_Purch");

                    b.Property<double?>("QttyReturn")
                        .HasColumnType("float")
                        .HasColumnName("Qtty_Return");

                    b.Property<double?>("QttySales")
                        .HasColumnType("float")
                        .HasColumnName("Qtty_Sales");

                    b.Property<double?>("Remain")
                        .HasColumnType("float");

                    b.Property<int>("Secode")
                        .HasColumnType("int")
                        .HasColumnName("secode");

                    b.Property<double?>("Smtotal")
                        .HasColumnType("float")
                        .HasColumnName("SMtotal");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<double?>("TotalRemain")
                        .HasColumnType("float")
                        .HasColumnName("Total_Remain");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("type");

                    b.Property<string>("Wajba")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("wajba");

                    b.ToTable((string)null);

                    b.ToView("MM_Maxzan_Full_Item_Proc_with_Wajba", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.MmMaxzanN", b =>
                {
                    b.Property<double?>("AvrgPrice")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATE");

                    b.Property<double?>("QttyPurch")
                        .HasColumnType("float")
                        .HasColumnName("Qtty_Purch");

                    b.Property<double?>("QttyReturn")
                        .HasColumnType("float")
                        .HasColumnName("Qtty_Return");

                    b.Property<double?>("QttySales")
                        .HasColumnType("float")
                        .HasColumnName("Qtty_Sales");

                    b.Property<double?>("Remain")
                        .HasColumnType("float");

                    b.Property<int?>("Secode")
                        .HasColumnType("int")
                        .HasColumnName("secode");

                    b.Property<double?>("Smtotal")
                        .HasColumnType("float")
                        .HasColumnName("SMtotal");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Wajba")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("wajba");

                    b.ToTable((string)null);

                    b.ToView("MM_Maxzan_N", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.NnItem", b =>
                {
                    b.Property<string>("Barcod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("barcod");

                    b.Property<string>("BoxContain")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Category")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("category");

                    b.Property<string>("Cod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cod");

                    b.Property<string>("CodIqd")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("codIQD");

                    b.Property<double?>("Count")
                        .HasColumnType("float");

                    b.Property<string>("Factory")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("factory");

                    b.Property<string>("Imagling")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("imagling");

                    b.Property<string>("Inn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("inn");

                    b.Property<string>("Item")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("item");

                    b.Property<string>("Outt")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("outt");

                    b.Property<double?>("Prise")
                        .HasColumnType("float")
                        .HasColumnName("prise");

                    b.Property<string>("QiyasUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("qiyas_unit");

                    b.Property<int>("Secode")
                        .HasColumnType("int")
                        .HasColumnName("secode");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("type");

                    b.ToTable((string)null);

                    b.ToView("NN_Items", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.NnPurchaseQtty", b =>
                {
                    b.Property<double?>("PurchQtty")
                        .HasColumnType("float")
                        .HasColumnName("Purch_Qtty");

                    b.Property<int?>("Secode")
                        .HasColumnType("int")
                        .HasColumnName("secode");

                    b.ToTable((string)null);

                    b.ToView("NN_Purchase_Qtty", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.NnRaseedItem", b =>
                {
                    b.Property<string>("Cod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cod");

                    b.Property<string>("CodIqd")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("codIQD");

                    b.Property<string>("Factory")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("factory");

                    b.Property<string>("Item")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("item");

                    b.Property<double?>("PurchQtty")
                        .HasColumnType("float")
                        .HasColumnName("Purch_Qtty");

                    b.Property<double?>("RemainQtty")
                        .HasColumnType("float")
                        .HasColumnName("Remain_Qtty");

                    b.Property<double?>("ReturnQtty")
                        .HasColumnType("float")
                        .HasColumnName("Return_Qtty");

                    b.Property<double?>("SalesQtty")
                        .HasColumnType("float")
                        .HasColumnName("Sales_Qtty");

                    b.Property<int>("Secode")
                        .HasColumnType("int")
                        .HasColumnName("secode");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("type");

                    b.ToTable((string)null);

                    b.ToView("NN_Raseed_Items", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.NnRaseedItemsBonna", b =>
                {
                    b.Property<string>("Barcod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("barcod");

                    b.Property<string>("Category")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("category");

                    b.Property<string>("Cod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cod");

                    b.Property<string>("CodIqd")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("codIQD");

                    b.Property<string>("Factory")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("factory");

                    b.Property<string>("Inn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("inn");

                    b.Property<string>("Item")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("item");

                    b.Property<string>("Outt")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("outt");

                    b.Property<double?>("Prise")
                        .HasColumnType("float")
                        .HasColumnName("prise");

                    b.Property<double?>("PurchQtty")
                        .HasColumnType("float")
                        .HasColumnName("Purch_Qtty");

                    b.Property<double?>("RemainQtty")
                        .HasColumnType("float")
                        .HasColumnName("Remain_Qtty");

                    b.Property<double?>("ReturnQtty")
                        .HasColumnType("float")
                        .HasColumnName("Return_Qtty");

                    b.Property<double?>("SalesQtty")
                        .HasColumnType("float")
                        .HasColumnName("Sales_Qtty");

                    b.Property<int>("Secode")
                        .HasColumnType("int")
                        .HasColumnName("secode");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("type");

                    b.ToTable((string)null);

                    b.ToView("NN_Raseed_Items_Bonna", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.NnRaseedItemsPasabahceNude", b =>
                {
                    b.Property<string>("Barcod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("barcod");

                    b.Property<string>("Category")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("category");

                    b.Property<string>("Cod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cod");

                    b.Property<string>("CodIqd")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("codIQD");

                    b.Property<string>("Factory")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("factory");

                    b.Property<string>("Inn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("inn");

                    b.Property<string>("Item")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("item");

                    b.Property<string>("Outt")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("outt");

                    b.Property<double?>("Prise")
                        .HasColumnType("float")
                        .HasColumnName("prise");

                    b.Property<double?>("PurchQtty")
                        .HasColumnType("float")
                        .HasColumnName("Purch_Qtty");

                    b.Property<double?>("RemainQtty")
                        .HasColumnType("float")
                        .HasColumnName("Remain_Qtty");

                    b.Property<double?>("ReturnQtty")
                        .HasColumnType("float")
                        .HasColumnName("Return_Qtty");

                    b.Property<double?>("SalesQtty")
                        .HasColumnType("float")
                        .HasColumnName("Sales_Qtty");

                    b.Property<int>("Secode")
                        .HasColumnType("int")
                        .HasColumnName("secode");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("type");

                    b.ToTable((string)null);

                    b.ToView("NN_Raseed_Items_Pasabahce_NUDE", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.NnReturnQtty", b =>
                {
                    b.Property<double?>("ReturnQtty")
                        .HasColumnType("float")
                        .HasColumnName("Return_Qtty");

                    b.Property<int?>("Secode")
                        .HasColumnType("int")
                        .HasColumnName("secode");

                    b.ToTable((string)null);

                    b.ToView("NN_Return_Qtty", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.NnSalesQtty", b =>
                {
                    b.Property<double?>("SalesQtty")
                        .HasColumnType("float")
                        .HasColumnName("Sales_Qtty");

                    b.Property<int?>("Secode")
                        .HasColumnType("int")
                        .HasColumnName("secode");

                    b.ToTable((string)null);

                    b.ToView("NN_Sales_Qtty", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("sacmy.Server.Models.OfficeName", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<string>("CurrencySymbol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Mob")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mob");

                    b.Property<string>("OfficeN")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.ToTable("Office_Name", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.Offiice", b =>
                {
                    b.Property<string>("Addresss")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("addresss");

                    b.Property<string>("EMail")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("e_mail");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Mob")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Offiice1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("offiice");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.ToTable("offiice", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.OnlineOrder", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<string>("Address")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("")
                        .HasColumnName("address");

                    b.Property<bool?>("Checked")
                        .HasColumnType("bit")
                        .HasColumnName("checked");

                    b.Property<string>("CostumerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Costumer_Name");

                    b.Property<DateTimeOffset?>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("Date")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<DateTimeOffset?>("Now")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("now")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Sub")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Treasurer")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Treasurer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Uuser")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("")
                        .HasColumnName("uuser");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Online_Order", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.OnlineOrderItem", b =>
                {
                    b.Property<int>("OrR")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Or_R");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrR"));

                    b.Property<string>("Barcod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CancelledDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool?>("IsCancelled")
                        .HasColumnType("bit");

                    b.Property<string>("Item")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MoldNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    b.Property<int?>("Point")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("money");

                    b.Property<double?>("Qtty")
                        .HasColumnType("float");

                    b.Property<string>("Secod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("secod");

                    b.Property<Guid?>("SecondryCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Sku")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SKU");

                    b.Property<string>("Sub")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Total")
                        .HasColumnType("money");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("OrR");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ItemId");

                    b.HasIndex("OrderId");

                    b.HasIndex("SecondryCategoryId");

                    b.ToTable("Online_Order_Items", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.OrderInvoice", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("DATE")
                        .HasDefaultValueSql("(CONVERT([datetime],CONVERT([varchar],getdate(),(1)),(1)))");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("ID");

                    b.Property<int?>("Idd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("idd");

                    b.Property<string>("Notes")
                        .HasColumnType("ntext")
                        .HasColumnName("notes");

                    b.Property<DateTime?>("Now")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("now")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<decimal?>("Tootal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m);

                    b.Property<string>("Treasurer")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Treasurer");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.ToTable("Order_Invoice", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.OrderInvoiceItem", b =>
                {
                    b.Property<string>("BoxContain")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("CodIqd")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("codIQD");

                    b.Property<string>("Codd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("codd");

                    b.Property<double?>("Countt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("Factoryy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("factoryy");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Itemm")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("itemm");

                    b.Property<int>("OrId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OR_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrId"));

                    b.Property<decimal?>("Prise")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m)
                        .HasColumnName("prise");

                    b.Property<string>("QiyasUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("qiyas_unit");

                    b.Property<double?>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0)
                        .HasColumnName("quantity")
                        .HasComment("Qtt_Remaining");

                    b.Property<int?>("Secode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("secode");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<decimal?>("Total")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m)
                        .HasColumnName("total");

                    b.Property<string>("Typee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("typee");

                    b.ToTable("Order_Invoice_ITEM", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.OrderStage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("DescriptionAr")
                        .IsRequired()
                        .HasMaxLength(355)
                        .HasColumnType("nvarchar(355)");

                    b.Property<string>("DescriptionEn")
                        .IsRequired()
                        .HasMaxLength(355)
                        .HasColumnType("nvarchar(355)");

                    b.Property<string>("DescriptionKr")
                        .IsRequired()
                        .HasMaxLength(355)
                        .HasColumnType("nvarchar(355)");

                    b.Property<string>("DescriptionTr")
                        .IsRequired()
                        .HasMaxLength(355)
                        .HasColumnType("nvarchar(355)");

                    b.Property<int>("Sequence")
                        .HasColumnType("int");

                    b.Property<string>("StageNameAr")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("StageNameEn")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("StageNameKr")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("StageNameTr")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__OrderSta__3214EC079D9388D9");

                    b.ToTable("OrderStage", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.OrderTracking", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<Guid>("StageId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("StageId");

                    b.ToTable("OrderTracking", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.OrderTrackingAttachment", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Attachment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("OrderTrackingId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("OrderTrackingId");

                    b.ToTable("OrderTrackingAttachment", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.OrderTrackingInvoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BuyFatoraId")
                        .HasColumnType("int")
                        .HasColumnName("BuyFatoraId");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OrderTrackingId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BuyFatoraId");

                    b.HasIndex("OrderTrackingId");

                    b.ToTable("OrderTrackingInvoice", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.OtherBrand", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BrandName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("HorecaInfoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("HorecaInfoId");

                    b.ToTable("OtherBrand", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.OtherGlassAgency", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("GlassAgencyName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("HorecaInfoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("HorecaInfoId");

                    b.ToTable("OtherGlassAgency", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.PasabahceSeries", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("HorecaInfoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Series")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("HorecaInfoId");

                    b.ToTable("PasabahceSeries");
                });

            modelBuilder.Entity("sacmy.Server.Models.PayFromOffice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<DateTime?>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("date")
                        .HasDefaultValueSql("(CONVERT([datetime],CONVERT([varchar],getdate(),(1)),(1)))");

                    b.Property<decimal?>("Dolar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m);

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<decimal?>("IqdTtal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m)
                        .HasColumnName("IQD_Ttal");

                    b.Property<string>("Note")
                        .HasColumnType("ntext")
                        .HasColumnName("note");

                    b.Property<DateTime?>("Now")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("now")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Offiice")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("offiice");

                    b.Property<decimal?>("Ptotal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m);

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Symbol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Treasurer")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Treasurer");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.HasKey("Id");

                    b.ToTable("Pay_From_Office", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.PayFromQasa", b =>
                {
                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("date");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("id");

                    b.Property<string>("Note")
                        .HasColumnType("ntext")
                        .HasColumnName("note");

                    b.Property<DateTime?>("Now")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("now")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ReName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Re_Name");

                    b.Property<string>("Subb")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("subb");

                    b.Property<decimal?>("Toetal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m);

                    b.Property<string>("Treasurer")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Treasurer");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.ToTable("Pay_from_qasa", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.PayToCustomer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<string>("Customer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("customer");

                    b.Property<DateTime?>("Datee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("datee")
                        .HasDefaultValueSql("(CONVERT([datetime],CONVERT([varchar],getdate(),(1)),(1)))");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<string>("Notes")
                        .HasColumnType("ntext")
                        .HasColumnName("notes");

                    b.Property<DateTime?>("Now")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("now")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("Runn")
                        .HasColumnType("bit")
                        .HasColumnName("runn");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Symbol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ToOffice")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("To_Office");

                    b.Property<decimal?>("Total")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m)
                        .HasColumnName("total");

                    b.Property<string>("Treasurer")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Treasurer");

                    b.Property<string>("Typee")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("typee");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.HasKey("Id");

                    b.ToTable("PayToCustomer", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.PayToIxraci", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<DateTime?>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("date")
                        .HasDefaultValueSql("(CONVERT([datetime],CONVERT([varchar],getdate(),(1)),(1)))");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<string>("FrmOffice")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Frm_Office");

                    b.Property<string>("IxraciN")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ixraciN");

                    b.Property<string>("Notes")
                        .HasColumnType("ntext")
                        .HasColumnName("notes");

                    b.Property<DateTime?>("Now")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("now")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("Runn")
                        .HasColumnType("bit")
                        .HasColumnName("runn");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Symbol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Total")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m)
                        .HasColumnName("total");

                    b.Property<string>("Treasurer")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Treasurer");

                    b.Property<string>("Typee")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("typee");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.HasKey("Id");

                    b.ToTable("PayTo_ixraci", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.PayToMandob", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("ID");

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<DateTime?>("Datee")
                        .HasColumnType("datetime2")
                        .HasColumnName("datee");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<string>("Mandob")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Notes")
                        .HasColumnType("ntext")
                        .HasColumnName("notes");

                    b.Property<DateTime?>("Now")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("now")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("PayType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("Runn")
                        .HasColumnType("bit")
                        .HasColumnName("runn");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Symbol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ToOffice")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("To_Office");

                    b.Property<decimal?>("Total")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m)
                        .HasColumnName("total");

                    b.Property<string>("Treasurer")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Treasurer");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.HasKey("Id")
                        .HasName("PK_PayToMandob_1");

                    b.ToTable("PayToMandob", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.PayToOffice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<DateTime?>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("date")
                        .HasDefaultValueSql("(CONVERT([datetime],CONVERT([varchar],getdate(),(1)),(1)))");

                    b.Property<decimal?>("Dolar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m);

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<decimal?>("IqdTtal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m)
                        .HasColumnName("IQD_Ttal");

                    b.Property<string>("Note")
                        .HasColumnType("ntext")
                        .HasColumnName("note");

                    b.Property<DateTime?>("Now")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("now")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Offiice")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("offiice");

                    b.Property<decimal?>("Ptotal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m);

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Symbol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Treasurer")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Treasurer");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.HasKey("Id")
                        .HasName("PK_PayToOffice3_1");

                    b.ToTable("PayToOffice", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.PayToQasa", b =>
                {
                    b.Property<DateTime?>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("date")
                        .HasDefaultValueSql("(CONVERT([datetime],CONVERT([varchar],getdate(),(1)),(1)))");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("id");

                    b.Property<string>("Note")
                        .HasColumnType("ntext")
                        .HasColumnName("note");

                    b.Property<DateTime?>("Now")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("now")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ReName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Re_Name");

                    b.Property<decimal?>("ReTotal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m);

                    b.Property<string>("Subb")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("subb");

                    b.Property<string>("Treasurer")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Treasurer");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.ToTable("Pay_To_qasa", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.PayfrmCostomer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("ID");

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<string>("Customer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("customer");

                    b.Property<DateTime?>("Datee")
                        .HasColumnType("datetime2")
                        .HasColumnName("datee");

                    b.Property<decimal?>("Dolar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m);

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<decimal?>("Iqd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m)
                        .HasColumnName("IQD");

                    b.Property<string>("Notes")
                        .HasColumnType("ntext")
                        .HasColumnName("notes");

                    b.Property<DateTime?>("Now")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("now")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("PayType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("Runn")
                        .HasColumnType("bit")
                        .HasColumnName("runn");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Symbol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ToOffice")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("To_Office");

                    b.Property<decimal?>("Total")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m)
                        .HasColumnName("total");

                    b.Property<string>("Treasurer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.HasKey("Id")
                        .HasName("PK_PayfrmCostomer_1");

                    b.ToTable("PayfrmCostomer", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.Paytypee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ptype")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ptype");

                    b.ToTable("paytypee", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.Person", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Mob")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mob");

                    b.Property<string>("Person1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Person");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.ToTable("PersonS", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.PointsReward", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("PointsRewards");
                });

            modelBuilder.Entity("sacmy.Server.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Area")
                        .HasColumnType("float");

                    b.Property<double?>("Base")
                        .HasColumnType("float");

                    b.Property<Guid>("BrandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CatalogId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CollectionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Decription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<double?>("Diameter")
                        .HasColumnType("float");

                    b.Property<string>("Ean")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("Height")
                        .HasColumnType("float");

                    b.Property<string>("InnerType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("InnerTypeCount")
                        .HasColumnType("int");

                    b.Property<string>("InnerTypeImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("MaterialId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("OuterType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OuterTypeCount")
                        .HasColumnType("int");

                    b.Property<string>("OuterTypeImages")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatternNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Points")
                        .HasMaxLength(10)
                        .HasColumnType("int")
                        .IsFixedLength();

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Sku")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("Top")
                        .HasColumnType("float");

                    b.Property<string>("Upc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<double?>("Volume")
                        .HasColumnType("float");

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "BrandId" }, "IX_Products_BrandId");

                    b.HasIndex(new[] { "CatalogId" }, "IX_Products_CatalogId");

                    b.HasIndex(new[] { "CategoryId" }, "IX_Products_CategoryId");

                    b.HasIndex(new[] { "CollectionId" }, "IX_Products_CollectionId");

                    b.HasIndex(new[] { "MaterialId" }, "IX_Products_MaterialId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("sacmy.Server.Models.ProductImage", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ImageLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ProductId" }, "IX_ProductImages_ProductId");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("sacmy.Server.Models.PurchaseInvoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("ID");

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<string>("CarNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("carNo");

                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("DATE")
                        .HasDefaultValueSql("(CONVERT([datetime],CONVERT([varchar],getdate(),(1)),(1)))");

                    b.Property<decimal?>("Dolar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m);

                    b.Property<string>("Driver")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DriverMob")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("driverMob");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<bool?>("Hidee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("hidee");

                    b.Property<int?>("Idd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("idd");

                    b.Property<string>("Notes")
                        .HasColumnType("ntext")
                        .HasColumnName("notes");

                    b.Property<DateTime?>("Now")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("now")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<decimal?>("Tootal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m);

                    b.Property<string>("Treasurer")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Treasurer");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.Property<string>("Wajba")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("wajba");

                    b.HasKey("Id");

                    b.ToTable("Purchase_Invoice", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.PurchaseInvoiceItem", b =>
                {
                    b.Property<int>("PuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PU_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PuId"));

                    b.Property<Guid?>("BatchId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BoxContain")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("CodIqd")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("codIQD");

                    b.Property<string>("Codd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("codd");

                    b.Property<double?>("Countt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("Factoryy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("factoryy");

                    b.Property<double?>("FirstQtty")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0)
                        .HasComment("Qtt_Remaining");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Itemm")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("itemm");

                    b.Property<decimal?>("Masraf")
                        .HasColumnType("money");

                    b.Property<double?>("Naqis")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0)
                        .HasComment("Qtt_Remaining");

                    b.Property<decimal?>("Prise")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m)
                        .HasColumnName("prise");

                    b.Property<string>("QiyasUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("qiyas_unit");

                    b.Property<double?>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0)
                        .HasColumnName("quantity")
                        .HasComment("Qtt_Remaining");

                    b.Property<int?>("Secode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("secode");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<decimal?>("Total")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m)
                        .HasColumnName("total");

                    b.Property<decimal?>("TotlPrise")
                        .HasColumnType("money");

                    b.Property<string>("Typee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("typee");

                    b.Property<string>("Wajba")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("wajba");

                    b.Property<float?>("Weznn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("real")
                        .HasDefaultValue(0f);

                    b.Property<double?>("Ziyada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0)
                        .HasComment("Qtt_Remaining");

                    b.HasKey("PuId");

                    b.ToTable("Purchase_Invoice_ITEMS", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.PurchaseMasarif", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("ID");

                    b.Property<decimal?>("Amola")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m)
                        .HasColumnName("amola");

                    b.Property<DateTime?>("Datee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("datee")
                        .HasDefaultValueSql("(CONVERT([datetime],CONVERT([varchar],getdate(),(1)),(1)))");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<decimal?>("Gomrk")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m)
                        .HasColumnName("gomrk");

                    b.Property<decimal?>("Hamalya")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m)
                        .HasColumnName("hamalya");

                    b.Property<decimal?>("Ijra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m)
                        .HasColumnName("ijra");

                    b.Property<string>("IxraciN")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ixraciN");

                    b.Property<string>("Notes")
                        .HasColumnType("ntext")
                        .HasColumnName("notes");

                    b.Property<decimal?>("Oxra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m)
                        .HasColumnName("oxra");

                    b.Property<bool?>("Runn")
                        .HasColumnType("bit");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<decimal?>("Tootaal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m)
                        .HasColumnName("tootaal");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.HasKey("Id");

                    b.ToTable("Purchase_masarif", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.PurchaseSum4search", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<decimal?>("Stotal")
                        .HasColumnType("money")
                        .HasColumnName("STOTAL");

                    b.ToTable((string)null);

                    b.ToView("Purchase_Sum_4Search", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QasaExChange", b =>
                {
                    b.Property<decimal?>("CurrencyPrice")
                        .HasColumnType("money");

                    b.Property<DateTime?>("Datee")
                        .HasColumnType("datetime2")
                        .HasColumnName("datee");

                    b.Property<bool?>("Fromm")
                        .HasColumnType("bit");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Note")
                        .HasColumnType("ntext")
                        .HasColumnName("note");

                    b.Property<DateTime?>("Now")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("now")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Qasa")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Qasa_IQD");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Symbol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SymbolL")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("Too")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tootall")
                        .HasColumnType("money");

                    b.Property<decimal?>("TotaLlafter")
                        .HasColumnType("money")
                        .HasColumnName("totaLLAfter");

                    b.Property<string>("Treasurer")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Treasurer");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.ToTable("Qasa_ExChange", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QasaExChangeOffice", b =>
                {
                    b.Property<decimal?>("CurrencyPrice")
                        .HasColumnType("money");

                    b.Property<DateTime?>("Datee")
                        .HasColumnType("datetime2")
                        .HasColumnName("datee");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<string>("EventIdOther")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id_Other");

                    b.Property<bool?>("Fromm")
                        .HasColumnType("bit");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Note")
                        .HasColumnType("ntext")
                        .HasColumnName("note");

                    b.Property<DateTime?>("Now")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("now")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Office")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("OfficeOther")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("Office_Other");

                    b.Property<string>("Qasa")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Qasa_IQD");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Symbol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SymbolL")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("Too")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Tootall")
                        .HasColumnType("money");

                    b.Property<decimal?>("TotaLlafter")
                        .HasColumnType("money")
                        .HasColumnName("totaLLAfter");

                    b.Property<string>("Treasurer")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Treasurer");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.ToTable("Qasa_ExChange_Office", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QiyasUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("QiyasUnit1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("qiyas_unit");

                    b.ToTable("qiyas_unit", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqArbahForBuyFatora", b =>
                {
                    b.Property<decimal?>("ArbahForEchQtty")
                        .HasColumnType("money");

                    b.Property<string>("BoxContain")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool?>("Checkeed")
                        .HasColumnType("bit")
                        .HasColumnName("checkeed");

                    b.Property<string>("CodIqd")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("codIQD");

                    b.Property<string>("Codd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("codd");

                    b.Property<double?>("Countt")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Datee")
                        .HasColumnType("datetime2")
                        .HasColumnName("datee");

                    b.Property<string>("Factoryy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("factoryy");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("Idd")
                        .HasColumnType("int")
                        .HasColumnName("idd");

                    b.Property<string>("Itemm")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("itemm");

                    b.Property<decimal?>("Prise")
                        .HasColumnType("money")
                        .HasColumnName("prise");

                    b.Property<decimal?>("PurchasePrise")
                        .HasColumnType("money")
                        .HasColumnName("Purchase_prise");

                    b.Property<string>("QiyasUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("qiyas_unit");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float")
                        .HasColumnName("quantity");

                    b.Property<double?>("SafiArbah")
                        .HasColumnType("float");

                    b.Property<int?>("Secode")
                        .HasColumnType("int")
                        .HasColumnName("secode");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<decimal?>("Total")
                        .HasColumnType("money")
                        .HasColumnName("total");

                    b.Property<string>("Typee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("typee");

                    b.Property<string>("Wajba")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("wajba");

                    b.ToTable((string)null);

                    b.ToView("QQ_Arbah_For_Buy_Fatora", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqBuyByWajba", b =>
                {
                    b.Property<double?>("QttySales")
                        .HasColumnType("float")
                        .HasColumnName("Qtty_Sales");

                    b.Property<int?>("Secode")
                        .HasColumnType("int")
                        .HasColumnName("secode");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Wajba")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("wajba");

                    b.ToTable((string)null);

                    b.ToView("QQ_Buy_By_Wajba", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqBuyFatoraItemsForCountCostumer", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<string>("BoxContain")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("BuId")
                        .HasColumnType("int")
                        .HasColumnName("BU_ID");

                    b.Property<string>("CarNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("carNo");

                    b.Property<string>("CodIqd")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("codIQD");

                    b.Property<string>("Codd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("codd");

                    b.Property<double?>("Countt")
                        .HasColumnType("float");

                    b.Property<string>("Customer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("customer");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("DATE");

                    b.Property<DateTime?>("Datee")
                        .HasColumnType("datetime2")
                        .HasColumnName("datee");

                    b.Property<double?>("Discount")
                        .HasColumnType("float")
                        .HasColumnName("discount");

                    b.Property<double?>("Dolar")
                        .HasColumnType("float");

                    b.Property<string>("Driver")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DriverMob")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("driverMob");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<string>("Factoryy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("factoryy");

                    b.Property<decimal?>("Hamalya")
                        .HasColumnType("money")
                        .HasColumnName("hamalya");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("Idd")
                        .HasColumnType("int")
                        .HasColumnName("idd");

                    b.Property<decimal?>("Ijraaa")
                        .HasColumnType("money")
                        .HasColumnName("ijraaa");

                    b.Property<string>("Itemm")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("itemm");

                    b.Property<double?>("ManCcount")
                        .HasColumnType("float")
                        .HasColumnName("man_ccount");

                    b.Property<string>("Mandob")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Mob")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mob");

                    b.Property<string>("Notes")
                        .HasColumnType("ntext")
                        .HasColumnName("notes");

                    b.Property<DateTime?>("Now")
                        .HasColumnType("datetime")
                        .HasColumnName("now");

                    b.Property<decimal?>("Payed")
                        .HasColumnType("money");

                    b.Property<decimal?>("Prise")
                        .HasColumnType("money")
                        .HasColumnName("prise");

                    b.Property<string>("QiyasUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("qiyas_unit");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float")
                        .HasColumnName("quantity");

                    b.Property<decimal?>("Remaing")
                        .HasColumnType("money");

                    b.Property<int?>("Secode")
                        .HasColumnType("int")
                        .HasColumnName("secode");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<decimal?>("Tootal")
                        .HasColumnType("money");

                    b.Property<decimal?>("Total")
                        .HasColumnType("money")
                        .HasColumnName("total");

                    b.Property<string>("Treasurer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Typee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("typee");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.Property<string>("Wajba")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("wajba");

                    b.Property<float?>("Weznn")
                        .HasColumnType("real");

                    b.ToTable((string)null);

                    b.ToView("QQ_Buy_Fatora_Items_For_CountCostumer", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqBuyItemsForDatagridview", b =>
                {
                    b.Property<string>("BoxContain")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("BuId")
                        .HasColumnType("int")
                        .HasColumnName("BU_ID");

                    b.Property<string>("CodIqd")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("codIQD");

                    b.Property<string>("Codd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("codd");

                    b.Property<double?>("Countt")
                        .HasColumnType("float");

                    b.Property<string>("Customer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("customer");

                    b.Property<DateTime?>("Datee")
                        .HasColumnType("datetime2")
                        .HasColumnName("datee");

                    b.Property<string>("Factoryy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("factoryy");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Itemm")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("itemm");

                    b.Property<decimal?>("Prise")
                        .HasColumnType("money")
                        .HasColumnName("prise");

                    b.Property<decimal?>("PurchasePrise")
                        .HasColumnType("money")
                        .HasColumnName("Purchase_prise");

                    b.Property<string>("QiyasUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("qiyas_unit");

                    b.Property<double?>("QttRemaining")
                        .HasColumnType("float")
                        .HasColumnName("Qtt_Remaining");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float")
                        .HasColumnName("quantity");

                    b.Property<decimal?>("Rub7Karton")
                        .HasColumnType("money")
                        .HasColumnName("Rub7_karton");

                    b.Property<int?>("Secode")
                        .HasColumnType("int")
                        .HasColumnName("secode");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<decimal?>("Total")
                        .HasColumnType("money")
                        .HasColumnName("total");

                    b.Property<string>("Typee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("typee");

                    b.Property<string>("Wajba")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("wajba");

                    b.Property<float?>("Weznn")
                        .HasColumnType("real");

                    b.ToTable((string)null);

                    b.ToView("QQ_Buy_Items_For_Datagridview", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqBuyItemsForReturnFatoraInserting", b =>
                {
                    b.Property<string>("CodIqd")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("codIQD");

                    b.Property<string>("Codd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("codd");

                    b.Property<double?>("Countt")
                        .HasColumnType("float");

                    b.Property<string>("Customer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("customer");

                    b.Property<string>("Factoryy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("factoryy");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Itemm")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("itemm");

                    b.Property<decimal?>("Prise")
                        .HasColumnType("money")
                        .HasColumnName("prise");

                    b.Property<string>("QiyasUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("qiyas_unit");

                    b.Property<double?>("QttyBuy")
                        .HasColumnType("float");

                    b.Property<int?>("Secode")
                        .HasColumnType("int")
                        .HasColumnName("secode");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Typee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("typee");

                    b.Property<string>("Wajba")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("wajba");

                    b.ToTable((string)null);

                    b.ToView("QQ_Buy_Items_For_Return_Fatora_Inserting", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqCostumerRemainForReport", b =>
                {
                    b.Property<string>("Costumer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("costumer");

                    b.Property<DateTime?>("Datee")
                        .HasColumnType("datetime2")
                        .HasColumnName("datee");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<int>("IdEvent")
                        .HasColumnType("int")
                        .HasColumnName("id_event");

                    b.Property<decimal?>("Runningtotal")
                        .HasColumnType("money")
                        .HasColumnName("runningtotal");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Typeevent")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("typeevent");

                    b.ToTable((string)null);

                    b.ToView("QQ_Costumer_Remain_For_Reports", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqCountCompanyPurchaseMasarif", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<decimal?>("Amola")
                        .HasColumnType("money")
                        .HasColumnName("amola");

                    b.Property<string>("CarNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("carNo");

                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATE");

                    b.Property<DateTime?>("Datee")
                        .HasColumnType("datetime2")
                        .HasColumnName("datee");

                    b.Property<string>("Driver")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DriverMob")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("driverMob");

                    b.Property<decimal?>("Gomrk")
                        .HasColumnType("money")
                        .HasColumnName("gomrk");

                    b.Property<decimal?>("Hamalya")
                        .HasColumnType("money")
                        .HasColumnName("hamalya");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("Idd")
                        .HasColumnType("int")
                        .HasColumnName("idd");

                    b.Property<decimal?>("Ijra")
                        .HasColumnType("money")
                        .HasColumnName("ijra");

                    b.Property<string>("IxraciN")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ixraciN");

                    b.Property<string>("MNote")
                        .HasColumnType("ntext")
                        .HasColumnName("M_Note");

                    b.Property<string>("Notes")
                        .HasColumnType("ntext")
                        .HasColumnName("notes");

                    b.Property<decimal?>("Oxra")
                        .HasColumnType("money")
                        .HasColumnName("oxra");

                    b.Property<bool?>("Runn")
                        .HasColumnType("bit");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<decimal?>("Tootaal")
                        .HasColumnType("money")
                        .HasColumnName("tootaal");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.Property<string>("Wajba")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("wajba");

                    b.ToTable((string)null);

                    b.ToView("QQ_count_Company_Purchase_Masarif", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqCountIxraciPurchaseMasarif", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<decimal?>("Amola")
                        .HasColumnType("money")
                        .HasColumnName("amola");

                    b.Property<string>("CarNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("carNo");

                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATE");

                    b.Property<DateTime?>("Datee")
                        .HasColumnType("datetime2")
                        .HasColumnName("datee");

                    b.Property<string>("Driver")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DriverMob")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("driverMob");

                    b.Property<decimal?>("Gomrk")
                        .HasColumnType("money")
                        .HasColumnName("gomrk");

                    b.Property<decimal?>("Hamalya")
                        .HasColumnType("money")
                        .HasColumnName("hamalya");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("Idd")
                        .HasColumnType("int")
                        .HasColumnName("idd");

                    b.Property<decimal?>("Ijra")
                        .HasColumnType("money")
                        .HasColumnName("ijra");

                    b.Property<string>("IxraciN")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ixraciN");

                    b.Property<string>("MNote")
                        .HasColumnType("ntext")
                        .HasColumnName("M_Note");

                    b.Property<string>("Notes")
                        .HasColumnType("ntext")
                        .HasColumnName("notes");

                    b.Property<decimal?>("Oxra")
                        .HasColumnType("money")
                        .HasColumnName("oxra");

                    b.Property<bool?>("Runn")
                        .HasColumnType("bit");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<decimal?>("Tootaal")
                        .HasColumnType("money")
                        .HasColumnName("tootaal");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.Property<string>("Wajba")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("wajba");

                    b.ToTable((string)null);

                    b.ToView("QQ_count_Ixraci_Purchase_Masarif", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqCountPersonPayFromQasa", b =>
                {
                    b.Property<string>("ReName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Re_Name");

                    b.Property<string>("Subb")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("subb");

                    b.Property<decimal?>("Toetal")
                        .HasColumnType("money");

                    b.ToTable((string)null);

                    b.ToView("QQ_Count_Person_Pay_From_Qasa", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqCountPersonPayToQasa", b =>
                {
                    b.Property<string>("ReName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Re_Name");

                    b.Property<decimal?>("ReTotal")
                        .HasColumnType("money");

                    b.Property<string>("Subb")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("subb");

                    b.ToTable((string)null);

                    b.ToView("QQ_Count_Person_Pay_To_Qasa", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqItemsForPurchase", b =>
                {
                    b.Property<string>("Barcod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("barcod");

                    b.Property<string>("BoxContain")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Cod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cod");

                    b.Property<string>("CodIqd")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("codIQD");

                    b.Property<double?>("Count")
                        .HasColumnType("float");

                    b.Property<string>("Factory")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("factory");

                    b.Property<string>("Item")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("item");

                    b.Property<double?>("Mkaab")
                        .HasColumnType("float");

                    b.Property<string>("QiyasUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("qiyas_unit");

                    b.Property<int>("Secode")
                        .HasColumnType("int")
                        .HasColumnName("secode");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("type");

                    b.ToTable((string)null);

                    b.ToView("QQ_Items_For_Purchase", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqMasarifPurchaseeeeeeeeeee", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<decimal?>("Amola")
                        .HasColumnType("money")
                        .HasColumnName("amola");

                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Datee")
                        .HasColumnType("datetime2")
                        .HasColumnName("datee");

                    b.Property<string>("Driver")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<string>("Expr1")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<decimal?>("Gomrk")
                        .HasColumnType("money")
                        .HasColumnName("gomrk");

                    b.Property<decimal?>("Hamalya")
                        .HasColumnType("money")
                        .HasColumnName("hamalya");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<decimal?>("Ijra")
                        .HasColumnType("money")
                        .HasColumnName("ijra");

                    b.Property<string>("IxraciN")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ixraciN");

                    b.Property<string>("Notes")
                        .HasColumnType("ntext")
                        .HasColumnName("notes");

                    b.Property<decimal?>("Oxra")
                        .HasColumnType("money")
                        .HasColumnName("oxra");

                    b.Property<bool?>("Runn")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Ssstotal")
                        .HasColumnType("money")
                        .HasColumnName("SSSTotal");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<decimal?>("Tootaal")
                        .HasColumnType("money")
                        .HasColumnName("tootaal");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.Property<string>("Wajba")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("wajba");

                    b.ToTable((string)null);

                    b.ToView("QQ_Masarif_Purchaseeeeeeeeeee", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqMaxzan", b =>
                {
                    b.Property<double?>("AvrgPrice")
                        .HasColumnType("float");

                    b.Property<double?>("QttyPurch")
                        .HasColumnType("float")
                        .HasColumnName("Qtty_Purch");

                    b.Property<double?>("QttyReturn")
                        .HasColumnType("float")
                        .HasColumnName("Qtty_Return");

                    b.Property<double?>("QttySales")
                        .HasColumnType("float")
                        .HasColumnName("Qtty_Sales");

                    b.Property<double?>("Remain")
                        .HasColumnType("float");

                    b.Property<int?>("Secode")
                        .HasColumnType("int")
                        .HasColumnName("secode");

                    b.Property<double?>("Smtotal")
                        .HasColumnType("float")
                        .HasColumnName("SMtotal");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Wajba")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("wajba");

                    b.ToTable((string)null);

                    b.ToView("QQ_Maxzan", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqMaxzanByWajbaFullItem", b =>
                {
                    b.Property<double?>("AvrgPrice")
                        .HasColumnType("float");

                    b.Property<string>("BoxContain")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Cod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cod");

                    b.Property<string>("CodIqd")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("codIQD");

                    b.Property<double?>("Count")
                        .HasColumnType("float");

                    b.Property<string>("Factory")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("factory");

                    b.Property<string>("Item")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("item");

                    b.Property<double?>("Prise")
                        .HasColumnType("float")
                        .HasColumnName("prise");

                    b.Property<string>("QiyasUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("qiyas_unit");

                    b.Property<double?>("QttyPurch")
                        .HasColumnType("float")
                        .HasColumnName("Qtty_Purch");

                    b.Property<double?>("QttyReturn")
                        .HasColumnType("float")
                        .HasColumnName("Qtty_Return");

                    b.Property<double?>("QttySales")
                        .HasColumnType("float")
                        .HasColumnName("Qtty_Sales");

                    b.Property<double?>("Remain")
                        .HasColumnType("float");

                    b.Property<int?>("Secode")
                        .HasColumnType("int")
                        .HasColumnName("secode");

                    b.Property<double?>("Smtotal")
                        .HasColumnType("float")
                        .HasColumnName("SMtotal");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<double?>("TotalRemain")
                        .HasColumnType("float")
                        .HasColumnName("Total_Remain");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("type");

                    b.Property<string>("Wajba")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("wajba");

                    b.ToTable((string)null);

                    b.ToView("QQ_Maxzan_By_Wajba_Full_Item", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqMaxzanFullItemProc", b =>
                {
                    b.Property<double?>("AvrgPrice")
                        .HasColumnType("float");

                    b.Property<string>("BoxContain")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Cod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cod");

                    b.Property<string>("CodIqd")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("codIQD");

                    b.Property<double?>("Count")
                        .HasColumnType("float");

                    b.Property<string>("Factory")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("factory");

                    b.Property<string>("Item")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("item");

                    b.Property<double?>("Prise")
                        .HasColumnType("float")
                        .HasColumnName("prise");

                    b.Property<string>("QiyasUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("qiyas_unit");

                    b.Property<double?>("QttyPurch")
                        .HasColumnType("float")
                        .HasColumnName("Qtty_Purch");

                    b.Property<double?>("QttyReturn")
                        .HasColumnType("float")
                        .HasColumnName("Qtty_Return");

                    b.Property<double?>("QttySales")
                        .HasColumnType("float")
                        .HasColumnName("Qtty_Sales");

                    b.Property<double?>("Remain")
                        .HasColumnType("float");

                    b.Property<int>("Secode")
                        .HasColumnType("int")
                        .HasColumnName("secode");

                    b.Property<double?>("Smtotal")
                        .HasColumnType("float")
                        .HasColumnName("SMtotal");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("type");

                    b.Property<string>("Wajba")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("wajba");

                    b.ToTable((string)null);

                    b.ToView("QQ_Maxzan_Full_Item_Proc", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqMaxzanFullItemProcWithWajba", b =>
                {
                    b.Property<double?>("AvrgPrice")
                        .HasColumnType("float");

                    b.Property<string>("BoxContain")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Cod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cod");

                    b.Property<string>("CodIqd")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("codIQD");

                    b.Property<double?>("Count")
                        .HasColumnType("float");

                    b.Property<string>("Factory")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("factory");

                    b.Property<string>("Item")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("item");

                    b.Property<double?>("Prise")
                        .HasColumnType("float")
                        .HasColumnName("prise");

                    b.Property<string>("QiyasUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("qiyas_unit");

                    b.Property<double?>("QttyPurch")
                        .HasColumnType("float")
                        .HasColumnName("Qtty_Purch");

                    b.Property<double?>("QttyReturn")
                        .HasColumnType("float")
                        .HasColumnName("Qtty_Return");

                    b.Property<double?>("QttySales")
                        .HasColumnType("float")
                        .HasColumnName("Qtty_Sales");

                    b.Property<double?>("Remain")
                        .HasColumnType("float");

                    b.Property<int>("Secode")
                        .HasColumnType("int")
                        .HasColumnName("secode");

                    b.Property<double?>("Smtotal")
                        .HasColumnType("float")
                        .HasColumnName("SMtotal");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<double?>("TotalRemain")
                        .HasColumnType("float")
                        .HasColumnName("Total_Remain");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("type");

                    b.Property<string>("Wajba")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("wajba");

                    b.ToTable((string)null);

                    b.ToView("QQ_Maxzan_Full_Item_Proc_with_Wajba", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqMaxzanFullItemProcWithWajbaOldd", b =>
                {
                    b.Property<double?>("AvrgPrice")
                        .HasColumnType("float");

                    b.Property<string>("BoxContain")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Cod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cod");

                    b.Property<string>("CodIqd")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("codIQD");

                    b.Property<double?>("Count")
                        .HasColumnType("float");

                    b.Property<string>("Factory")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("factory");

                    b.Property<string>("Item")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("item");

                    b.Property<double?>("Prise")
                        .HasColumnType("float")
                        .HasColumnName("prise");

                    b.Property<string>("QiyasUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("qiyas_unit");

                    b.Property<double?>("QttyPurch")
                        .HasColumnType("float")
                        .HasColumnName("Qtty_Purch");

                    b.Property<double?>("QttyReturn")
                        .HasColumnType("float")
                        .HasColumnName("Qtty_Return");

                    b.Property<double?>("QttySales")
                        .HasColumnType("float")
                        .HasColumnName("Qtty_Sales");

                    b.Property<double?>("Remain")
                        .HasColumnType("float");

                    b.Property<int?>("Secode")
                        .HasColumnType("int")
                        .HasColumnName("secode");

                    b.Property<double?>("Smtotal")
                        .HasColumnType("float")
                        .HasColumnName("SMtotal");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<double?>("TotalRemain")
                        .HasColumnType("float")
                        .HasColumnName("Total_Remain");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("type");

                    b.Property<string>("Wajba")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("wajba");

                    b.ToTable((string)null);

                    b.ToView("QQ_Maxzan_Full_Item_Proc_with_Wajba_oldd", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqMaxzanFullItemProcWithoutWajba", b =>
                {
                    b.Property<string>("BoxContain")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Cod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cod");

                    b.Property<string>("CodIqd")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("codIQD");

                    b.Property<double?>("Count")
                        .HasColumnType("float");

                    b.Property<string>("Factory")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("factory");

                    b.Property<string>("Item")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("item");

                    b.Property<double?>("Prise")
                        .HasColumnType("float")
                        .HasColumnName("prise");

                    b.Property<string>("QiyasUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("qiyas_unit");

                    b.Property<double?>("QttyPurchh")
                        .HasColumnType("float")
                        .HasColumnName("Qtty_Purchh");

                    b.Property<double?>("QttyReturn")
                        .HasColumnType("float")
                        .HasColumnName("Qtty_Return");

                    b.Property<double?>("QttySaless")
                        .HasColumnType("float")
                        .HasColumnName("Qtty_Saless");

                    b.Property<double?>("Remainn")
                        .HasColumnType("float");

                    b.Property<int>("Secode")
                        .HasColumnType("int")
                        .HasColumnName("secode");

                    b.Property<double?>("Ssmtotal")
                        .HasColumnType("float")
                        .HasColumnName("SSMtotal");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("type");

                    b.ToTable((string)null);

                    b.ToView("QQ_Maxzan_Full_Item_Proc_withoutWajba", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqMaxzanFullItemProcWithoutWajbaN", b =>
                {
                    b.Property<string>("BoxContain")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Cod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cod");

                    b.Property<string>("CodIqd")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("codIQD");

                    b.Property<double?>("Count")
                        .HasColumnType("float");

                    b.Property<string>("Factory")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("factory");

                    b.Property<string>("Item")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("item");

                    b.Property<double?>("Prise")
                        .HasColumnType("float")
                        .HasColumnName("prise");

                    b.Property<string>("QiyasUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("qiyas_unit");

                    b.Property<double?>("QttyPurchas")
                        .HasColumnType("float")
                        .HasColumnName("Qtty_Purchas");

                    b.Property<double?>("QttyReturn")
                        .HasColumnType("float")
                        .HasColumnName("Qtty_Return");

                    b.Property<double?>("QttySaless")
                        .HasColumnType("float")
                        .HasColumnName("Qtty_Saless");

                    b.Property<double?>("Remainn")
                        .HasColumnType("float");

                    b.Property<int?>("Secode")
                        .HasColumnType("int")
                        .HasColumnName("secode");

                    b.Property<double?>("Smtotall")
                        .HasColumnType("float")
                        .HasColumnName("SMtotall");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<double?>("TotalRemain")
                        .HasColumnType("float")
                        .HasColumnName("Total_Remain");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("type");

                    b.ToTable((string)null);

                    b.ToView("QQ_Maxzan_Full_Item_Proc_withoutWajba_N", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqOrderInvoicePrint", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<string>("Barcod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("barcod");

                    b.Property<string>("BoxContain")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("CodIqd")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("codIQD");

                    b.Property<string>("Codd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("codd");

                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("Countt")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATE");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<string>("Factoryy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("factoryy");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("Idd")
                        .HasColumnType("int")
                        .HasColumnName("idd");

                    b.Property<string>("Inn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("inn");

                    b.Property<string>("Itemm")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("itemm");

                    b.Property<double?>("Mkaab")
                        .HasColumnType("float");

                    b.Property<string>("Notes")
                        .HasColumnType("ntext")
                        .HasColumnName("notes");

                    b.Property<DateTime?>("Now")
                        .HasColumnType("datetime")
                        .HasColumnName("now");

                    b.Property<string>("Outt")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("outt");

                    b.Property<decimal?>("Prise")
                        .HasColumnType("money")
                        .HasColumnName("prise");

                    b.Property<string>("QiyasUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("qiyas_unit");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float")
                        .HasColumnName("quantity");

                    b.Property<int?>("Secode")
                        .HasColumnType("int")
                        .HasColumnName("secode");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<decimal?>("Tootal")
                        .HasColumnType("money");

                    b.Property<decimal?>("Total")
                        .HasColumnType("money")
                        .HasColumnName("total");

                    b.Property<string>("Treasurer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Typee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("typee");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.ToTable((string)null);

                    b.ToView("QQ_Order_Invoice_Print", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqPayFromCostomerReport", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<string>("Customer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("customer");

                    b.Property<DateTime?>("Datee")
                        .HasColumnType("datetime2")
                        .HasColumnName("datee");

                    b.Property<decimal?>("Dolar")
                        .HasColumnType("money");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<decimal?>("Iqd")
                        .HasColumnType("money")
                        .HasColumnName("IQD");

                    b.Property<decimal?>("LastRemain")
                        .HasColumnType("money")
                        .HasColumnName("LAST_REMAIN");

                    b.Property<string>("Notes")
                        .HasColumnType("ntext")
                        .HasColumnName("notes");

                    b.Property<DateTime?>("Now")
                        .HasColumnType("datetime")
                        .HasColumnName("now");

                    b.Property<string>("PayType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("Runn")
                        .HasColumnType("bit")
                        .HasColumnName("runn");

                    b.Property<decimal?>("Safiremain")
                        .HasColumnType("money")
                        .HasColumnName("SAFIREMAIN");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("ToOffice")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("To_Office");

                    b.Property<decimal?>("Total")
                        .HasColumnType("money")
                        .HasColumnName("total");

                    b.Property<string>("Treasurer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.ToTable((string)null);

                    b.ToView("QQ_Pay_From_Costomer_Report", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqPrintInvoice", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<string>("Barcod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("barcod");

                    b.Property<string>("BoxContain")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("CarNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("carNo");

                    b.Property<string>("CodIqd")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("codIQD");

                    b.Property<string>("Codd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("codd");

                    b.Property<double?>("Countt")
                        .HasColumnType("float");

                    b.Property<string>("Customer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("customer");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("DATE");

                    b.Property<DateTime?>("Datee")
                        .HasColumnType("datetime2")
                        .HasColumnName("datee");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("Descriptioneng")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("descriptioneng");

                    b.Property<double?>("DiscontIqd")
                        .HasColumnType("float")
                        .HasColumnName("DiscontIQD");

                    b.Property<double?>("Discount")
                        .HasColumnType("float")
                        .HasColumnName("discount");

                    b.Property<double?>("Dolar")
                        .HasColumnType("float");

                    b.Property<string>("Driver")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DriverMob")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("driverMob");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Expr1")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Factoryy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("factoryy");

                    b.Property<double?>("HamaliyaIqd")
                        .HasColumnType("float")
                        .HasColumnName("HamaliyaIQD");

                    b.Property<decimal?>("Hamalya")
                        .HasColumnType("money")
                        .HasColumnName("hamalya");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("Idd")
                        .HasColumnType("int")
                        .HasColumnName("idd");

                    b.Property<decimal?>("Ijraaa")
                        .HasColumnType("money")
                        .HasColumnName("ijraaa");

                    b.Property<decimal?>("Ijraaa2")
                        .HasColumnType("money")
                        .HasColumnName("ijraaa2");

                    b.Property<string>("Itemm")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("itemm");

                    b.Property<decimal?>("LastRemain")
                        .HasColumnType("money")
                        .HasColumnName("LAST_REMAIN");

                    b.Property<double?>("ManCcount")
                        .HasColumnType("float")
                        .HasColumnName("man_ccount");

                    b.Property<string>("Mandob")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("Mkaab")
                        .HasColumnType("float");

                    b.Property<string>("Mob")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mob");

                    b.Property<string>("Mob1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mob1");

                    b.Property<string>("Mob2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mob2");

                    b.Property<string>("Mob3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mob3");

                    b.Property<string>("Mob4")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mob4");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("NameEng")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nameEng");

                    b.Property<string>("Notes")
                        .HasColumnType("ntext")
                        .HasColumnName("notes");

                    b.Property<DateTime?>("Now")
                        .HasColumnType("datetime")
                        .HasColumnName("now");

                    b.Property<double?>("PayIqd")
                        .HasColumnType("float")
                        .HasColumnName("PayIQD");

                    b.Property<decimal?>("Payed")
                        .HasColumnType("money");

                    b.Property<decimal?>("Prise")
                        .HasColumnType("money")
                        .HasColumnName("prise");

                    b.Property<double?>("PriseIqd")
                        .HasColumnType("float")
                        .HasColumnName("PriseIQD");

                    b.Property<string>("QiyasUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("qiyas_unit");

                    b.Property<double?>("RemainIqd")
                        .HasColumnType("float")
                        .HasColumnName("RemainIQD");

                    b.Property<decimal?>("Remaing")
                        .HasColumnType("money");

                    b.Property<decimal?>("Safiremain")
                        .HasColumnType("money")
                        .HasColumnName("SAFIREMAIN");

                    b.Property<int?>("Secode")
                        .HasColumnType("int")
                        .HasColumnName("secode");

                    b.Property<double?>("Smmkaab")
                        .HasColumnType("float")
                        .HasColumnName("SMMkaab");

                    b.Property<double?>("Smmkaabb")
                        .HasColumnType("float")
                        .HasColumnName("SMMkaabb");

                    b.Property<double?>("Smqtty")
                        .HasColumnType("float")
                        .HasColumnName("SMQtty");

                    b.Property<decimal?>("Smtotal")
                        .HasColumnType("money")
                        .HasColumnName("SMtotal");

                    b.Property<double?>("Smweznn")
                        .HasColumnType("float")
                        .HasColumnName("SMWeznn");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("SubbB")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subbB");

                    b.Property<double?>("SumTotalIqd")
                        .HasColumnType("float")
                        .HasColumnName("SumTotalIQD");

                    b.Property<double?>("Summwezn")
                        .HasColumnType("float")
                        .HasColumnName("SUMMWezn");

                    b.Property<double?>("SummweznTotal")
                        .HasColumnType("float")
                        .HasColumnName("SUMMWeznTotal");

                    b.Property<double?>("Sumqtty")
                        .HasColumnType("float")
                        .HasColumnName("SUMQtty");

                    b.Property<decimal?>("Tootal")
                        .HasColumnType("money");

                    b.Property<double?>("TotalIqd")
                        .HasColumnType("float")
                        .HasColumnName("TotalIQD");

                    b.Property<string>("Treasurer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.Property<string>("Web")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("WEB");

                    b.ToTable((string)null);

                    b.ToView("QQ_Print_Invoice", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqPrintInvoiceMawad", b =>
                {
                    b.Property<string>("Barcod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("barcod");

                    b.Property<string>("BoxContain")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("CodIqd")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("codIQD");

                    b.Property<string>("Codd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("codd");

                    b.Property<double?>("Countt")
                        .HasColumnType("float");

                    b.Property<string>("Factoryy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("factoryy");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Itemm")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("itemm");

                    b.Property<double?>("Mkaab")
                        .HasColumnType("float");

                    b.Property<decimal?>("Prise")
                        .HasColumnType("money")
                        .HasColumnName("prise");

                    b.Property<string>("QiyasUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("qiyas_unit");

                    b.Property<int?>("Secode")
                        .HasColumnType("int")
                        .HasColumnName("secode");

                    b.Property<double?>("Smqtty")
                        .HasColumnType("float")
                        .HasColumnName("SMQtty");

                    b.Property<decimal?>("Smtotal")
                        .HasColumnType("money")
                        .HasColumnName("SMtotal");

                    b.Property<double?>("Smweznn")
                        .HasColumnType("float")
                        .HasColumnName("SMWeznn");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.ToTable((string)null);

                    b.ToView("QQ_Print_Invoice-Mawad", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqPrintSub", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("address");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("Descriptioneng")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("descriptioneng");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Mob1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mob1");

                    b.Property<string>("Mob2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mob2");

                    b.Property<string>("Mob3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mob3");

                    b.Property<string>("Mob4")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mob4");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("NameEng")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nameEng");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Web")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("WEB");

                    b.ToTable((string)null);

                    b.ToView("QQ_Print_SUB", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqPurchaseByWajba", b =>
                {
                    b.Property<double?>("AvrgPrice")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATE");

                    b.Property<double?>("QttyPurch")
                        .HasColumnType("float")
                        .HasColumnName("Qtty_Purch");

                    b.Property<int?>("Secode")
                        .HasColumnType("int")
                        .HasColumnName("secode");

                    b.Property<double?>("Smtotal")
                        .HasColumnType("float")
                        .HasColumnName("SMtotal");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Wajba")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("wajba");

                    b.ToTable((string)null);

                    b.ToView("QQ_Purchase_By_Wajba", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqPurchaseItemsForDatagridview", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<string>("BoxContain")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("CarNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("carNo");

                    b.Property<string>("CodIqd")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("codIQD");

                    b.Property<string>("Codd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("codd");

                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("Countt")
                        .HasColumnType("float");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATE");

                    b.Property<string>("Driver")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DriverMob")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("driverMob");

                    b.Property<string>("Factoryy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("factoryy");

                    b.Property<double?>("FirstQtty")
                        .HasColumnType("float");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("Idd")
                        .HasColumnType("int")
                        .HasColumnName("idd");

                    b.Property<string>("Itemm")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("itemm");

                    b.Property<decimal?>("Masraf")
                        .HasColumnType("money");

                    b.Property<double?>("Naqis")
                        .HasColumnType("float");

                    b.Property<string>("Notes")
                        .HasColumnType("ntext")
                        .HasColumnName("notes");

                    b.Property<DateTime?>("Now")
                        .HasColumnType("datetime")
                        .HasColumnName("now");

                    b.Property<decimal?>("Prise")
                        .HasColumnType("money")
                        .HasColumnName("prise");

                    b.Property<int>("PuId")
                        .HasColumnType("int")
                        .HasColumnName("PU_ID");

                    b.Property<string>("QiyasUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("qiyas_unit");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float")
                        .HasColumnName("quantity");

                    b.Property<int?>("Secode")
                        .HasColumnType("int")
                        .HasColumnName("secode");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<decimal?>("Total")
                        .HasColumnType("money")
                        .HasColumnName("total");

                    b.Property<decimal?>("TotlPrise")
                        .HasColumnType("money");

                    b.Property<string>("Typee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("typee");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.Property<string>("Wajba")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("wajba");

                    b.Property<float?>("Weznn")
                        .HasColumnType("real");

                    b.Property<double?>("Ziyada")
                        .HasColumnType("float");

                    b.ToTable((string)null);

                    b.ToView("QQ_Purchase_Items_For_Datagridview", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqReturnByWajba", b =>
                {
                    b.Property<double?>("QttyReturn")
                        .HasColumnType("float")
                        .HasColumnName("Qtty_Return");

                    b.Property<int?>("Secode")
                        .HasColumnType("int")
                        .HasColumnName("secode");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Wajba")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("wajba");

                    b.ToTable((string)null);

                    b.ToView("QQ_Return_By_Wajba", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqReturnByWajbaRr", b =>
                {
                    b.Property<double?>("QttyReturn")
                        .HasColumnType("float")
                        .HasColumnName("Qtty_Return");

                    b.Property<int?>("Secode")
                        .HasColumnType("int")
                        .HasColumnName("secode");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Wajba")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("wajba");

                    b.ToTable((string)null);

                    b.ToView("QQ_Return_By_Wajba_RR", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqReturnFatoraItemsForCountCostumer", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<string>("BoxContain")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("CarNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("carNo");

                    b.Property<string>("CodIqd")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("codIQD");

                    b.Property<string>("Codd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("codd");

                    b.Property<double?>("Countt")
                        .HasColumnType("float");

                    b.Property<string>("Customer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("customer");

                    b.Property<DateTime?>("Datee")
                        .HasColumnType("datetime2")
                        .HasColumnName("datee");

                    b.Property<string>("Driver")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DriverMob")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("driverMob");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<string>("Expr1")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Factoryy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("factoryy");

                    b.Property<decimal?>("Hamalya")
                        .HasColumnType("money")
                        .HasColumnName("hamalya");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("Idd")
                        .HasColumnType("int")
                        .HasColumnName("idd");

                    b.Property<string>("Itemm")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("itemm");

                    b.Property<string>("Mandob")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Mob")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mob");

                    b.Property<string>("Notes")
                        .HasColumnType("ntext")
                        .HasColumnName("notes");

                    b.Property<DateTime?>("Now")
                        .HasColumnType("datetime")
                        .HasColumnName("now");

                    b.Property<decimal?>("Prise")
                        .HasColumnType("money")
                        .HasColumnName("prise");

                    b.Property<decimal?>("PurchasePrise")
                        .HasColumnType("money")
                        .HasColumnName("Purchase_prise");

                    b.Property<string>("QiyasUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("qiyas_unit");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float")
                        .HasColumnName("quantity");

                    b.Property<int>("ReId")
                        .HasColumnType("int")
                        .HasColumnName("RE_ID");

                    b.Property<decimal?>("RePayed")
                        .HasColumnType("money");

                    b.Property<decimal?>("Remaing")
                        .HasColumnType("money");

                    b.Property<int?>("Secode")
                        .HasColumnType("int")
                        .HasColumnName("secode");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<decimal?>("Tootal")
                        .HasColumnType("money");

                    b.Property<decimal?>("Total")
                        .HasColumnType("money")
                        .HasColumnName("total");

                    b.Property<string>("Treasurer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Typee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("typee");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.Property<string>("Wajba")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("wajba");

                    b.Property<float?>("Weznn")
                        .HasColumnType("real");

                    b.ToTable((string)null);

                    b.ToView("QQ_Return_Fatora_Items_For_CountCostumer", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqReturnItemsForDatagridview", b =>
                {
                    b.Property<string>("BoxContain")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("CodIqd")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("codIQD");

                    b.Property<string>("Codd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("codd");

                    b.Property<double?>("Countt")
                        .HasColumnType("float");

                    b.Property<string>("Customer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("customer");

                    b.Property<DateTime?>("Datee")
                        .HasColumnType("datetime2")
                        .HasColumnName("datee");

                    b.Property<string>("Factoryy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("factoryy");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Itemm")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("itemm");

                    b.Property<decimal?>("Prise")
                        .HasColumnType("money")
                        .HasColumnName("prise");

                    b.Property<string>("QiyasUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("qiyas_unit");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float")
                        .HasColumnName("quantity");

                    b.Property<int>("ReId")
                        .HasColumnType("int")
                        .HasColumnName("RE_ID");

                    b.Property<int?>("Secode")
                        .HasColumnType("int")
                        .HasColumnName("secode");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<decimal?>("Total")
                        .HasColumnType("money")
                        .HasColumnName("total");

                    b.Property<string>("Typee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("typee");

                    b.Property<string>("Wajba")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("wajba");

                    b.ToTable((string)null);

                    b.ToView("QQ_Return_Items_For_Datagridview", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqSalesInvoiceDetail", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float")
                        .HasColumnName("quantity");

                    b.Property<int?>("Secode")
                        .HasColumnType("int")
                        .HasColumnName("secode");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.ToTable((string)null);

                    b.ToView("QQ_Sales_Invoice_Details", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqSalesInvoiceDetails2", b =>
                {
                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<double?>("Smmkaabb")
                        .HasColumnType("float")
                        .HasColumnName("SMMkaabb");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<double?>("Summwezn")
                        .HasColumnType("float")
                        .HasColumnName("SUMMWezn");

                    b.Property<double?>("Sumqtty")
                        .HasColumnType("float")
                        .HasColumnName("SUMQtty");

                    b.ToTable((string)null);

                    b.ToView("QQ_Sales_Invoice_Details2", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqSalesInvoiceSumm", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<double?>("Smmkaabb")
                        .HasColumnType("float")
                        .HasColumnName("SMMkaabb");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<double?>("Summwezn")
                        .HasColumnType("float")
                        .HasColumnName("SUMMWezn");

                    b.Property<double?>("Sumqtty")
                        .HasColumnType("float")
                        .HasColumnName("SUMQtty");

                    b.ToTable((string)null);

                    b.ToView("QQ_sales_invoice_Summ", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqSalesInvoiceSumm2", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<double?>("QttySum")
                        .HasColumnType("float");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.ToTable((string)null);

                    b.ToView("QQ_sales_invoice_Summ2", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqSubbb", b =>
                {
                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.ToTable((string)null);

                    b.ToView("QQ_SUBBB", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqqCompanyPurchaseInvoicessForPurchaseManager", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<string>("CarNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("carNo");

                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATE");

                    b.Property<string>("Driver")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DriverMob")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("driverMob");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<bool?>("Hidee")
                        .HasColumnType("bit")
                        .HasColumnName("hidee");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("Idd")
                        .HasColumnType("int")
                        .HasColumnName("idd");

                    b.Property<string>("Notes")
                        .HasColumnType("ntext")
                        .HasColumnName("notes");

                    b.Property<decimal?>("SmTotal")
                        .HasColumnType("money")
                        .HasColumnName("SM_Total");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Treasurer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.Property<string>("Wajba")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("wajba");

                    b.ToTable((string)null);

                    b.ToView("QQQ_Company_Purchase_invoicess_For_purchase_Manager", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqqCountBuyEventItem", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<bool?>("Checkeed")
                        .HasColumnType("bit")
                        .HasColumnName("checkeed");

                    b.Property<string>("CodIqd")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("codIQD");

                    b.Property<string>("Codd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("codd");

                    b.Property<string>("CostType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("costType");

                    b.Property<string>("Customer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("customer");

                    b.Property<DateTime?>("Datee")
                        .HasColumnType("datetime2")
                        .HasColumnName("datee");

                    b.Property<string>("Factoryy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("factoryy");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Itemm")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("itemm");

                    b.Property<double?>("Nsba")
                        .HasColumnType("float");

                    b.Property<decimal?>("Prise")
                        .HasColumnType("money")
                        .HasColumnName("prise");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float")
                        .HasColumnName("quantity");

                    b.Property<int?>("Secode")
                        .HasColumnType("int")
                        .HasColumnName("secode");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<decimal?>("Total")
                        .HasColumnType("money")
                        .HasColumnName("total");

                    b.Property<string>("Typee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("typee");

                    b.ToTable((string)null);

                    b.ToView("QQQ_Count_BUY_EVENT_ITEMS", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqqCountBuyEventItemsHoreka", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<bool?>("Checkeed")
                        .HasColumnType("bit")
                        .HasColumnName("checkeed");

                    b.Property<string>("CodIqd")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("codIQD");

                    b.Property<string>("Codd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("codd");

                    b.Property<string>("CostType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("costType");

                    b.Property<string>("Customer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("customer");

                    b.Property<DateTime?>("Datee")
                        .HasColumnType("datetime2")
                        .HasColumnName("datee");

                    b.Property<string>("Factoryy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("factoryy");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Itemm")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("itemm");

                    b.Property<double?>("Nsba")
                        .HasColumnType("float");

                    b.Property<decimal?>("Prise")
                        .HasColumnType("money")
                        .HasColumnName("prise");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float")
                        .HasColumnName("quantity");

                    b.Property<int?>("Secode")
                        .HasColumnType("int")
                        .HasColumnName("secode");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<decimal?>("Total")
                        .HasColumnType("money")
                        .HasColumnName("total");

                    b.Property<string>("Typee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("typee");

                    b.ToTable((string)null);

                    b.ToView("QQQ_Count_BUY_EVENT_ITEMS_HOREKA", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqqCountBuyEventItemsHorekaNew", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<bool?>("Checkeed")
                        .HasColumnType("bit")
                        .HasColumnName("checkeed");

                    b.Property<string>("CodIqd")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("codIQD");

                    b.Property<string>("Codd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("codd");

                    b.Property<string>("CostType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("costType");

                    b.Property<string>("Customer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("customer");

                    b.Property<DateTime?>("Datee")
                        .HasColumnType("datetime2")
                        .HasColumnName("datee");

                    b.Property<string>("Factoryy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("factoryy");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Itemm")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("itemm");

                    b.Property<double?>("Nsba")
                        .HasColumnType("float");

                    b.Property<decimal?>("Prise")
                        .HasColumnType("money")
                        .HasColumnName("prise");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float")
                        .HasColumnName("quantity");

                    b.Property<int?>("Secode")
                        .HasColumnType("int")
                        .HasColumnName("secode");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<decimal?>("Total")
                        .HasColumnType("money")
                        .HasColumnName("total");

                    b.Property<string>("Typee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("typee");

                    b.ToTable((string)null);

                    b.ToView("QQQ_Count_BUY_EVENT_ITEMS_HOREKA_NEW", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqqCountCompany", b =>
                {
                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("company");

                    b.Property<DateTime?>("Datee")
                        .HasColumnType("datetime2")
                        .HasColumnName("datee");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<int>("IdEvent")
                        .HasColumnType("int")
                        .HasColumnName("id_event");

                    b.Property<DateTime?>("MtabqaDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("mtabqaDate");

                    b.Property<string>("MtabqaDatee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mtabqaDatee");

                    b.Property<string>("Notess")
                        .HasColumnType("ntext")
                        .HasColumnName("notess");

                    b.Property<DateTime?>("Noww")
                        .HasColumnType("datetime")
                        .HasColumnName("noww");

                    b.Property<decimal?>("SmTotal")
                        .HasColumnType("money")
                        .HasColumnName("SM_Total");

                    b.Property<decimal?>("Sndtotal")
                        .HasColumnType("money")
                        .HasColumnName("SNDTotal");

                    b.Property<decimal?>("SoldTotal")
                        .HasColumnType("money")
                        .HasColumnName("SOldTotal");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<int?>("Trans")
                        .HasColumnType("int")
                        .HasColumnName("trans");

                    b.Property<decimal?>("TransTotal")
                        .HasColumnType("money");

                    b.Property<decimal?>("TransTotalo")
                        .HasColumnType("money");

                    b.Property<decimal?>("Ttttotal")
                        .HasColumnType("money")
                        .HasColumnName("TTTtotal");

                    b.Property<string>("Typeevent")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("typeevent");

                    b.ToTable((string)null);

                    b.ToView("QQQ_Count_Company", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqqCountCompanyPurchaseInvoicess", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<string>("CarNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("carNo");

                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATE");

                    b.Property<string>("Driver")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DriverMob")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("driverMob");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<bool?>("Hidee")
                        .HasColumnType("bit")
                        .HasColumnName("hidee");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int?>("Idd")
                        .HasColumnType("int")
                        .HasColumnName("idd");

                    b.Property<string>("Notes")
                        .HasColumnType("ntext")
                        .HasColumnName("notes");

                    b.Property<decimal?>("SmTotal")
                        .HasColumnType("money")
                        .HasColumnName("SM_Total");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Treasurer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.Property<string>("Wajba")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("wajba");

                    b.ToTable((string)null);

                    b.ToView("QQQ_Count_Company_Purchase_invoicess", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqqCountCostumer", b =>
                {
                    b.Property<decimal?>("BuyRemain")
                        .HasColumnType("money")
                        .HasColumnName("Buy_Remain");

                    b.Property<string>("Costumer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("costumer");

                    b.Property<DateTime?>("Datee")
                        .HasColumnType("datetime2")
                        .HasColumnName("datee");

                    b.Property<decimal?>("Endaho")
                        .HasColumnType("money");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<int>("IdEvent")
                        .HasColumnType("int")
                        .HasColumnName("id_event");

                    b.Property<DateTime?>("MtabqaDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("mtabqaDate");

                    b.Property<string>("MtabqaDatee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mtabqaDatee");

                    b.Property<string>("Notess")
                        .HasColumnType("ntext")
                        .HasColumnName("notess");

                    b.Property<DateTime?>("Noww")
                        .HasColumnType("datetime")
                        .HasColumnName("noww");

                    b.Property<decimal?>("Pfcost")
                        .HasColumnType("money")
                        .HasColumnName("PFCost");

                    b.Property<decimal?>("Ptcost")
                        .HasColumnType("money")
                        .HasColumnName("PTCost");

                    b.Property<decimal?>("RetRemain")
                        .HasColumnType("money")
                        .HasColumnName("Ret_Remain");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<int?>("Trans")
                        .HasColumnType("int")
                        .HasColumnName("trans");

                    b.Property<decimal?>("TransTotal")
                        .HasColumnType("money");

                    b.Property<decimal?>("Ttttotal")
                        .HasColumnType("money")
                        .HasColumnName("TTTtotal");

                    b.Property<string>("Typeevent")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("typeevent");

                    b.Property<decimal?>("Wasil")
                        .HasColumnType("money");

                    b.ToTable((string)null);

                    b.ToView("QQQ_Count_Costumer", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqqCountCostumerBuyFatora", b =>
                {
                    b.Property<string>("Customer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("customer");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<decimal?>("Remain")
                        .HasColumnType("money");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.ToTable((string)null);

                    b.ToView("QQQ_Count_Costumer_BuyFatora", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqqCountCostumerNew", b =>
                {
                    b.Property<decimal?>("BuRemain")
                        .HasColumnType("money")
                        .HasColumnName("Bu_Remain");

                    b.Property<bool?>("Checkeed")
                        .HasColumnType("bit")
                        .HasColumnName("checkeed");

                    b.Property<string>("Costumer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("costumer");

                    b.Property<DateTime?>("Datee")
                        .HasColumnType("datetime2")
                        .HasColumnName("datee");

                    b.Property<decimal?>("Endaho")
                        .HasColumnType("money");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int>("IdEvent")
                        .HasColumnType("int")
                        .HasColumnName("id_event");

                    b.Property<DateTime?>("MtabqaDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("mtabqaDate");

                    b.Property<string>("MtabqaDatee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mtabqaDatee");

                    b.Property<string>("Notess")
                        .HasColumnType("ntext")
                        .HasColumnName("notess");

                    b.Property<DateTime?>("Noww")
                        .HasColumnType("datetime")
                        .HasColumnName("noww");

                    b.Property<decimal?>("PfcostN")
                        .HasColumnType("money")
                        .HasColumnName("PFCostN");

                    b.Property<decimal?>("PtcostN")
                        .HasColumnType("money")
                        .HasColumnName("PTCostN");

                    b.Property<decimal?>("RettRemain")
                        .HasColumnType("money")
                        .HasColumnName("Rett_Remain");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<int?>("Trans")
                        .HasColumnType("int")
                        .HasColumnName("trans");

                    b.Property<decimal?>("TransTotal")
                        .HasColumnType("money");

                    b.Property<decimal?>("Ttttotal")
                        .HasColumnType("money")
                        .HasColumnName("TTTtotal");

                    b.Property<string>("Typeevent")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("typeevent");

                    b.Property<decimal?>("Wasil")
                        .HasColumnType("money");

                    b.ToTable((string)null);

                    b.ToView("QQQ_Count-Costumer_New", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqqCountCostumerNewTRuning", b =>
                {
                    b.Property<decimal?>("BuRemain")
                        .HasColumnType("money")
                        .HasColumnName("Bu_Remain");

                    b.Property<string>("Costumer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("costumer");

                    b.Property<DateTime?>("Datee")
                        .HasColumnType("datetime2")
                        .HasColumnName("datee");

                    b.Property<decimal?>("Endaho")
                        .HasColumnType("money");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<int>("IdEvent")
                        .HasColumnType("int")
                        .HasColumnName("id_event");

                    b.Property<DateTime?>("MtabqaDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("mtabqaDate");

                    b.Property<string>("MtabqaDatee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mtabqaDatee");

                    b.Property<string>("Notess")
                        .HasColumnType("ntext")
                        .HasColumnName("notess");

                    b.Property<DateTime?>("Noww")
                        .HasColumnType("datetime")
                        .HasColumnName("noww");

                    b.Property<decimal?>("PfcostN")
                        .HasColumnType("money")
                        .HasColumnName("PFCostN");

                    b.Property<decimal?>("PtcostN")
                        .HasColumnType("money")
                        .HasColumnName("PTCostN");

                    b.Property<decimal?>("RettRemain")
                        .HasColumnType("money")
                        .HasColumnName("Rett_Remain");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<int?>("Trans")
                        .HasColumnType("int")
                        .HasColumnName("trans");

                    b.Property<decimal?>("TransTotal")
                        .HasColumnType("money");

                    b.Property<decimal?>("TransTotalN")
                        .HasColumnType("money");

                    b.Property<string>("Typeevent")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("typeevent");

                    b.Property<decimal?>("Wasil")
                        .HasColumnType("money");

                    b.ToTable((string)null);

                    b.ToView("QQQ_Count_Costumer_New_T_Runing", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqqCountCostumerReturnFatora", b =>
                {
                    b.Property<string>("Customer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("customer");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<decimal?>("RetRemain")
                        .HasColumnType("money")
                        .HasColumnName("Ret_Remain");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.ToTable((string)null);

                    b.ToView("QQQ_Count_Costumer_ReturnFatora", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqqCountIxraci", b =>
                {
                    b.Property<DateTime?>("Datee")
                        .HasColumnType("datetime2")
                        .HasColumnName("datee");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<int>("IdEvent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_event");

                    b.Property<string>("IxraciN")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ixraciN");

                    b.Property<DateTime?>("MtabqaDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("mtabqaDate");

                    b.Property<string>("MtabqaDatee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mtabqaDatee");

                    b.Property<string>("Notess")
                        .HasColumnType("ntext")
                        .HasColumnName("notess");

                    b.Property<DateTime?>("Noww")
                        .HasColumnType("datetime")
                        .HasColumnName("noww");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<int?>("Trans")
                        .HasColumnType("int")
                        .HasColumnName("trans");

                    b.Property<decimal?>("TransTotal")
                        .HasColumnType("money");

                    b.Property<decimal?>("Ttttotal")
                        .HasColumnType("money")
                        .HasColumnName("TTTtotal");

                    b.Property<string>("Typeevent")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("typeevent");

                    b.ToTable((string)null);

                    b.ToView("QQQ_Count_ixraci", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqqCountOffice", b =>
                {
                    b.Property<DateTime?>("Datee")
                        .HasColumnType("datetime2")
                        .HasColumnName("datee");

                    b.Property<decimal?>("Endaho")
                        .HasColumnType("money")
                        .HasColumnName("endaho");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<int>("IdEvent")
                        .HasColumnType("int")
                        .HasColumnName("id_event");

                    b.Property<decimal?>("Indana")
                        .HasColumnType("money")
                        .HasColumnName("indana");

                    b.Property<DateTime?>("MtabqaDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("mtabqaDate");

                    b.Property<string>("MtabqaDatee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mtabqaDatee");

                    b.Property<string>("Notess")
                        .HasColumnType("ntext")
                        .HasColumnName("notess");

                    b.Property<DateTime?>("Noww")
                        .HasColumnType("datetime")
                        .HasColumnName("noww");

                    b.Property<string>("Officee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("officee");

                    b.Property<decimal?>("PfrcTotal")
                        .HasColumnType("money")
                        .HasColumnName("PFRC_Total");

                    b.Property<decimal?>("PtcTotal")
                        .HasColumnType("money")
                        .HasColumnName("PTC_Total");

                    b.Property<decimal?>("PtixTotal")
                        .HasColumnType("money")
                        .HasColumnName("PTIX_Total");

                    b.Property<decimal?>("PtoffTotal")
                        .HasColumnType("money")
                        .HasColumnName("PTOFF_Total");

                    b.Property<decimal?>("Ptotal")
                        .HasColumnType("money");

                    b.Property<decimal?>("SndTotal")
                        .HasColumnType("money")
                        .HasColumnName("Snd_Total");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<int?>("Trans")
                        .HasColumnType("int")
                        .HasColumnName("trans");

                    b.Property<decimal?>("TransTotal")
                        .HasColumnType("money");

                    b.Property<decimal?>("TransTotalN")
                        .HasColumnType("money")
                        .HasColumnName("TransTotal_N");

                    b.Property<decimal?>("Ttttotal")
                        .HasColumnType("money")
                        .HasColumnName("TTTtotal");

                    b.Property<string>("Typeevent")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("typeevent");

                    b.ToTable((string)null);

                    b.ToView("QQQ_Count_Office", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqqCountOfficeFromCurrency", b =>
                {
                    b.Property<DateTime?>("Datee")
                        .HasColumnType("datetime2")
                        .HasColumnName("datee");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<bool?>("Fromm")
                        .HasColumnType("bit");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Note")
                        .HasColumnType("ntext")
                        .HasColumnName("note");

                    b.Property<DateTime?>("Now")
                        .HasColumnType("datetime")
                        .HasColumnName("now");

                    b.Property<string>("Office")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Symbol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Tootall")
                        .HasColumnType("money");

                    b.ToTable((string)null);

                    b.ToView("QQQ_Count_Office_FROM_Currency", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqqCountOfficeFromCurrencyDollar", b =>
                {
                    b.Property<DateTime?>("Datee")
                        .HasColumnType("datetime2")
                        .HasColumnName("datee");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<decimal?>("ExchanFrmTotal")
                        .HasColumnType("money");

                    b.Property<bool?>("Fromm")
                        .HasColumnType("bit");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Note")
                        .HasColumnType("ntext")
                        .HasColumnName("note");

                    b.Property<DateTime?>("Now")
                        .HasColumnType("datetime")
                        .HasColumnName("now");

                    b.Property<string>("Office")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Symbol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable((string)null);

                    b.ToView("QQQ_Count_Office_FROM_Currency_Dollar", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqqCountOfficeFromCurrencyDollarN", b =>
                {
                    b.Property<DateTime?>("Datee")
                        .HasColumnType("datetime2")
                        .HasColumnName("datee");

                    b.Property<decimal?>("Endaho")
                        .HasColumnType("money")
                        .HasColumnName("endaho");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<decimal?>("ExchanFrmTotal")
                        .HasColumnType("money");

                    b.Property<decimal?>("ExchanTooTotal")
                        .HasColumnType("money")
                        .HasColumnName("ExchanTOO_Total");

                    b.Property<decimal?>("Expr1")
                        .HasColumnType("money");

                    b.Property<int>("IdEvent")
                        .HasColumnType("int")
                        .HasColumnName("id_event");

                    b.Property<DateTime?>("MtabqaDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("mtabqaDate");

                    b.Property<string>("MtabqaDatee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mtabqaDatee");

                    b.Property<string>("Notess")
                        .HasColumnType("ntext")
                        .HasColumnName("notess");

                    b.Property<DateTime?>("Noww")
                        .HasColumnType("datetime")
                        .HasColumnName("noww");

                    b.Property<string>("Officee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("officee");

                    b.Property<decimal?>("PfrcTotal")
                        .HasColumnType("money")
                        .HasColumnName("PFRC_Total");

                    b.Property<decimal?>("PtcTotal")
                        .HasColumnType("money")
                        .HasColumnName("PTC_Total");

                    b.Property<decimal?>("PtixTotal")
                        .HasColumnType("money")
                        .HasColumnName("PTIX_Total");

                    b.Property<decimal?>("PtoffTotal")
                        .HasColumnType("money")
                        .HasColumnName("PTOFF_Total");

                    b.Property<decimal?>("Ptotal")
                        .HasColumnType("money");

                    b.Property<decimal?>("SndTotal")
                        .HasColumnType("money")
                        .HasColumnName("Snd_Total");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Symbol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Trans")
                        .HasColumnType("int")
                        .HasColumnName("trans");

                    b.Property<decimal?>("TransTotalN")
                        .HasColumnType("money")
                        .HasColumnName("TransTotal_N");

                    b.Property<decimal?>("Ttttotal")
                        .HasColumnType("money")
                        .HasColumnName("TTTtotal");

                    b.Property<string>("Typeevent")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("typeevent");

                    b.ToTable((string)null);

                    b.ToView("QQQ_Count_Office_FROM_Currency_Dollar_N", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqqCountOfficeMultiCurrency", b =>
                {
                    b.Property<DateTime?>("Datee")
                        .HasColumnType("datetime2")
                        .HasColumnName("datee");

                    b.Property<decimal?>("Endaho")
                        .HasColumnType("money")
                        .HasColumnName("endaho");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<decimal?>("ExchanFrmTotal")
                        .HasColumnType("money");

                    b.Property<decimal?>("ExchanTooTotal")
                        .HasColumnType("money")
                        .HasColumnName("ExchanTOO_Total");

                    b.Property<int>("IdEvent")
                        .HasColumnType("int")
                        .HasColumnName("id_event");

                    b.Property<decimal?>("Indana")
                        .HasColumnType("money")
                        .HasColumnName("indana");

                    b.Property<DateTime?>("MtabqaDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("mtabqaDate");

                    b.Property<string>("MtabqaDatee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mtabqaDatee");

                    b.Property<string>("Notess")
                        .HasColumnType("ntext")
                        .HasColumnName("notess");

                    b.Property<DateTime?>("Noww")
                        .HasColumnType("datetime")
                        .HasColumnName("noww");

                    b.Property<string>("Officee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("officee");

                    b.Property<decimal?>("PfrcTotal")
                        .HasColumnType("money")
                        .HasColumnName("PFRC_Total");

                    b.Property<decimal?>("PtcTotal")
                        .HasColumnType("money")
                        .HasColumnName("PTC_Total");

                    b.Property<decimal?>("PtixTotal")
                        .HasColumnType("money")
                        .HasColumnName("PTIX_Total");

                    b.Property<decimal?>("PtoffTotal")
                        .HasColumnType("money")
                        .HasColumnName("PTOFF_Total");

                    b.Property<decimal?>("Ptotal")
                        .HasColumnType("money");

                    b.Property<decimal?>("SndTotal")
                        .HasColumnType("money")
                        .HasColumnName("Snd_Total");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Symbol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Trans")
                        .HasColumnType("int")
                        .HasColumnName("trans");

                    b.Property<decimal?>("TransTotal")
                        .HasColumnType("money");

                    b.Property<decimal?>("TransTotalN")
                        .HasColumnType("money")
                        .HasColumnName("TransTotal_N");

                    b.Property<decimal?>("Ttttotal")
                        .HasColumnType("money")
                        .HasColumnName("TTTtotal");

                    b.Property<string>("Typeevent")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("typeevent");

                    b.ToTable((string)null);

                    b.ToView("QQQ_Count_Office_Multi_Currency", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqqCountOfficeMultiCurrencyDollar", b =>
                {
                    b.Property<DateTime?>("Datee")
                        .HasColumnType("datetime2")
                        .HasColumnName("datee");

                    b.Property<decimal?>("Endaho")
                        .HasColumnType("money")
                        .HasColumnName("endaho");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<decimal?>("ExchanFrmTotal")
                        .HasColumnType("money");

                    b.Property<decimal?>("ExchanTooTotal")
                        .HasColumnType("money")
                        .HasColumnName("ExchanTOO_Total");

                    b.Property<int>("IdEvent")
                        .HasColumnType("int")
                        .HasColumnName("id_event");

                    b.Property<decimal?>("Indana")
                        .HasColumnType("money")
                        .HasColumnName("indana");

                    b.Property<DateTime?>("MtabqaDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("mtabqaDate");

                    b.Property<string>("MtabqaDatee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mtabqaDatee");

                    b.Property<string>("Notess")
                        .HasColumnType("ntext")
                        .HasColumnName("notess");

                    b.Property<DateTime?>("Noww")
                        .HasColumnType("datetime")
                        .HasColumnName("noww");

                    b.Property<string>("Officee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("officee");

                    b.Property<decimal?>("PfrcTotal")
                        .HasColumnType("money")
                        .HasColumnName("PFRC_Total");

                    b.Property<decimal?>("PtcTotal")
                        .HasColumnType("money")
                        .HasColumnName("PTC_Total");

                    b.Property<decimal?>("PtixTotal")
                        .HasColumnType("money")
                        .HasColumnName("PTIX_Total");

                    b.Property<decimal?>("PtoffTotal")
                        .HasColumnType("money")
                        .HasColumnName("PTOFF_Total");

                    b.Property<decimal?>("Ptotal")
                        .HasColumnType("money");

                    b.Property<decimal?>("SndTotal")
                        .HasColumnType("money")
                        .HasColumnName("Snd_Total");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Symbol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Trans")
                        .HasColumnType("int")
                        .HasColumnName("trans");

                    b.Property<decimal?>("TransTotal")
                        .HasColumnType("money");

                    b.Property<decimal?>("TransTotalN")
                        .HasColumnType("money")
                        .HasColumnName("TransTotal_N");

                    b.Property<decimal?>("Ttttotal")
                        .HasColumnType("money")
                        .HasColumnName("TTTtotal");

                    b.Property<string>("Typeevent")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("typeevent");

                    b.ToTable((string)null);

                    b.ToView("QQQ_Count_Office_Multi_Currency_Dollar", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqqCountOfficeMultiCurrencyDollarNn", b =>
                {
                    b.Property<DateTime?>("Datee")
                        .HasColumnType("datetime2")
                        .HasColumnName("datee");

                    b.Property<decimal?>("Endaho")
                        .HasColumnType("money")
                        .HasColumnName("endaho");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<decimal?>("ExchanFrmTotal")
                        .HasColumnType("money");

                    b.Property<decimal?>("ExchanTooTotal")
                        .HasColumnType("money")
                        .HasColumnName("ExchanTOO_Total");

                    b.Property<int>("IdEvent")
                        .HasColumnType("int")
                        .HasColumnName("id_event");

                    b.Property<decimal?>("Indana")
                        .HasColumnType("money")
                        .HasColumnName("indana");

                    b.Property<DateTime?>("MtabqaDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("mtabqaDate");

                    b.Property<string>("MtabqaDatee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mtabqaDatee");

                    b.Property<string>("Notess")
                        .HasColumnType("ntext")
                        .HasColumnName("notess");

                    b.Property<DateTime?>("Noww")
                        .HasColumnType("datetime")
                        .HasColumnName("noww");

                    b.Property<string>("Officee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("officee");

                    b.Property<decimal?>("PfrcTotal")
                        .HasColumnType("money")
                        .HasColumnName("PFRC_Total");

                    b.Property<decimal?>("PtcTotal")
                        .HasColumnType("money")
                        .HasColumnName("PTC_Total");

                    b.Property<decimal?>("PtixTotal")
                        .HasColumnType("money")
                        .HasColumnName("PTIX_Total");

                    b.Property<decimal?>("PtoffTotal")
                        .HasColumnType("money")
                        .HasColumnName("PTOFF_Total");

                    b.Property<decimal?>("Ptotal")
                        .HasColumnType("money");

                    b.Property<decimal?>("SndTotal")
                        .HasColumnType("money")
                        .HasColumnName("Snd_Total");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Symbol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Trans")
                        .HasColumnType("int")
                        .HasColumnName("trans");

                    b.Property<decimal?>("TransTotal")
                        .HasColumnType("money");

                    b.Property<decimal?>("TransTotalN")
                        .HasColumnType("money")
                        .HasColumnName("TransTotal_N");

                    b.Property<decimal?>("Ttttotal")
                        .HasColumnType("money")
                        .HasColumnName("TTTtotal");

                    b.Property<string>("Typeevent")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("typeevent");

                    b.ToTable((string)null);

                    b.ToView("QQQ_Count_Office_Multi_Currency_Dollar_NN", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqqCountOfficeMultiCurrencyIqd", b =>
                {
                    b.Property<DateTime?>("Datee")
                        .HasColumnType("datetime2")
                        .HasColumnName("datee");

                    b.Property<decimal?>("Endaho")
                        .HasColumnType("money")
                        .HasColumnName("endaho");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<decimal?>("ExchanFrmTotal")
                        .HasColumnType("money");

                    b.Property<decimal?>("ExchanTooTotal")
                        .HasColumnType("money")
                        .HasColumnName("ExchanTOO_Total");

                    b.Property<int>("IdEvent")
                        .HasColumnType("int")
                        .HasColumnName("id_event");

                    b.Property<decimal?>("Indana")
                        .HasColumnType("money")
                        .HasColumnName("indana");

                    b.Property<DateTime?>("MtabqaDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("mtabqaDate");

                    b.Property<string>("MtabqaDatee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mtabqaDatee");

                    b.Property<string>("Notess")
                        .HasColumnType("ntext")
                        .HasColumnName("notess");

                    b.Property<DateTime?>("Noww")
                        .HasColumnType("datetime")
                        .HasColumnName("noww");

                    b.Property<string>("Officee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("officee");

                    b.Property<decimal?>("PfrcTotalIqd")
                        .HasColumnType("money")
                        .HasColumnName("PFRC_Total_IQD");

                    b.Property<decimal?>("PtcTotal")
                        .HasColumnType("money")
                        .HasColumnName("PTC_Total");

                    b.Property<decimal?>("PtixTotal")
                        .HasColumnType("money")
                        .HasColumnName("PTIX_Total");

                    b.Property<decimal?>("PtoffTotal")
                        .HasColumnType("money")
                        .HasColumnName("PTOFF_Total");

                    b.Property<decimal?>("Ptotal")
                        .HasColumnType("money");

                    b.Property<decimal?>("SndTotal")
                        .HasColumnType("money")
                        .HasColumnName("Snd_Total");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Symbol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Trans")
                        .HasColumnType("int")
                        .HasColumnName("trans");

                    b.Property<decimal?>("TransTotal")
                        .HasColumnType("money");

                    b.Property<decimal?>("TransTotalN")
                        .HasColumnType("money")
                        .HasColumnName("TransTotal_N");

                    b.Property<decimal?>("Ttttotal")
                        .HasColumnType("money")
                        .HasColumnName("TTTtotal");

                    b.Property<string>("Typeevent")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("typeevent");

                    b.ToTable((string)null);

                    b.ToView("QQQ_Count_Office_Multi_Currency_IQD", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqqCountOfficePayFrmCostumer", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<string>("Customer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("customer");

                    b.Property<DateTime?>("Datee")
                        .HasColumnType("datetime2")
                        .HasColumnName("datee");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Notes")
                        .HasColumnType("ntext")
                        .HasColumnName("notes");

                    b.Property<DateTime?>("Now")
                        .HasColumnType("datetime")
                        .HasColumnName("now");

                    b.Property<string>("PayType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("PfrcTotal")
                        .HasColumnType("money")
                        .HasColumnName("PFRC_Total");

                    b.Property<bool?>("Runn")
                        .HasColumnType("bit")
                        .HasColumnName("runn");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Symbol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ToOffice")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("To_Office");

                    b.Property<decimal?>("Total")
                        .HasColumnType("money")
                        .HasColumnName("total");

                    b.Property<string>("Treasurer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.ToTable((string)null);

                    b.ToView("QQQ_Count_Office_PayFrmCostumer", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqqCountOfficePayFrmCostumerDollar", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<string>("Customer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("customer");

                    b.Property<DateTime?>("Datee")
                        .HasColumnType("datetime2")
                        .HasColumnName("datee");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Notes")
                        .HasColumnType("ntext")
                        .HasColumnName("notes");

                    b.Property<DateTime?>("Now")
                        .HasColumnType("datetime")
                        .HasColumnName("now");

                    b.Property<string>("PayType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("PfrcTotal")
                        .HasColumnType("money")
                        .HasColumnName("PFRC_Total");

                    b.Property<bool?>("Runn")
                        .HasColumnType("bit")
                        .HasColumnName("runn");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Symbol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ToOffice")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("To_Office");

                    b.Property<decimal?>("Total")
                        .HasColumnType("money")
                        .HasColumnName("total");

                    b.Property<string>("Treasurer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.ToTable((string)null);

                    b.ToView("QQQ_Count_Office_PayFrmCostumer_Dollar", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqqCountOfficePayFrmCostumerIqd", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<string>("Customer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("customer");

                    b.Property<DateTime?>("Datee")
                        .HasColumnType("datetime2")
                        .HasColumnName("datee");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Notes")
                        .HasColumnType("ntext")
                        .HasColumnName("notes");

                    b.Property<DateTime?>("Now")
                        .HasColumnType("datetime")
                        .HasColumnName("now");

                    b.Property<string>("PayType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("PfrcTotalIqd")
                        .HasColumnType("money")
                        .HasColumnName("PFRC_Total_IQD");

                    b.Property<bool?>("Runn")
                        .HasColumnType("bit")
                        .HasColumnName("runn");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Symbol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ToOffice")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("To_Office");

                    b.Property<decimal?>("Total")
                        .HasColumnType("money")
                        .HasColumnName("total");

                    b.Property<string>("Treasurer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.ToTable((string)null);

                    b.ToView("QQQ_Count_Office_PayFrmCostumer_IQD", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqqCountOfficePayFromOfficeDollar", b =>
                {
                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<string>("Offiice")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("offiice");

                    b.Property<decimal?>("Ptotal")
                        .HasColumnType("money");

                    b.Property<decimal?>("PtotalL")
                        .HasColumnType("money");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Symbol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable((string)null);

                    b.ToView("QQQ_Count_Office_Pay_From_Office_Dollar", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqqCountOfficePayToCostumer", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<string>("Customer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("customer");

                    b.Property<DateTime?>("Datee")
                        .HasColumnType("datetime2")
                        .HasColumnName("datee");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Notes")
                        .HasColumnType("ntext")
                        .HasColumnName("notes");

                    b.Property<DateTime?>("Now")
                        .HasColumnType("datetime")
                        .HasColumnName("now");

                    b.Property<decimal?>("PtcTotal")
                        .HasColumnType("money")
                        .HasColumnName("PTC_Total");

                    b.Property<bool?>("Runn")
                        .HasColumnType("bit")
                        .HasColumnName("runn");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Symbol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ToOffice")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("To_Office");

                    b.Property<decimal?>("Total")
                        .HasColumnType("money")
                        .HasColumnName("total");

                    b.Property<string>("Treasurer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Typee")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("typee");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.ToTable((string)null);

                    b.ToView("QQQ_Count_Office_Pay_ToCostumer", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqqCountOfficePayToCostumerDollar", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<string>("Customer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("customer");

                    b.Property<DateTime?>("Datee")
                        .HasColumnType("datetime2")
                        .HasColumnName("datee");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Notes")
                        .HasColumnType("ntext")
                        .HasColumnName("notes");

                    b.Property<DateTime?>("Now")
                        .HasColumnType("datetime")
                        .HasColumnName("now");

                    b.Property<decimal?>("PtcTotal")
                        .HasColumnType("money")
                        .HasColumnName("PTC_Total");

                    b.Property<bool?>("Runn")
                        .HasColumnType("bit")
                        .HasColumnName("runn");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Symbol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ToOffice")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("To_Office");

                    b.Property<decimal?>("Total")
                        .HasColumnType("money")
                        .HasColumnName("total");

                    b.Property<string>("Treasurer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Typee")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("typee");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.ToTable((string)null);

                    b.ToView("QQQ_Count_Office_Pay_ToCostumer_Dollar", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqqCountOfficePayToIxraci", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("date");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<string>("FrmOffice")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Frm_Office");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("IxraciN")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ixraciN");

                    b.Property<string>("Notes")
                        .HasColumnType("ntext")
                        .HasColumnName("notes");

                    b.Property<DateTime?>("Now")
                        .HasColumnType("datetime")
                        .HasColumnName("now");

                    b.Property<decimal?>("PtixTotal")
                        .HasColumnType("money")
                        .HasColumnName("PTIX_Total");

                    b.Property<bool?>("Runn")
                        .HasColumnType("bit")
                        .HasColumnName("runn");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Symbol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Total")
                        .HasColumnType("money")
                        .HasColumnName("total");

                    b.Property<string>("Treasurer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Typee")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("typee");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.ToTable((string)null);

                    b.ToView("QQQ_Count_Office_PayToIxraci", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqqCountOfficePayToIxraciDollar", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("date");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<string>("FrmOffice")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Frm_Office");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("IxraciN")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ixraciN");

                    b.Property<string>("Notes")
                        .HasColumnType("ntext")
                        .HasColumnName("notes");

                    b.Property<DateTime?>("Now")
                        .HasColumnType("datetime")
                        .HasColumnName("now");

                    b.Property<decimal?>("PtixTotal")
                        .HasColumnType("money")
                        .HasColumnName("PTIX_Total");

                    b.Property<bool?>("Runn")
                        .HasColumnType("bit")
                        .HasColumnName("runn");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Symbol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Total")
                        .HasColumnType("money")
                        .HasColumnName("total");

                    b.Property<string>("Treasurer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Typee")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("typee");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.ToTable((string)null);

                    b.ToView("QQQ_Count_Office_PayToIxraci_Dollar", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqqCountOfficePaytoOffice", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("date");

                    b.Property<decimal?>("Dolar")
                        .HasColumnType("money");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<decimal?>("IqdTtal")
                        .HasColumnType("money")
                        .HasColumnName("IQD_Ttal");

                    b.Property<string>("Note")
                        .HasColumnType("ntext")
                        .HasColumnName("note");

                    b.Property<DateTime?>("Now")
                        .HasColumnType("datetime")
                        .HasColumnName("now");

                    b.Property<string>("Offiice")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("offiice");

                    b.Property<decimal?>("PtoffTotal")
                        .HasColumnType("money")
                        .HasColumnName("PTOFF_Total");

                    b.Property<decimal?>("Ptotal")
                        .HasColumnType("money");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Symbol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Treasurer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.ToTable((string)null);

                    b.ToView("QQQ_Count_Office_PaytoOffice", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqqCountOfficePaytoOfficeDollar", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("date");

                    b.Property<decimal?>("Dolar")
                        .HasColumnType("money");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<decimal?>("IqdTtal")
                        .HasColumnType("money")
                        .HasColumnName("IQD_Ttal");

                    b.Property<string>("Note")
                        .HasColumnType("ntext")
                        .HasColumnName("note");

                    b.Property<DateTime?>("Now")
                        .HasColumnType("datetime")
                        .HasColumnName("now");

                    b.Property<string>("Offiice")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("offiice");

                    b.Property<decimal?>("PtoffTotal")
                        .HasColumnType("money")
                        .HasColumnName("PTOFF_Total");

                    b.Property<decimal?>("Ptotal")
                        .HasColumnType("money");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Symbol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Treasurer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.ToTable((string)null);

                    b.ToView("QQQ_Count_Office_PaytoOffice_Dollar", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqqCountOfficeSendMoney", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<decimal?>("Amola")
                        .HasColumnType("money")
                        .HasColumnName("amola");

                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("company");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("date");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Notes")
                        .HasColumnType("ntext")
                        .HasColumnName("notes");

                    b.Property<DateTime?>("Now")
                        .HasColumnType("datetime")
                        .HasColumnName("now");

                    b.Property<string>("Offiice")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("offiice");

                    b.Property<bool?>("Run")
                        .HasColumnType("bit")
                        .HasColumnName("run");

                    b.Property<decimal?>("SndTotal")
                        .HasColumnType("money")
                        .HasColumnName("Snd_Total");

                    b.Property<decimal?>("SuTotal")
                        .HasColumnType("money")
                        .HasColumnName("SU_Total");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Symbol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Total")
                        .HasColumnType("money")
                        .HasColumnName("total");

                    b.Property<string>("Treasurer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.ToTable((string)null);

                    b.ToView("QQQ_Count_Office_Send_Money", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqqCountOfficeSendMoneyDollar", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<decimal?>("Amola")
                        .HasColumnType("money")
                        .HasColumnName("amola");

                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("company");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("date");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Notes")
                        .HasColumnType("ntext")
                        .HasColumnName("notes");

                    b.Property<DateTime?>("Now")
                        .HasColumnType("datetime")
                        .HasColumnName("now");

                    b.Property<string>("Offiice")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("offiice");

                    b.Property<bool?>("Run")
                        .HasColumnType("bit")
                        .HasColumnName("run");

                    b.Property<decimal?>("SndTotal")
                        .HasColumnType("money")
                        .HasColumnName("Snd_Total");

                    b.Property<decimal?>("SuTotal")
                        .HasColumnType("money")
                        .HasColumnName("SU_Total");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Symbol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Total")
                        .HasColumnType("money")
                        .HasColumnName("total");

                    b.Property<string>("Treasurer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.ToTable((string)null);

                    b.ToView("QQQ_Count_Office_Send_Money_Dollar", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqqCountOfficeTooCurrency", b =>
                {
                    b.Property<DateTime?>("Datee")
                        .HasColumnType("datetime2")
                        .HasColumnName("datee");

                    b.Property<string>("EventIdOther")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id_Other");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Note")
                        .HasColumnType("ntext")
                        .HasColumnName("note");

                    b.Property<DateTime?>("Now")
                        .HasColumnType("datetime")
                        .HasColumnName("now");

                    b.Property<string>("OfficeOther")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("Office_Other");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("SymbolL")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("Too")
                        .HasColumnType("bit");

                    b.Property<decimal?>("TotaLlafter")
                        .HasColumnType("money")
                        .HasColumnName("totaLLAfter");

                    b.ToTable((string)null);

                    b.ToView("QQQ_Count_Office_Too_Currency", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqqCountOfficeTooCurrencyDollar", b =>
                {
                    b.Property<DateTime?>("Datee")
                        .HasColumnType("datetime2")
                        .HasColumnName("datee");

                    b.Property<string>("EventIdOther")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id_Other");

                    b.Property<decimal?>("ExchanTooTotal")
                        .HasColumnType("money")
                        .HasColumnName("ExchanTOO_Total");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Note")
                        .HasColumnType("ntext")
                        .HasColumnName("note");

                    b.Property<DateTime?>("Now")
                        .HasColumnType("datetime")
                        .HasColumnName("now");

                    b.Property<string>("OfficeOther")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("Office_Other");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("SymbolL")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("Too")
                        .HasColumnType("bit");

                    b.ToTable((string)null);

                    b.ToView("QQQ_Count_Office_Too_Currency_Dollar", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqqCountPerson", b =>
                {
                    b.Property<string>("Costumer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("costumer");

                    b.Property<DateTime?>("Datee")
                        .HasColumnType("datetime2")
                        .HasColumnName("datee");

                    b.Property<decimal?>("Endaho")
                        .HasColumnType("money");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<int>("IdEvent")
                        .HasColumnType("int")
                        .HasColumnName("id_event");

                    b.Property<DateTime?>("MtabqaDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("mtabqaDate");

                    b.Property<string>("MtabqaDatee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mtabqaDatee");

                    b.Property<string>("Notess")
                        .HasColumnType("ntext")
                        .HasColumnName("notess");

                    b.Property<DateTime?>("Noww")
                        .HasColumnType("datetime")
                        .HasColumnName("noww");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<int?>("Trans")
                        .HasColumnType("int")
                        .HasColumnName("trans");

                    b.Property<decimal?>("TransTotal")
                        .HasColumnType("money");

                    b.Property<decimal?>("TransTotalO")
                        .HasColumnType("money");

                    b.Property<decimal?>("Ttttotal")
                        .HasColumnType("money")
                        .HasColumnName("TTTtotal");

                    b.Property<string>("Typeevent")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("typeevent");

                    b.Property<decimal?>("Wasil")
                        .HasColumnType("money");

                    b.ToTable((string)null);

                    b.ToView("QQQ_Count_Person", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqqOrderItemManager", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<int>("BuId")
                        .HasColumnType("int")
                        .HasColumnName("BU_ID");

                    b.Property<bool?>("Checkeed")
                        .HasColumnType("bit")
                        .HasColumnName("checkeed");

                    b.Property<string>("CodIqd")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("codIQD");

                    b.Property<string>("Codd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("codd");

                    b.Property<string>("Customer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("customer");

                    b.Property<DateTime?>("Datee")
                        .HasColumnType("datetime2")
                        .HasColumnName("datee");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Itemm")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("itemm");

                    b.Property<decimal?>("Prise")
                        .HasColumnType("money")
                        .HasColumnName("prise");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float")
                        .HasColumnName("quantity");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<decimal?>("Total")
                        .HasColumnType("money")
                        .HasColumnName("total");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.Property<string>("Wajba")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("wajba");

                    b.ToTable((string)null);

                    b.ToView("QQQ_Order_Item_Manager", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqqPrintPayToCostomer", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<string>("Customer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("customer");

                    b.Property<DateTime?>("Datee")
                        .HasColumnType("datetime2")
                        .HasColumnName("datee");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<decimal?>("LasttRemain")
                        .HasColumnType("money");

                    b.Property<string>("Notes")
                        .HasColumnType("ntext")
                        .HasColumnName("notes");

                    b.Property<DateTime?>("Now")
                        .HasColumnType("datetime")
                        .HasColumnName("now");

                    b.Property<bool?>("Runn")
                        .HasColumnType("bit")
                        .HasColumnName("runn");

                    b.Property<decimal?>("Safiremain")
                        .HasColumnType("money")
                        .HasColumnName("SAFIREMAIN");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("ToOffice")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("To_Office");

                    b.Property<decimal?>("Total")
                        .HasColumnType("money")
                        .HasColumnName("total");

                    b.Property<string>("Treasurer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Typee")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("typee");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.ToTable((string)null);

                    b.ToView("QQQ_Print_Pay_To_Costomer", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqqPurchaseInvoiceSumm", b =>
                {
                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<decimal?>("SmTotal")
                        .HasColumnType("money")
                        .HasColumnName("SM_Total");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.ToTable((string)null);

                    b.ToView("QQQ_Purchase_Invoice_Summ", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqqQtty", b =>
                {
                    b.Property<double?>("FirstQtty")
                        .HasColumnType("float");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<double?>("Naqis")
                        .HasColumnType("float");

                    b.Property<double?>("Quantity")
                        .HasColumnType("float")
                        .HasColumnName("quantity");

                    b.Property<int?>("Secode")
                        .HasColumnType("int")
                        .HasColumnName("secode");

                    b.Property<double?>("Ziyada")
                        .HasColumnType("float");

                    b.ToTable((string)null);

                    b.ToView("QQQ_Qtty", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqqqCountCompanyAllRemain", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("company");

                    b.Property<string>("Mob")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mob");

                    b.Property<decimal?>("Remainn")
                        .HasColumnType("money");

                    b.Property<decimal?>("Smtotal")
                        .HasColumnType("money")
                        .HasColumnName("SMTotal");

                    b.Property<decimal?>("Sndtotal")
                        .HasColumnType("money")
                        .HasColumnName("SNDTotal");

                    b.Property<decimal?>("SoldTotal")
                        .HasColumnType("money")
                        .HasColumnName("SOldTotal");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.ToTable((string)null);

                    b.ToView("QQQQ_Count_Company_All_Remain", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqqqCountCompanyPurchase", b =>
                {
                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Smtotal")
                        .HasColumnType("money")
                        .HasColumnName("SMTotal");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.ToTable((string)null);

                    b.ToView("QQQQ_Count_Company_Purchase", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqqqCountCompanyRemainingOld", b =>
                {
                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("SoldTotal")
                        .HasColumnType("money")
                        .HasColumnName("SOldTotal");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.ToTable((string)null);

                    b.ToView("QQQQ_Count_Company_RemainingOld", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqqqCountCompanyRemainingOldCountt", b =>
                {
                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Datee")
                        .HasColumnType("datetime2")
                        .HasColumnName("datee");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<decimal?>("SoldTotal")
                        .HasColumnType("money")
                        .HasColumnName("SOldTotal");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.ToTable((string)null);

                    b.ToView("QQQQ_Count_Company_RemainingOld_Countt", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqqqCountCompanySendMoney", b =>
                {
                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("company");

                    b.Property<decimal?>("Sndtotal")
                        .HasColumnType("money")
                        .HasColumnName("SNDTotal");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.ToTable((string)null);

                    b.ToView("QQQQ_Count_Company_Send_Money", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.QqqqCountCompanySendMoneyCountt", b =>
                {
                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("company");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<decimal?>("Sndtotal")
                        .HasColumnType("money")
                        .HasColumnName("SNDTotal");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.ToTable((string)null);

                    b.ToView("QQQQ_Count_Company_Send_Money_Countt", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.ReName", b =>
                {
                    b.Property<string>("Adress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("adress");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Mobilee")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("mobilee");

                    b.Property<string>("ReName1")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Re_Name");

                    b.ToTable("Re_Name", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.ReturnFatora", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("ID");

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<string>("CarNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("carNo");

                    b.Property<string>("Customer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("customer");

                    b.Property<DateTime?>("Datee")
                        .HasColumnType("datetime2")
                        .HasColumnName("datee");

                    b.Property<double?>("Dolar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("Driver")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DriverMob")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("driverMob");

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<decimal?>("Hamalya")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m)
                        .HasColumnName("hamalya");

                    b.Property<int?>("Idd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("idd");

                    b.Property<double?>("ManCcount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0)
                        .HasColumnName("man_ccount");

                    b.Property<string>("Mandob")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Mob")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mob");

                    b.Property<string>("Notes")
                        .HasColumnType("ntext")
                        .HasColumnName("notes");

                    b.Property<DateTime?>("Now")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("now")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal?>("RePayed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m);

                    b.Property<decimal?>("Remaing")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m);

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<decimal?>("Tootal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m);

                    b.Property<string>("Treasurer")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Treasurer");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.HasKey("Id");

                    b.ToTable("ReturnFatora", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.ReturnFatoraItem", b =>
                {
                    b.Property<string>("BoxContain")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("CodIqd")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("codIQD");

                    b.Property<string>("Codd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("codd");

                    b.Property<double?>("Countt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("Factoryy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("factoryy");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Itemm")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("itemm");

                    b.Property<decimal?>("Prise")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m)
                        .HasColumnName("prise");

                    b.Property<decimal?>("PurchasePrise")
                        .HasColumnType("money")
                        .HasColumnName("Purchase_prise");

                    b.Property<string>("QiyasUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("qiyas_unit");

                    b.Property<double?>("QttRemaining")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0)
                        .HasColumnName("Qtt_Remaining");

                    b.Property<double?>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0)
                        .HasColumnName("quantity")
                        .HasComment("Qtt_Remaining");

                    b.Property<int>("ReId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RE_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReId"));

                    b.Property<decimal?>("Rub7Karton")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m)
                        .HasColumnName("Rub7_karton");

                    b.Property<int?>("Secode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("secode");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<decimal?>("Total")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m)
                        .HasColumnName("total");

                    b.Property<string>("Typee")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("typee");

                    b.Property<string>("Wajba")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("wajba");

                    b.Property<float?>("Weznn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("real")
                        .HasDefaultValue(0f);

                    b.ToTable("ReturnFatora_items", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.RewardCustomerLinker", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("RewardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("RewardCustomerLinker", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.SecondryCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NameAr")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NameAR");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NameEN");

                    b.Property<string>("NameKr")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NameKR");

                    b.Property<string>("NameTr")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NameTR");

                    b.HasKey("Id");

                    b.ToTable("SecondryCategory", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.SendMoney", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<decimal?>("Amola")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m)
                        .HasColumnName("amola");

                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("company");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("date");

                    b.Property<string>("DecreaseFrom")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal?>("Dolar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m);

                    b.Property<string>("EventId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("event_id");

                    b.Property<decimal?>("Iqd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m)
                        .HasColumnName("IQD");

                    b.Property<string>("Notes")
                        .HasColumnType("ntext")
                        .HasColumnName("notes");

                    b.Property<DateTime?>("Now")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("now")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Offiice")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("offiice");

                    b.Property<bool?>("Run")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("run");

                    b.Property<decimal?>("SuTotal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m)
                        .HasColumnName("SU_Total");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Symbol")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Total")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m)
                        .HasColumnName("total");

                    b.Property<string>("Treasurer")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Treasurer");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.HasKey("Id");

                    b.ToTable("sendMoney", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.Status", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("StateAr")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StateEn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK_State");

                    b.ToTable("Status", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.Story", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("Expiration")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MediaType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MediaUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Message")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__Stories__3214EC07196386A4");

                    b.HasIndex("CreatedBy");

                    b.ToTable("Stories");
                });

            modelBuilder.Entity("sacmy.Server.Models.StoryView", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<Guid>("StoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ViewedAt")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("StoryId");

                    b.ToTable("StoryViews");
                });

            modelBuilder.Entity("sacmy.Server.Models.SystemSetting", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("address");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("description");

                    b.Property<string>("Descriptioneng")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("descriptioneng");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Mob1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mob1");

                    b.Property<string>("Mob2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mob2");

                    b.Property<string>("Mob3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mob3");

                    b.Property<string>("Mob4")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mob4");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("NameEng")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nameEng");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Web")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("WEB");

                    b.ToTable("SystemSetting", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.Task", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AssignedToEmployee")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int")
                        .HasColumnName("customerId");

                    b.Property<DateTime?>("Deadline")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("int")
                        .HasColumnName("invoiceId");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("TypeId");

                    b.HasIndex(new[] { "AssignedToEmployee" }, "IX_Task_AssignedToEmployee");

                    b.HasIndex(new[] { "CreatedBy" }, "IX_Task_CreatedBy");

                    b.HasIndex(new[] { "StatusId" }, "IX_Task_StatusId");

                    b.ToTable("Task", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.TaskNote", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FilelInk")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TaskId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CreatedBy" }, "IX_TaskNotes_CreatedBy");

                    b.HasIndex(new[] { "TaskId" }, "IX_TaskNotes_TaskId");

                    b.ToTable("TaskNotes");
                });

            modelBuilder.Entity("sacmy.Server.Models.TaskType", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("TypeAr")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("TypeEn")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("TypeKr")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("TypeTr")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.HasKey("Id");

                    b.ToTable("TaskType", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.TblLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Levels")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable("Tbl_Levels", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.TblTutriolVed", b =>
                {
                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Titlee")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<string>("Urll")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)")
                        .HasColumnName("URLL");

                    b.ToTable("Tbl_Tutriol_VED", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.TblUser", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Password")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Per")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("per");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Username")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.ToTable("TblUser", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.Track", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("EmployeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CustomerId" }, "IX_Tracks_CustomerId");

                    b.HasIndex(new[] { "EmployeId" }, "IX_Tracks_EmployeId");

                    b.HasIndex(new[] { "InvoiceId" }, "IX_Tracks_InvoiceId");

                    b.HasIndex(new[] { "TypeId" }, "IX_Tracks_TypeId");

                    b.ToTable("Tracks");
                });

            modelBuilder.Entity("sacmy.Server.Models.TrackComment", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AssignedTo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ReOpenAt")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("TrackId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "AssignedTo" }, "IX_TrackComments_AssignedTo");

                    b.HasIndex(new[] { "EmployeeId" }, "IX_TrackComments_EmployeeId");

                    b.HasIndex(new[] { "TrackId" }, "IX_TrackComments_TrackId");

                    b.ToTable("TrackComments");
                });

            modelBuilder.Entity("sacmy.Server.Models.TrackCommentState", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("StateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TrackCommentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "StateId" }, "IX_TrackCommentStates_StateId");

                    b.HasIndex(new[] { "TrackCommentId" }, "IX_TrackCommentStates_TrackCommentId");

                    b.ToTable("TrackCommentStates");
                });

            modelBuilder.Entity("sacmy.Server.Models.TrackType", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("TypeAr")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TypeEn")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TrackType", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.Typee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Typee1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("typee");

                    b.ToTable("typee", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.UnavilableOrderedItem", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BillId")
                        .HasColumnType("int")
                        .HasColumnName("billId");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PattrenCode")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("Secode")
                        .HasColumnType("int");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("Id");

                    b.ToTable("UnavilableOrderedItems");
                });

            modelBuilder.Entity("sacmy.Server.Models.UserNotification", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<Guid>("NotificationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("NotificationId");

                    b.ToTable("UserNotifications");
                });

            modelBuilder.Entity("sacmy.Server.Models.Userlogin", b =>
                {
                    b.Property<DateTime?>("Fulldate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Per")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("per");

                    b.Property<string>("Username")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.ToTable("userlogin", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.View1", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<decimal?>("BuyRemain")
                        .HasColumnType("money")
                        .HasColumnName("Buy_Remain");

                    b.Property<string>("Customer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("customer");

                    b.Property<string>("Mob")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("mob");

                    b.Property<decimal?>("Pftotal")
                        .HasColumnType("money")
                        .HasColumnName("PFTotal");

                    b.Property<decimal?>("Pttotal")
                        .HasColumnType("money")
                        .HasColumnName("PTTotal");

                    b.Property<decimal?>("RetRemain")
                        .HasColumnType("money")
                        .HasColumnName("Ret_Remain");

                    b.Property<decimal?>("Safiremain")
                        .HasColumnType("money")
                        .HasColumnName("SAFIREMAIN");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.ToTable((string)null);

                    b.ToView("View_1", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.WwLastCompanySecode", b =>
                {
                    b.Property<string>("CodIqd")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("codIQD");

                    b.Property<string>("Codd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("codd");

                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Itemm")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("itemm");

                    b.Property<decimal?>("Prise")
                        .HasColumnType("money")
                        .HasColumnName("prise");

                    b.Property<int?>("Secode")
                        .HasColumnType("int")
                        .HasColumnName("secode");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.ToTable((string)null);

                    b.ToView("WW_Last_Company_Secode", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.WwLastCompanySecodeForOrder", b =>
                {
                    b.Property<string>("CodIqd")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("codIQD");

                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Itemm")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("itemm");

                    b.Property<decimal?>("Lprise")
                        .HasColumnType("money")
                        .HasColumnName("LPrise");

                    b.Property<int?>("Secode")
                        .HasColumnType("int")
                        .HasColumnName("secode");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.ToTable((string)null);

                    b.ToView("WW_Last_Company_Secode_For_Orders", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.WwOrderByCompanySecodeReady", b =>
                {
                    b.Property<string>("Barcod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("barcod");

                    b.Property<string>("BoxContain")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Category")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("category");

                    b.Property<string>("Cod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cod");

                    b.Property<string>("CodIqd")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("codIQD");

                    b.Property<string>("Company")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("Count")
                        .HasColumnType("float");

                    b.Property<string>("Factory")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("factory");

                    b.Property<string>("Item")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("item");

                    b.Property<decimal?>("Lprise")
                        .HasColumnType("money")
                        .HasColumnName("LPrise");

                    b.Property<double?>("Mkaab")
                        .HasColumnType("float");

                    b.Property<string>("QiyasUnit")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("qiyas_unit");

                    b.Property<int?>("Secode")
                        .HasColumnType("int")
                        .HasColumnName("secode");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("type");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.ToTable((string)null);

                    b.ToView("WW_Order_BY_Company_Secode_Ready", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.WwwHorekaRetailName", b =>
                {
                    b.Property<string>("CostType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("costType");

                    b.Property<string>("Subb")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("subb");

                    b.ToTable((string)null);

                    b.ToView("WWW_Horeka_Retail_Names", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.ZzOnlineOrderTotal", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    b.Property<string>("Sub")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Total")
                        .HasColumnType("money");

                    b.ToTable((string)null);

                    b.ToView("ZZ_Online_Order_Total", (string)null);
                });

            modelBuilder.Entity("sacmy.Server.Models.ZzOrderOnlinePrint", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<string>("Barcod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("Checked")
                        .HasColumnType("bit")
                        .HasColumnName("checked");

                    b.Property<string>("CostumerName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Costumer_Name");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Item")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("MoldNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Note")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<DateTime?>("Now")
                        .HasColumnType("datetime")
                        .HasColumnName("now");

                    b.Property<int>("OrR")
                        .HasColumnType("int")
                        .HasColumnName("Or_R");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    b.Property<decimal?>("Price")
                        .HasColumnType("money");

                    b.Property<double?>("Qtty")
                        .HasColumnType("float");

                    b.Property<string>("Secod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("secod");

                    b.Property<string>("Sku")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SKU");

                    b.Property<string>("Sub")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("SumTotal")
                        .HasColumnType("money");

                    b.Property<decimal?>("Total")
                        .HasColumnType("money");

                    b.Property<string>("Treasurer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Uuser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("uuser");

                    b.ToTable((string)null);

                    b.ToView("ZZ_Order_Online_Print", (string)null);
                });

            modelBuilder.Entity("AspNetUserRole", b =>
                {
                    b.HasOne("sacmy.Server.Models.AspNetRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sacmy.Server.Models.AspNetUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("sacmy.Server.Models.Advertise", b =>
                {
                    b.HasOne("sacmy.Server.Models.Product", "Product")
                        .WithMany("Advertises")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_Advertise_Products");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("sacmy.Server.Models.AppSessionLog", b =>
                {
                    b.HasOne("sacmy.Server.Models.Customer", "Customer")
                        .WithMany("AppSessionLogs")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_AppSessionLogs_customer");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("sacmy.Server.Models.AspNetRoleClaim", b =>
                {
                    b.HasOne("sacmy.Server.Models.AspNetRole", "Role")
                        .WithMany("AspNetRoleClaims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("sacmy.Server.Models.AspNetUserClaim", b =>
                {
                    b.HasOne("sacmy.Server.Models.AspNetUser", "User")
                        .WithMany("AspNetUserClaims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("sacmy.Server.Models.AspNetUserLogin", b =>
                {
                    b.HasOne("sacmy.Server.Models.AspNetUser", "User")
                        .WithMany("AspNetUserLogins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("sacmy.Server.Models.AspNetUserToken", b =>
                {
                    b.HasOne("sacmy.Server.Models.AspNetUser", "User")
                        .WithMany("AspNetUserTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("sacmy.Server.Models.BonnaCollection", b =>
                {
                    b.HasOne("sacmy.Server.Models.HorecaInformation", "HorecaInfo")
                        .WithMany("BonnaCollections")
                        .HasForeignKey("HorecaInfoId")
                        .IsRequired()
                        .HasConstraintName("FK_BonnaCollections_HorecaInformations");

                    b.Navigation("HorecaInfo");
                });

            modelBuilder.Entity("sacmy.Server.Models.Catalog", b =>
                {
                    b.HasOne("sacmy.Server.Models.Brand", "Brand")
                        .WithMany("Catalogs")
                        .HasForeignKey("BrandId")
                        .IsRequired()
                        .HasConstraintName("FK_Catalogs_Brands");

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("sacmy.Server.Models.Category", b =>
                {
                    b.HasOne("sacmy.Server.Models.Brand", "Brand")
                        .WithMany("Categories")
                        .HasForeignKey("BrandId")
                        .IsRequired()
                        .HasConstraintName("FK_Categories_Brands");

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("sacmy.Server.Models.Collection", b =>
                {
                    b.HasOne("sacmy.Server.Models.Brand", "Brand")
                        .WithMany("Collections")
                        .HasForeignKey("BrandId")
                        .IsRequired()
                        .HasConstraintName("FK_Collections_Brands");

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("sacmy.Server.Models.CommentTrackState", b =>
                {
                    b.HasOne("sacmy.Server.Models.TrackComment", "TrackComment")
                        .WithMany("CommentTrackStates")
                        .HasForeignKey("TrackCommentId")
                        .HasConstraintName("FK_CommentTrackState_TrackComments");

                    b.Navigation("TrackComment");
                });

            modelBuilder.Entity("sacmy.Server.Models.CostumerLocation", b =>
                {
                    b.HasOne("sacmy.Server.Models.Customer", "Customer")
                        .WithMany("CostumerLocations")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK_Costumer_Locations_customer");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("sacmy.Server.Models.CustomerBillPoint", b =>
                {
                    b.HasOne("sacmy.Server.Models.Customer", "Customer")
                        .WithMany("CustomerBillPoints")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK_CustomerBillPoints_customer");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("sacmy.Server.Models.CustomerFavouriteProduct", b =>
                {
                    b.HasOne("sacmy.Server.Models.Customer", "Customer")
                        .WithMany("CustomerFavouriteProducts")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK_CustomerFavouriteProduct_customer");

                    b.HasOne("sacmy.Server.Models.Product", "Product")
                        .WithMany("CustomerFavouriteProducts")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_CustomerFavouriteProduct_Products");

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("sacmy.Server.Models.CustomerProductRelation", b =>
                {
                    b.HasOne("sacmy.Server.Models.Customer", "Customer")
                        .WithMany("CustomerProductRelations")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK_CustomerProductRelations_customer");

                    b.HasOne("sacmy.Server.Models.Product", "Product")
                        .WithMany("CustomerProductRelations")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_CustomerProductRelations_Products");

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("sacmy.Server.Models.CustomerViewedProduct", b =>
                {
                    b.HasOne("sacmy.Server.Models.Customer", "Customer")
                        .WithMany("CustomerViewedProducts")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK_CustomerViewedProduct_customer");

                    b.HasOne("sacmy.Server.Models.Product", "Product")
                        .WithMany("CustomerViewedProducts")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_CustomerViewedProduct_Products");

                    b.Navigation("Customer");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("sacmy.Server.Models.Employee", b =>
                {
                    b.HasOne("sacmy.Server.Models.EmpolyeeRole", "Role")
                        .WithMany("Employees")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_Employee_EmpolyeeRole");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("sacmy.Server.Models.FeatureItem", b =>
                {
                    b.HasOne("sacmy.Server.Models.Item1", "Item")
                        .WithMany("FeatureItems")
                        .HasForeignKey("ItemId")
                        .IsRequired()
                        .HasConstraintName("FK_FeatureItem_Items");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("sacmy.Server.Models.HorecaImage", b =>
                {
                    b.HasOne("sacmy.Server.Models.HorecaInformation", "HorecaInfo")
                        .WithMany("HorecaImages")
                        .HasForeignKey("HorecaInfoId")
                        .IsRequired()
                        .HasConstraintName("FK_HorecaImages_HorecaInformations");

                    b.Navigation("HorecaInfo");
                });

            modelBuilder.Entity("sacmy.Server.Models.HorecaInformation", b =>
                {
                    b.HasOne("sacmy.Server.Models.Employee", "CreatedByNavigation")
                        .WithMany("HorecaInformations")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK_HorecaInformations_Employee");

                    b.Navigation("CreatedByNavigation");
                });

            modelBuilder.Entity("sacmy.Server.Models.HorecaMenuImage", b =>
                {
                    b.HasOne("sacmy.Server.Models.HorecaInformation", "HorecaInfo")
                        .WithMany("HorecaMenuImages")
                        .HasForeignKey("HorecaInfoId")
                        .IsRequired()
                        .HasConstraintName("FK_HorecaMenuImage_HorecaInformations");

                    b.Navigation("HorecaInfo");
                });

            modelBuilder.Entity("sacmy.Server.Models.HorecaStatictsInformation", b =>
                {
                    b.HasOne("sacmy.Server.Models.HorecaInformation", "HorecaInfo")
                        .WithMany("HorecaStatictsInformations")
                        .HasForeignKey("HorecaInfoId")
                        .IsRequired()
                        .HasConstraintName("FK_HorecaStatictsInformation_HorecaInformations");

                    b.Navigation("HorecaInfo");
                });

            modelBuilder.Entity("sacmy.Server.Models.Item1", b =>
                {
                    b.HasOne("sacmy.Server.Models.Category1", "CategoryNavigation")
                        .WithMany("Item1s")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK_Items_Category");

                    b.HasOne("sacmy.Server.Models.SecondryCategory", "SecondryCategory")
                        .WithMany("Item1s")
                        .HasForeignKey("SecondryCategoryId")
                        .HasConstraintName("FK_Items_SecondryCategory");

                    b.Navigation("CategoryNavigation");

                    b.Navigation("SecondryCategory");
                });

            modelBuilder.Entity("sacmy.Server.Models.ItemImage", b =>
                {
                    b.HasOne("sacmy.Server.Models.Item1", "Item")
                        .WithMany("ItemImages")
                        .HasForeignKey("ItemId")
                        .HasConstraintName("FK_ItemImages_Items");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("sacmy.Server.Models.ItemsItemSpecification", b =>
                {
                    b.HasOne("sacmy.Server.Models.Item1", "Item")
                        .WithMany("ItemsItemSpecifications")
                        .HasForeignKey("ItemId")
                        .IsRequired()
                        .HasConstraintName("Items_ItemSpecification_Relation");

                    b.HasOne("sacmy.Server.Models.ItemSpecification", "Specifications")
                        .WithMany("ItemsItemSpecifications")
                        .HasForeignKey("SpecificationsId")
                        .IsRequired()
                        .HasConstraintName("Items_ItemSpecification_ItemSpecification_Relation");

                    b.Navigation("Item");

                    b.Navigation("Specifications");
                });

            modelBuilder.Entity("sacmy.Server.Models.OnlineOrder", b =>
                {
                    b.HasOne("sacmy.Server.Models.Customer", "Customer")
                        .WithMany("OnlineOrders")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_Online_Order_customer");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("sacmy.Server.Models.OnlineOrderItem", b =>
                {
                    b.HasOne("sacmy.Server.Models.Category1", "Category")
                        .WithMany("OnlineOrderItems")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("CategoryOrderRelation");

                    b.HasOne("sacmy.Server.Models.Item1", "ItemNavigation")
                        .WithMany("OnlineOrderItems")
                        .HasForeignKey("ItemId")
                        .IsRequired()
                        .HasConstraintName("OnlineOrderItemsRelation");

                    b.HasOne("sacmy.Server.Models.Product", "Item1")
                        .WithMany("OnlineOrderItems")
                        .HasForeignKey("ItemId")
                        .IsRequired()
                        .HasConstraintName("FK_Online_Order_Items_Products");

                    b.HasOne("sacmy.Server.Models.OnlineOrder", "Order")
                        .WithMany("OnlineOrderItems")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK_Online_Order_Items_Online_Order");

                    b.HasOne("sacmy.Server.Models.SecondryCategory", "SecondryCategory")
                        .WithMany("OnlineOrderItems")
                        .HasForeignKey("SecondryCategoryId")
                        .HasConstraintName("FK_Online_Order_Items_SecondryCategory");

                    b.Navigation("Category");

                    b.Navigation("Item1");

                    b.Navigation("ItemNavigation");

                    b.Navigation("Order");

                    b.Navigation("SecondryCategory");
                });

            modelBuilder.Entity("sacmy.Server.Models.OrderTracking", b =>
                {
                    b.HasOne("sacmy.Server.Models.OnlineOrder", "Order")
                        .WithMany("OrderTrackings")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK_OrderTracking_Online_Order");

                    b.HasOne("sacmy.Server.Models.OrderStage", "Stage")
                        .WithMany("OrderTrackings")
                        .HasForeignKey("StageId")
                        .IsRequired()
                        .HasConstraintName("FK_OrderTracking_OrderStage");

                    b.Navigation("Order");

                    b.Navigation("Stage");
                });

            modelBuilder.Entity("sacmy.Server.Models.OrderTrackingAttachment", b =>
                {
                    b.HasOne("sacmy.Server.Models.OrderTracking", "OrderTracking")
                        .WithMany("OrderTrackingAttachments")
                        .HasForeignKey("OrderTrackingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_OrderTrackingAttachment_OrderTracking");

                    b.Navigation("OrderTracking");
                });

            modelBuilder.Entity("sacmy.Server.Models.OrderTrackingInvoice", b =>
                {
                    b.HasOne("sacmy.Server.Models.BuyFatora", "BuyFatora")
                        .WithMany("OrderTrackingInvoices")
                        .HasForeignKey("BuyFatoraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("sacmy.Server.Models.OrderTracking", "OrderTracking")
                        .WithMany("OrderTrackingInvoices")
                        .HasForeignKey("OrderTrackingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BuyFatora");

                    b.Navigation("OrderTracking");
                });

            modelBuilder.Entity("sacmy.Server.Models.OtherBrand", b =>
                {
                    b.HasOne("sacmy.Server.Models.HorecaInformation", "HorecaInfo")
                        .WithMany("OtherBrands")
                        .HasForeignKey("HorecaInfoId")
                        .IsRequired()
                        .HasConstraintName("FK_OtherBrand_HorecaInformations");

                    b.Navigation("HorecaInfo");
                });

            modelBuilder.Entity("sacmy.Server.Models.OtherGlassAgency", b =>
                {
                    b.HasOne("sacmy.Server.Models.HorecaInformation", "HorecaInfo")
                        .WithMany("OtherGlassAgencies")
                        .HasForeignKey("HorecaInfoId")
                        .IsRequired()
                        .HasConstraintName("FK_OtherGlassAgency_HorecaInformations");

                    b.Navigation("HorecaInfo");
                });

            modelBuilder.Entity("sacmy.Server.Models.PasabahceSeries", b =>
                {
                    b.HasOne("sacmy.Server.Models.HorecaInformation", "HorecaInfo")
                        .WithMany("PasabahceSeries")
                        .HasForeignKey("HorecaInfoId")
                        .IsRequired()
                        .HasConstraintName("FK_PasabahceSeries_HorecaInformations");

                    b.Navigation("HorecaInfo");
                });

            modelBuilder.Entity("sacmy.Server.Models.Product", b =>
                {
                    b.HasOne("sacmy.Server.Models.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId")
                        .IsRequired()
                        .HasConstraintName("FK_Products_Brands");

                    b.HasOne("sacmy.Server.Models.Catalog", "Catalog")
                        .WithMany("Products")
                        .HasForeignKey("CatalogId")
                        .HasConstraintName("FK_Products_Catalogs");

                    b.HasOne("sacmy.Server.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_Products_Categories");

                    b.HasOne("sacmy.Server.Models.Collection", "Collection")
                        .WithMany("Products")
                        .HasForeignKey("CollectionId")
                        .HasConstraintName("FK_Products_Collections");

                    b.HasOne("sacmy.Server.Models.Material", "Material")
                        .WithMany("Products")
                        .HasForeignKey("MaterialId")
                        .IsRequired()
                        .HasConstraintName("FK_Products_Materials");

                    b.Navigation("Brand");

                    b.Navigation("Catalog");

                    b.Navigation("Category");

                    b.Navigation("Collection");

                    b.Navigation("Material");
                });

            modelBuilder.Entity("sacmy.Server.Models.ProductImage", b =>
                {
                    b.HasOne("sacmy.Server.Models.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_ProductImages_Products");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("sacmy.Server.Models.Story", b =>
                {
                    b.HasOne("sacmy.Server.Models.Brand", "CreatedByNavigation")
                        .WithMany("Stories")
                        .HasForeignKey("CreatedBy")
                        .IsRequired()
                        .HasConstraintName("FK_Stories_Brands");

                    b.Navigation("CreatedByNavigation");
                });

            modelBuilder.Entity("sacmy.Server.Models.StoryView", b =>
                {
                    b.HasOne("sacmy.Server.Models.Customer", "Customer")
                        .WithMany("StoryViews")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK_StoryViews_customer");

                    b.HasOne("sacmy.Server.Models.Story", "Story")
                        .WithMany("StoryViews")
                        .HasForeignKey("StoryId")
                        .IsRequired()
                        .HasConstraintName("FK_StoryViews_Stories");

                    b.Navigation("Customer");

                    b.Navigation("Story");
                });

            modelBuilder.Entity("sacmy.Server.Models.Task", b =>
                {
                    b.HasOne("sacmy.Server.Models.Employee", "AssignedToEmployeeNavigation")
                        .WithMany("TaskAssignedToEmployeeNavigations")
                        .HasForeignKey("AssignedToEmployee")
                        .HasConstraintName("FK_Task_Employee");

                    b.HasOne("sacmy.Server.Models.Employee", "CreatedByNavigation")
                        .WithMany("TaskCreatedByNavigations")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK_Task_Employee1");

                    b.HasOne("sacmy.Server.Models.Customer", "Customer")
                        .WithMany("Tasks")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_Task_customer");

                    b.HasOne("sacmy.Server.Models.BuyFatora", "Invoice")
                        .WithMany("Tasks")
                        .HasForeignKey("InvoiceId")
                        .HasConstraintName("FK_Task_BuyFatora");

                    b.HasOne("sacmy.Server.Models.Status", "Status")
                        .WithMany("Tasks")
                        .HasForeignKey("StatusId")
                        .HasConstraintName("FK_Task_Status");

                    b.HasOne("sacmy.Server.Models.TaskType", "Type")
                        .WithMany("Tasks")
                        .HasForeignKey("TypeId")
                        .IsRequired()
                        .HasConstraintName("FK_Task_TaskType");

                    b.Navigation("AssignedToEmployeeNavigation");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("Customer");

                    b.Navigation("Invoice");

                    b.Navigation("Status");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("sacmy.Server.Models.TaskNote", b =>
                {
                    b.HasOne("sacmy.Server.Models.Employee", "CreatedByNavigation")
                        .WithMany("TaskNotes")
                        .HasForeignKey("CreatedBy")
                        .IsRequired()
                        .HasConstraintName("FK_TaskNotes_Employee");

                    b.HasOne("sacmy.Server.Models.Task", "Task")
                        .WithMany("TaskNotes")
                        .HasForeignKey("TaskId")
                        .HasConstraintName("FK_TaskNotes_Task");

                    b.Navigation("CreatedByNavigation");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("sacmy.Server.Models.Track", b =>
                {
                    b.HasOne("sacmy.Server.Models.Customer", "Customer")
                        .WithMany("Tracks")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK_Tracks_customer");

                    b.HasOne("sacmy.Server.Models.Employee", "Employe")
                        .WithMany("Tracks")
                        .HasForeignKey("EmployeId")
                        .HasConstraintName("FK_Tracks_Employee");

                    b.HasOne("sacmy.Server.Models.BuyFatora", "Invoice")
                        .WithMany("Tracks")
                        .HasForeignKey("InvoiceId")
                        .HasConstraintName("FK_Tracks_BuyFatora");

                    b.HasOne("sacmy.Server.Models.TrackType", "Type")
                        .WithMany("Tracks")
                        .HasForeignKey("TypeId")
                        .HasConstraintName("FK_Tracks_TrackType");

                    b.Navigation("Customer");

                    b.Navigation("Employe");

                    b.Navigation("Invoice");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("sacmy.Server.Models.TrackComment", b =>
                {
                    b.HasOne("sacmy.Server.Models.Employee", "AssignedToNavigation")
                        .WithMany("TrackCommentAssignedToNavigations")
                        .HasForeignKey("AssignedTo")
                        .HasConstraintName("FK_TrackComments_Employee1");

                    b.HasOne("sacmy.Server.Models.Employee", "Employee")
                        .WithMany("TrackCommentEmployees")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_TrackComments_Employee");

                    b.HasOne("sacmy.Server.Models.Track", "Track")
                        .WithMany("TrackComments")
                        .HasForeignKey("TrackId")
                        .HasConstraintName("FK_TrackComments_Tracks");

                    b.Navigation("AssignedToNavigation");

                    b.Navigation("Employee");

                    b.Navigation("Track");
                });

            modelBuilder.Entity("sacmy.Server.Models.TrackCommentState", b =>
                {
                    b.HasOne("sacmy.Server.Models.Status", "State")
                        .WithMany("TrackCommentStates")
                        .HasForeignKey("StateId")
                        .HasConstraintName("FK_TrackCommentStates_State");

                    b.HasOne("sacmy.Server.Models.TrackComment", "TrackComment")
                        .WithMany("TrackCommentStates")
                        .HasForeignKey("TrackCommentId")
                        .HasConstraintName("FK_TrackCommentStates_TrackComments");

                    b.Navigation("State");

                    b.Navigation("TrackComment");
                });

            modelBuilder.Entity("sacmy.Server.Models.UserNotification", b =>
                {
                    b.HasOne("sacmy.Server.Models.Customer", "Customer")
                        .WithMany("UserNotifications")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK_UserNotifications_customer");

                    b.HasOne("sacmy.Server.Models.Notification", "Notification")
                        .WithMany("UserNotifications")
                        .HasForeignKey("NotificationId")
                        .IsRequired()
                        .HasConstraintName("FK_UserNotifications_Notifications");

                    b.Navigation("Customer");

                    b.Navigation("Notification");
                });

            modelBuilder.Entity("sacmy.Server.Models.AspNetRole", b =>
                {
                    b.Navigation("AspNetRoleClaims");
                });

            modelBuilder.Entity("sacmy.Server.Models.AspNetUser", b =>
                {
                    b.Navigation("AspNetUserClaims");

                    b.Navigation("AspNetUserLogins");

                    b.Navigation("AspNetUserTokens");
                });

            modelBuilder.Entity("sacmy.Server.Models.Brand", b =>
                {
                    b.Navigation("Catalogs");

                    b.Navigation("Categories");

                    b.Navigation("Collections");

                    b.Navigation("Products");

                    b.Navigation("Stories");
                });

            modelBuilder.Entity("sacmy.Server.Models.BuyFatora", b =>
                {
                    b.Navigation("OrderTrackingInvoices");

                    b.Navigation("Tasks");

                    b.Navigation("Tracks");
                });

            modelBuilder.Entity("sacmy.Server.Models.Catalog", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("sacmy.Server.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("sacmy.Server.Models.Category1", b =>
                {
                    b.Navigation("Item1s");

                    b.Navigation("OnlineOrderItems");
                });

            modelBuilder.Entity("sacmy.Server.Models.Collection", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("sacmy.Server.Models.Customer", b =>
                {
                    b.Navigation("AppSessionLogs");

                    b.Navigation("CostumerLocations");

                    b.Navigation("CustomerBillPoints");

                    b.Navigation("CustomerFavouriteProducts");

                    b.Navigation("CustomerProductRelations");

                    b.Navigation("CustomerViewedProducts");

                    b.Navigation("OnlineOrders");

                    b.Navigation("StoryViews");

                    b.Navigation("Tasks");

                    b.Navigation("Tracks");

                    b.Navigation("UserNotifications");
                });

            modelBuilder.Entity("sacmy.Server.Models.Employee", b =>
                {
                    b.Navigation("HorecaInformations");

                    b.Navigation("TaskAssignedToEmployeeNavigations");

                    b.Navigation("TaskCreatedByNavigations");

                    b.Navigation("TaskNotes");

                    b.Navigation("TrackCommentAssignedToNavigations");

                    b.Navigation("TrackCommentEmployees");

                    b.Navigation("Tracks");
                });

            modelBuilder.Entity("sacmy.Server.Models.EmpolyeeRole", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("sacmy.Server.Models.HorecaInformation", b =>
                {
                    b.Navigation("BonnaCollections");

                    b.Navigation("HorecaImages");

                    b.Navigation("HorecaMenuImages");

                    b.Navigation("HorecaStatictsInformations");

                    b.Navigation("OtherBrands");

                    b.Navigation("OtherGlassAgencies");

                    b.Navigation("PasabahceSeries");
                });

            modelBuilder.Entity("sacmy.Server.Models.Item1", b =>
                {
                    b.Navigation("FeatureItems");

                    b.Navigation("ItemImages");

                    b.Navigation("ItemsItemSpecifications");

                    b.Navigation("OnlineOrderItems");
                });

            modelBuilder.Entity("sacmy.Server.Models.ItemSpecification", b =>
                {
                    b.Navigation("ItemsItemSpecifications");
                });

            modelBuilder.Entity("sacmy.Server.Models.Material", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("sacmy.Server.Models.Notification", b =>
                {
                    b.Navigation("UserNotifications");
                });

            modelBuilder.Entity("sacmy.Server.Models.OnlineOrder", b =>
                {
                    b.Navigation("OnlineOrderItems");

                    b.Navigation("OrderTrackings");
                });

            modelBuilder.Entity("sacmy.Server.Models.OrderStage", b =>
                {
                    b.Navigation("OrderTrackings");
                });

            modelBuilder.Entity("sacmy.Server.Models.OrderTracking", b =>
                {
                    b.Navigation("OrderTrackingAttachments");

                    b.Navigation("OrderTrackingInvoices");
                });

            modelBuilder.Entity("sacmy.Server.Models.Product", b =>
                {
                    b.Navigation("Advertises");

                    b.Navigation("CustomerFavouriteProducts");

                    b.Navigation("CustomerProductRelations");

                    b.Navigation("CustomerViewedProducts");

                    b.Navigation("OnlineOrderItems");

                    b.Navigation("ProductImages");
                });

            modelBuilder.Entity("sacmy.Server.Models.SecondryCategory", b =>
                {
                    b.Navigation("Item1s");

                    b.Navigation("OnlineOrderItems");
                });

            modelBuilder.Entity("sacmy.Server.Models.Status", b =>
                {
                    b.Navigation("Tasks");

                    b.Navigation("TrackCommentStates");
                });

            modelBuilder.Entity("sacmy.Server.Models.Story", b =>
                {
                    b.Navigation("StoryViews");
                });

            modelBuilder.Entity("sacmy.Server.Models.Task", b =>
                {
                    b.Navigation("TaskNotes");
                });

            modelBuilder.Entity("sacmy.Server.Models.TaskType", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("sacmy.Server.Models.Track", b =>
                {
                    b.Navigation("TrackComments");
                });

            modelBuilder.Entity("sacmy.Server.Models.TrackComment", b =>
                {
                    b.Navigation("CommentTrackStates");

                    b.Navigation("TrackCommentStates");
                });

            modelBuilder.Entity("sacmy.Server.Models.TrackType", b =>
                {
                    b.Navigation("Tracks");
                });
#pragma warning restore 612, 618
        }
    }
}
