@using Microsoft.AspNetCore.Components.Forms
@using sacmy.Client.Services
@using sacmy.Client.Components.DialogHeader
@using sacmy.Shared.ViewModels.BrandViewModel
@using sacmy.Shared.ViewModels.Products
@inject ProductsService ProductsService
@inject ToastService ToastService
@inject IJSRuntime JS


<style>
    @@import url('../../../wwwroot/css/variables.css');
    .modal-dialog {
        max-width: 95%;
        margin: 1.5rem auto;
        height: calc(100vh - 3rem);
        display: flex;
        align-items: center;
    }

    .modal-content {
        max-height: 100%;
        display: flex;
        flex-direction: column;
        overflow: hidden;
        border-radius: var(--border-radius-lg);
    }

    /* Scrollable Body Container */
    .modal-body-container {
        flex: 1;
        overflow-y: auto;
        max-height: calc(100vh - 8.5rem);
    }

    /* Card Styles */
    .content-card {
        background-color: var(--text-white);
        border-radius: var(--border-radius);
        border: 1px solid var(--border-color);
        margin-bottom: 0;
    }

    .card-header {
        background-color: var(--bg-light);
        padding: var(--spacing-sm) var(--spacing-md);
        border-bottom: 1px solid var(--border-color);
    }

    .card-body {
        padding: var(--spacing-md);
    }

    .section-title {
        margin: 0;
        font-size: var(--font-size-sm);
        font-weight: 600;
        color: var(--primary-color);
        display: flex;
        align-items: center;
        gap: var(--spacing-sm);
    }

    /* Product Images Styles */
    .product-images {
        min-height: 120px;
    }

    .image-container {
        position: relative;
        width: 110px;
        height: 110px;
        border-radius: var(--border-radius);
        overflow: hidden;
        border: 1px solid var(--border-color);
        background-color: var(--text-white);
    }

    .product-thumbnail {
        width: 100%;
        height: 100%;
        object-fit: contain;
    }

    .delete-button {
        position: absolute;
        top: 4px;
        right: 4px;
        width: 24px;
        height: 24px;
        border-radius: 50%;
        background-color: var(--danger-color);
        border: none;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        font-size: var(--font-size-xs);
        padding: 0;
    }

    .no-images {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        background-color: var(--bg-light);
        height: 140px;
        border-radius: var(--border-radius);
        color: var(--secondary-color);
    }

        .no-images i {
            font-size: 2rem;
            margin-bottom: var(--spacing-sm);
        }

        .no-images p {
            margin: 0;
        }

    /* Upload Zone Styles */
    .upload-zone {
        border: 1px dashed var(--border-color);
        border-radius: var(--border-radius);
        background-color: var(--bg-light);
        cursor: pointer;
    }

        .upload-zone.dragging {
            border-color: var(--primary-color);
            background-color: var(--primary-light, #e9effd);
        }

        .upload-zone.uploading {
            pointer-events: none;
            opacity: 0.7;
        }

    .upload-icon {
        font-size: 1.5rem;
    }

    /* Form Styles */
    .form-floating > .form-control,
    .form-floating > .form-select {
        height: calc(3rem + 2px);
        padding: var(--spacing-md) var(--spacing-sm);
    }

        .form-floating > .form-control:focus ~ label,
        .form-floating > .form-control:not(:placeholder-shown) ~ label,
        .form-floating > .form-select ~ label {
            opacity: 0.65;
            transform: scale(0.85) translateY(-0.5rem) translateX(0.15rem);
        }

    .form-floating > label {
        padding: var(--spacing-md) var(--spacing-sm);
    }

    /* Footer Styles */
    .modal-footer {
        padding: var(--spacing-sm) var(--spacing-md);
        background-color: var(--bg-light);
        border-top: 1px solid var(--border-color);
    }

    .btn-outline-secondary {
        color: var(--secondary-color);
        border-color: var(--secondary-color);
    }

    .btn-primary {
        background-color: var(--primary-color);
        border-color: var(--primary-color);
        color: var(--text-white);
    }

    /* Custom scrollbar styles */
    .modal-body-container::-webkit-scrollbar {
        width: 6px;
    }

    .modal-body-container::-webkit-scrollbar-track {
        background: var(--bg-light);
    }

    .modal-body-container::-webkit-scrollbar-thumb {
        background: var(--border-color);
        border-radius: 3px;
    }

    
    @@media (min-width: 1200px) {
        .modal-dialog

    {
        max-width: 1100px;
    }

    }
</style>

@if (IsVisible)
{
    <div class="modal show d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.5);" id="header">
        <div class="modal-dialog modal-xl modal-dialog-centered">
            <div class="modal-content border-0 shadow">
                <!-- Fixed header -->
                <DialogHeader Title="Advanced Edit"
                              Icon="bi bi-list-check"
                              OnClose="@(HandleClose)" />

                <!-- Scrollable body -->
                <div class="modal-body-container">
                    @if (isLoading)
                    {
                        <div class="modal-body d-flex align-items-center justify-content-center py-4">
                            <div class="text-center">
                                <div class="spinner-border text-primary mb-2" role="status"></div>
                                <p class="text-muted small mb-0">Loading product details...</p>
                            </div>
                        </div>
                    }
                    else if (productDetail == null)
                    {
                        <div class="modal-body d-flex align-items-center justify-content-center py-4">
                            <div class="alert alert-danger d-inline-flex align-items-center gap-2 mb-0 py-2 px-3">
                                <i class="bi bi-exclamation-triangle"></i>
                                <span>Failed to load product details</span>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="modal-body p-3">
                            <div class="row g-3">
                                <!-- Images Section -->
                                <div class="col-12">
                                    <div class="content-card">
                                        <div class="card-header">
                                            <h6 class="section-title">
                                                <i class="bi bi-images"></i>
                                                <span>Product Images</span>
                                            </h6>
                                        </div>

                                        <!-- Image Gallery -->
                                        <div class="card-body">
                                            <div class="product-images mb-3">
                                                @if (productDetail.Images?.Any() == true)
                                                {
                                                    <div class="row g-2">
                                                        @foreach (var image in productDetail.Images)
                                                        {
                                                            <div class="col-auto">
                                                                <div class="image-container">
                                                                    <img src="@image.ImageLink"
                                                                         alt="Product Image"
                                                                         class="product-thumbnail" />

                                                                    <button class="delete-button"
                                                                            @onclick="() => HandleImageDelete(image.Id)"
                                                                            disabled="@(isDeletingImage == image.Id)">
                                                                        @if (isDeletingImage == image.Id)
                                                                        {
                                                                            <div class="spinner-border spinner-border-sm text-white" role="status">
                                                                                <span class="visually-hidden">Loading...</span>
                                                                            </div>
                                                                        }
                                                                        else
                                                                        {
                                                                            <i class="bi bi-trash text-white"></i>
                                                                        }
                                                                    </button>
                                                                </div>
                                                            </div>
                                                        }
                                                    </div>
                                                }
                                                else
                                                {
                                                    <div class="no-images">
                                                        <i class="bi bi-image"></i>
                                                        <p>No images available</p>
                                                    </div>
                                                }
                                            </div>

                                            <!-- Upload Zone -->
                                            <div class="upload-container">
                                                <InputFile OnChange="@HandleFileSelected"
                                                           multiple
                                                           accept="image/*"
                                                           class="d-none"
                                                           id="@fileInputId" />

                                                <div class="upload-zone @(isDragging ? "dragging" : "") @(isUploading ? "uploading" : "")"
                                                @ondragenter:preventDefault
                                                     @ondragenter="HandleDragEnter"
                                                @ondragleave:preventDefault
                                                     @ondragleave="HandleDragLeave"
                                                @ondragover:preventDefault
                                                @ondrop:preventDefault
                                                     @ondrop="HandleDrop"
                                                     @onclick="ClickFileInput">
                                                    <div class="text-center py-3 px-2">
                                                        @if (isUploading)
                                                        {
                                                            <div class="spinner-border text-primary mb-2" role="status">
                                                                <span class="visually-hidden">Loading...</span>
                                                            </div>
                                                            <p class="mb-0 small">Uploading images...</p>
                                                        }
                                                        else
                                                        {
                                                            <i class="bi bi-cloud-upload text-primary upload-icon"></i>
                                                            <p class="mt-2 mb-1 small">Drag and drop images here</p>
                                                            <p class="text-muted small mb-2">or</p>
                                                            <button type="button" class="btn btn-outline-primary btn-sm px-3">
                                                                Browse Files
                                                            </button>
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Basic Information -->
                                <div class="col-12">
                                    <div class="content-card">
                                        <div class="card-header">
                                            <h6 class="section-title">
                                                <i class="bi bi-info-circle"></i>
                                                <span>Basic Information</span>
                                            </h6>
                                        </div>
                                        <div class="card-body">
                                            <div class="row g-3">
                                                <div class="col-md-3">
                                                    <div class="form-floating">
                                                        <input type="text"
                                                               class="form-control bg-light"
                                                               value="@productDetail.Sku"
                                                               readonly
                                                               id="skuInput" />
                                                        <label for="skuInput" class="text-muted">SKU</label>
                                                    </div>
                                                </div>
                                                <div class="col-md-3">
                                                    <div class="form-floating">
                                                        <input type="text"
                                                               class="form-control bg-light"
                                                               value="@productDetail.PatternNumber"
                                                               readonly
                                                               id="patternInput" />
                                                        <label for="patternInput" class="text-muted">Pattern Number</label>
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="form-floating">
                                                        <input type="text"
                                                               class="form-control"
                                                               @bind="productDetail.Name"
                                                               id="nameInput" />
                                                        <label for="nameInput" class="text-muted">Name</label>
                                                    </div>
                                                </div>
                                                <div class="col-12">
                                                    <div class="form-floating">
                                                        <textarea class="form-control"
                                                                  style="height: 90px"
                                                                  @bind="productDetail.Description"
                                                                  id="descriptionInput">
                                                                                </textarea>
                                                        <label for="descriptionInput" class="text-muted">Description</label>
                                                    </div>
                                                </div>
                                                <div class="col-md-4">
                                                    <div class="form-floating">
                                                        <input type="number"
                                                               step="0.01"
                                                               class="form-control"
                                                               @bind="productDetail.Price"
                                                               id="priceInput" />
                                                        <label for="priceInput" class="text-muted">Price ($)</label>
                                                    </div>
                                                </div>
                                                <div class="col-md-4">
                                                    <div class="form-floating">
                                                        <input type="number"
                                                               class="form-control"
                                                               @bind="productDetail.Points"
                                                               id="pointsInput" />
                                                        <label for="pointsInput" class="text-muted">Points</label>
                                                    </div>
                                                </div>
                                                <div class="col-md-4">
                                                    <div class="form-floating">
                                                        <input type="number"
                                                               class="form-control"
                                                               @bind="productDetail.Quantity"
                                                               id="quantityInput" />
                                                        <label for="quantityInput" class="text-muted">Quantity</label>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Categories & Relations -->
                                <div class="col-12">
                                    <div class="content-card">
                                        <div class="card-header">
                                            <h6 class="section-title">
                                                <i class="bi bi-diagram-3"></i>
                                                <span>Categories & Relations</span>
                                            </h6>
                                        </div>
                                        <div class="card-body">
                                            <div class="row g-3">
                                                <div class="col-md-4">
                                                    <div class="form-floating">
                                                        <select class="form-select"
                                                                @bind="productDetail.BrandId"
                                                                id="brandSelect">
                                                            @foreach (var brand in Brands ?? new List<BrandViewModel>())
                                                            {
                                                                <option value="@brand.Id">@brand.NameEn</option>
                                                            }
                                                        </select>
                                                        <label for="brandSelect" class="text-muted">Brand</label>
                                                    </div>
                                                </div>
                                                <div class="col-md-4">
                                                    <div class="form-floating">
                                                        <select class="form-select"
                                                                @bind="productDetail.CategoryId"
                                                                id="categorySelect">
                                                            @foreach (var category in Categories ?? new List<Category>())
                                                            {
                                                                <option value="@category.Id">@category.NameEn</option>
                                                            }
                                                        </select>
                                                        <label for="categorySelect" class="text-muted">Category</label>
                                                    </div>
                                                </div>
                                                <div class="col-md-4">
                                                    <div class="form-floating">
                                                        <select class="form-select"
                                                                @bind="productDetail.CollectionId"
                                                                id="collectionSelect">
                                                            @foreach (var collection in Collections ?? new List<Collection>())
                                                            {
                                                                <option value="@collection.Id">@collection.NameEn</option>
                                                            }
                                                        </select>
                                                        <label for="collectionSelect" class="text-muted">Collection</label>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Two Column Layout for Measurements and Packaging -->
                                <div class="col-md-6">
                                    <div class="content-card h-100">
                                        <div class="card-header">
                                            <h6 class="section-title">
                                                <i class="bi bi-rulers"></i>
                                                <span>Measurements</span>
                                            </h6>
                                        </div>
                                        <div class="card-body">
                                            <div class="row g-3">
                                                <div class="col-6">
                                                    <div class="form-floating">
                                                        <input type="number"
                                                               step="0.01"
                                                               class="form-control"
                                                               @bind="productDetail.Height"
                                                               id="heightInput" />
                                                        <label for="heightInput" class="text-muted">Height</label>
                                                    </div>
                                                </div>
                                                <div class="col-6">
                                                    <div class="form-floating">
                                                        <input type="number"
                                                               step="0.01"
                                                               class="form-control"
                                                               @bind="productDetail.Diameter"
                                                               id="diameterInput" />
                                                        <label for="diameterInput" class="text-muted">Diameter</label>
                                                    </div>
                                                </div>
                                                <div class="col-6">
                                                    <div class="form-floating">
                                                        <input type="number"
                                                               step="0.01"
                                                               class="form-control"
                                                               @bind="productDetail.Top"
                                                               id="topInput" />
                                                        <label for="topInput" class="text-muted">Top</label>
                                                    </div>
                                                </div>
                                                <div class="col-6">
                                                    <div class="form-floating">
                                                        <input type="number"
                                                               step="0.01"
                                                               class="form-control"
                                                               @bind="productDetail.Base"
                                                               id="baseInput" />
                                                        <label for="baseInput" class="text-muted">Base</label>
                                                    </div>
                                                </div>
                                                <div class="col-md-4">
                                                    <div class="form-floating">
                                                        <input type="number"
                                                               step="0.01"
                                                               class="form-control"
                                                               @bind="productDetail.Volume"
                                                               id="volumeInput" />
                                                        <label for="volumeInput" class="text-muted">Volume</label>
                                                    </div>
                                                </div>
                                                <div class="col-md-4">
                                                    <div class="form-floating">
                                                        <input type="number"
                                                               step="0.01"
                                                               class="form-control"
                                                               @bind="productDetail.Weight"
                                                               id="weightInput" />
                                                        <label for="weightInput" class="text-muted">Weight</label>
                                                    </div>
                                                </div>
                                                <div class="col-md-4">
                                                    <div class="form-floating">
                                                        <input type="number"
                                                               step="0.01"
                                                               class="form-control"
                                                               @bind="productDetail.Area"
                                                               id="areaInput" />
                                                        <label for="areaInput" class="text-muted">Area</label>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="content-card h-100">
                                        <div class="card-header">
                                            <h6 class="section-title">
                                                <i class="bi bi-box-seam"></i>
                                                <span>Packaging Information</span>
                                            </h6>
                                        </div>
                                        <div class="card-body">
                                            <div class="row g-3">
                                                <div class="col-md-6">
                                                    <div class="form-floating">
                                                        <input type="text"
                                                               class="form-control"
                                                               @bind="productDetail.InnerType"
                                                               id="innerTypeInput" />
                                                        <label for="innerTypeInput" class="text-muted">Inner Type</label>
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="form-floating">
                                                        <input type="number"
                                                               class="form-control"
                                                               @bind="productDetail.InnerTypeCount"
                                                               id="innerTypeCountInput" />
                                                        <label for="innerTypeCountInput" class="text-muted">Inner Type Count</label>
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="form-floating">
                                                        <input type="text"
                                                               class="form-control"
                                                               @bind="productDetail.OuterType"
                                                               id="outerTypeInput" />
                                                        <label for="outerTypeInput" class="text-muted">Outer Type</label>
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="form-floating">
                                                        <input type="number"
                                                               class="form-control"
                                                               @bind="productDetail.OuterTypeCount"
                                                               id="outerTypeCountInput" />
                                                        <label for="outerTypeCountInput" class="text-muted">Outer Type Count</label>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- Product Identifiers -->
                                <div class="col-12">
                                    <div class="content-card">
                                        <div class="card-header">
                                            <h6 class="section-title">
                                                <i class="bi bi-upc-scan"></i>
                                                <span>Product Identifiers</span>
                                            </h6>
                                        </div>
                                        <div class="card-body">
                                            <div class="row g-3">
                                                <div class="col-md-6">
                                                    <div class="form-floating">
                                                        <input type="text"
                                                               class="form-control"
                                                               @bind="productDetail.Ean"
                                                               id="eanInput" />
                                                        <label for="eanInput" class="text-muted">EAN</label>
                                                    </div>
                                                </div>
                                                <div class="col-md-6">
                                                    <div class="form-floating">
                                                        <input type="text"
                                                               class="form-control"
                                                               @bind="productDetail.Upc"
                                                               id="upcInput" />
                                                        <label for="upcInput" class="text-muted">UPC</label>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <!-- Fixed footer -->
                <div class="modal-footer">
                    <button type="button"
                            class="btn btn-outline-secondary"
                            @onclick="HandleClose"
                            disabled="@isSaving">
                        Cancel
                    </button>
                    <button type="button"
                            class="btn btn-primary"
                            @onclick="SaveBasicInformation"
                            disabled="@isSaving">
                        @if (isSaving)
                        {
                            <span class="spinner-border spinner-border-sm me-2"></span>
                            <span>Saving Changes...</span>
                        }
                        else
                        {
                            <i class="bi bi-check2 me-1"></i>
                            <span>Save Changes</span>
                        }
                    </button>
                </div>
            </div>
        </div>
    </div>
}


@code {
    [Parameter] public Product Product { get; set; }
    [Parameter] public bool IsVisible { get; set; }
    [Parameter] public EventCallback<bool> IsVisibleChanged { get; set; }
    [Parameter] public EventCallback OnSaved { get; set; }
    [Parameter] public IEnumerable<Category> Categories { get; set; }
    [Parameter] public IEnumerable<Collection> Collections { get; set; }
    [Parameter] public IEnumerable<BrandViewModel> Brands { get; set; }

    private string isDeletingImage;
    private bool isLoading = true;
    private bool isSaving = false;
    private bool isDragging;
    private bool isUploading;
    private ProductDetailViewModel productDetail;
    private string fileInputId = "fileInput_" + Guid.NewGuid().ToString("N");


    protected override async Task OnParametersSetAsync()
    {
        if (IsVisible && Product != null)
        {
            await LoadProductDetails();
        }
    }

    private async Task ClickFileInput()
    {
        await JS.InvokeVoidAsync("imageUploadHelpers.clickInput", fileInputId);
    }

    private void HandleDragEnter()
    {
        isDragging = true;
        StateHasChanged();
    }

    private void HandleDragLeave()
    {
        isDragging = false;
        StateHasChanged();
    }

    private async Task HandleDrop(DragEventArgs e)
    {
        try
        {
            isDragging = false;
            isUploading = true;
            StateHasChanged();

            if (productDetail == null) return;

            // Get the dropped files using JS interop
            var files = await JS.InvokeAsync<string[]>("imageUploadHelpers.handleDrop", e);

            if (files == null || files.Length == 0) return;

            foreach (var fileData in files)
            {
                try
                {
                    // Convert the base64 string to a byte array
                    byte[] fileBytes = Convert.FromBase64String(fileData);
                    using var memoryStream = new MemoryStream(fileBytes);

                    var result = await ProductsService.AddProductImageAsync(
                        productDetail.Id,
                        memoryStream,
                        "dropped_image.jpg",
                        productDetail.BrandId == "C268AA86-EC5D-4648-85DE-4B8FC83EFF0D" ? "bonna" : "pasabahce"
                    );

                    if (result.Success)
                    {
                        ToastService.ShowToast("Image uploaded successfully", "success");
                        await LoadProductDetails();
                    }
                    else
                    {
                        ToastService.ShowToast(result.Message ?? "Failed to upload image", "error");
                    }
                }
                catch (Exception ex)
                {
                    ToastService.ShowToast($"Error processing file: {ex.Message}", "error");
                }
            }
        }
        catch (Exception ex)
        {
            ToastService.ShowToast($"Error uploading files: {ex.Message}", "error");
        }
        finally
        {
            isUploading = false;
            StateHasChanged();
        }
    }

    private async Task HandleFileSelected(InputFileChangeEventArgs e)
    {
        try
        {
            isUploading = true;
            StateHasChanged();

            if (productDetail == null) return;

            foreach (var file in e.GetMultipleFiles(10))
            {
                await ProcessFile(file);
            }
        }
        finally
        {
            isUploading = false;
            StateHasChanged();
        }
    }

    private async Task ProcessFile(IBrowserFile file)
    {
        try
        {
            if (file.Size > 10485760) // 10MB limit
            {
                ToastService.ShowToast($"File {file.Name} is too large. Maximum size is 10MB.", "error");
                return;
            }

            using var stream = file.OpenReadStream(maxAllowedSize: 10485760);
            using var memoryStream = new MemoryStream();
            await stream.CopyToAsync(memoryStream);
            memoryStream.Position = 0;

            var result = await ProductsService.AddProductImageAsync(
                productDetail.Id,
                memoryStream,
                file.Name,
                productDetail.BrandId == "C268AA86-EC5D-4648-85DE-4B8FC83EFF0D" ? "bonna" : "pasabahce"
            );

            if (result.Success)
            {
                ToastService.ShowToast($"Image {file.Name} uploaded successfully", "success");
                await LoadProductDetails();
            }
            else
            {
                ToastService.ShowToast($"Failed to upload {file.Name}: {result.Message}", "error");
            }
        }
        catch (Exception ex)
        {
            ToastService.ShowToast($"Error processing file {file.Name}: {ex.Message}", "error");
        }
    }

    private async Task LoadProductDetails()
    {
        try
        {
            isLoading = true;
            var result = await ProductsService.GetProductByIdAsync(Product.Id);
            if (result.Success)
            {
                productDetail = result.Data;
            }
            else
            {
                ToastService.ShowToast("Failed to load product details", "error");
            }
        }
        catch (Exception ex)
        {
            ToastService.ShowToast($"Error: {ex.Message}", "error");
            Console.WriteLine($"Error loading product details: {ex.Message}");
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private async Task HandleImageDelete(string imageId)
    {
        try
        {
            isDeletingImage = imageId;
            StateHasChanged();

            var result = await ProductsService.DeleteProductImageAsync(imageId);

            if (result.Success)
            {
                ToastService.ShowToast("Image deleted successfully", "success");
                await LoadProductDetails();
            }
            else
            {
                ToastService.ShowToast(result.Message ?? "Failed to delete image", "error");
            }
        }
        catch (Exception ex)
        {
            ToastService.ShowToast($"Error: {ex.Message}", "error");
        }
        finally
        {
            isDeletingImage = null;
            StateHasChanged();
        }
    }

    private async Task HandleClose()
    {
        if (isSaving) return;
        await IsVisibleChanged.InvokeAsync(false);
    }

    private async Task SaveBasicInformation()
    {
        if (isSaving) return;

        try
        {
            isSaving = true;
            StateHasChanged();

            var updateModel = new UpdateProductViewModel
                {
                    ProductId = Guid.Parse(productDetail.Id),
                    Sku = productDetail.Sku,
                    PatternNumber = productDetail.PatternNumber,
                    Price = productDetail.Price,
                    Quantity = productDetail.Quantity,
                    Name = productDetail.Name,
                    Description = productDetail.Description,
                    BrandId = Guid.Parse(productDetail.BrandId),
                    CategoryId = productDetail.CategoryId,
                    CollectionId = productDetail.CollectionId,
                    Points = productDetail.Points,
                    Height = productDetail.Height,
                    Diameter = productDetail.Diameter,
                    Top = productDetail.Top,
                    Base = productDetail.Base,
                    Volume = productDetail.Volume,
                    Weight = productDetail.Weight,
                    Area = productDetail.Area,
                    InnerType = productDetail.InnerType,
                    InnerTypeCount = productDetail.InnerTypeCount,
                    OuterType = productDetail.OuterType,
                    OuterTypeCount = productDetail.OuterTypeCount,
                    Ean = productDetail.Ean,
                    Upc = productDetail.Upc
                };

            var response = await ProductsService.UpdateProductAsync(updateModel);

            if (response.Success)
            {
                ToastService.ShowToast("Product updated successfully", "success");
                await IsVisibleChanged.InvokeAsync(false);
                await OnSaved.InvokeAsync(); // This will just close the dialog
            }
            else
            {
                ToastService.ShowToast(response.Message ?? "Failed to update product", "error");
            }
        }
        catch (Exception ex)
        {
            ToastService.ShowToast($"Error: {ex.Message}", "error");
        }
        finally
        {
            isSaving = false;
            StateHasChanged();
        }
    }
}