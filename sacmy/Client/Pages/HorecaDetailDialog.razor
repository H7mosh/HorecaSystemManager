@page "/horeca-details/{selectedItemId}"
@inject HttpClient httpClient
@using System.Net.Http.Json
@using sacmy.Client.Services
@using sacmy.Shared.ViewModel.HorecaViewModel

<style>
    .mud-carousel-bullet {
        width: 100%; /* Adjust as needed */
        height: 320px; /* Adjust as needed */
        margin: 0 4px; /* Adjust as needed */
        background-color: #fff; /* Adjust background color as needed */
        border-radius: 50%;
</style>

<MudContainer MaxWidth=MaxWidth.Medium>
    @if (SelectedItem != null)
    {
        <div>
            <!-- Carousel -->
           
            <MudCarousel Class="mud-width-fulll" Style="height:400px;" AutoCycle="false" TData="object">
                <BulletTemplate Context="selected">
                    <div Class="mud-button-root mud-icon-button mud-icon-button-color-inherit mud-ripple mud-ripple-icon">
                        <span class="mud-icon-button-label">
                            <MudIcon Icon="@(selected ? Icons.Material.Filled.CheckCircle : Icons.Material.Filled.Circle)" Color="@Color.Inherit" />
                        </span>
                    </div>
                </BulletTemplate>
                <PreviousButtonTemplate>
                    <div Class="mud-button-root mud-icon-button mud-icon-button-color-inherit mud-ripple mud-ripple-icon">
                        <span class="mud-icon-button-label">
                            <MudIcon Class="mud-ripple mud-ripple-icon mud-icon-button-size-medium" Icon="@Icons.Material.Filled.SkipPrevious" Color="@Color.Inherit" />
                        </span>
                    </div>
                </PreviousButtonTemplate>
                <NextButtonTemplate>
                    <div Class="mud-button-root mud-icon-button mud-icon-button-color-inherit mud-ripple mud-ripple-icon">
                        <span class="mud-icon-button-label">
                            <MudIcon Class="mud-ripple mud-ripple-icon mud-icon-button-size-medium" Icon="@Icons.Material.Filled.SkipNext" Color="@Color.Inherit" />
                        </span>
                    </div>
                </NextButtonTemplate>
                <ChildContent>
                    @foreach(var image in SelectedItem.HorecaImage){
                    <MudCarouselItem Color="@Color.Primary">
                        <div class="d-flex" style="height:100%">
                                <MudImage Class="mx-auto my-auto" Src="@image" />
                        </div>
                    </MudCarouselItem>
                    }
                </ChildContent>
            </MudCarousel>
        
            <!-- Details -->
            <div class="details">
                <!-- Right side -->
                <div class="right-side">
                    <div class="name">
                        <h2>@SelectedItem.Name</h2>
                        <p class="governorate">@SelectedItem.Governorate</p>
                    </div>

                    <div class="owner">
                        <h3>@SelectedItem.OwnerName</h3>
                        <p>@SelectedItem.OwnerPhone</p>
                    </div>

                    <div class="purchase-manager">
                        <h3>@SelectedItem.PurcasingManagerName</h3>
                        <p>@SelectedItem.PurchasingManagerPhone</p>
                    </div>
                </div>

                <!-- Statistics -->
                <div class="statistics">
                    <h5>Statistics:</h5>
                    <MudDataGrid Items="@SelectedItem.getHorecaStatictsInformationViewModels" Filterable="false" Virtualize="true" Striped="true" Height="300px">
                        <Columns>
                            <PropertyColumn Property="x => x.Rating" Title="Rating" />
                            <PropertyColumn Property="x => x.TablesCount" Title="Tables Count" />
                            <PropertyColumn Property="x => x.ChairsCount" Title="Chairs Count" />
                        </Columns>
                    </MudDataGrid>
                </div>
            </div>
        </div>
    }
    else
    {
        <div>
            <p>Cannot Find The Selected Item</p>
        </div>
    }
</MudContainer>


@* <MudContainer MaxWidth=MaxWidth.Medium>
    @if (SelectedItem != null)
    {
        <div>
            <h4>@SelectedItem.Name</h4>
            <p>@SelectedItem.Governorate</p>
            <p>Owner: @SelectedItem.OwnerName - @SelectedItem.OwnerPhone</p>
            <p>@SelectedItem.PurcasingManagerName - @SelectedItem.PurchasingManagerPhone</p>

            <h5>Statistics:</h5>
            <div class="mud-grid">
                <div class="mud-col">
                    <p class="my-header-class">Rating</p>
                    @foreach (var item in SelectedItem.getHorecaStatictsInformationViewModels)
                    {
                        <p>@item.Rating</p>
                    }
                </div>
                <div class="mud-col">
                    <p class="my-header-class">Tables Count</p>
                    @foreach (var item in SelectedItem.getHorecaStatictsInformationViewModels)
                    {
                        <p>@item.TablesCount</p>
                    }
                </div>
                <div class="mud-col">
                    <p class="my-header-class">Chairs Count</p>
                    @foreach (var item in SelectedItem.getHorecaStatictsInformationViewModels)
                    {
                        <p>@item.ChairsCount</p>
                    }
                </div>
                
            </div>

            <h5>Images:</h5>
            <MudCarousel Class="mud-width-full" Style="height:200px;" ShowArrows="true" ShowBullets="true" EnableSwipeGesture="true" AutoCycle="true" TData="object">
                @foreach (var image in SelectedItem.HorecaImage)
                {
                    <MudCarouselItem Transition="Transition.Fade">
                        <img src="@image" alt="Horeca Image" style="max-width: 100%; max-height: 100%;" />
                    </MudCarouselItem>
                }
            </MudCarousel>
        </div>
    }
    else{
        <div>
            <p>Cannot Find The Seleted Item</p>
        </div>
    }
    
</MudContainer> *@

@code {
    [Parameter] public string SelectedItemId { get; set; }
    private GetHorecaInformationsViewModel SelectedItem;

    protected override void OnParametersSet()
    {
        //the param will be set now
         var electedItemId = SelectedItemId;
    }

    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrEmpty(SelectedItemId))
        {
            // Retrieve the selected item based on the ID
            SelectedItem = await httpClient.GetFromJsonAsync<GetHorecaInformationsViewModel>($"api/horeca/{Guid.Parse(SelectedItemId)}");
        }
    }
}





