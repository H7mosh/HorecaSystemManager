@using sacmy.Shared.Core
@inject UserGlobalClass UserGlobal


<style>
    .info-dialog {
        padding: 1.5rem;
        min-width: 400px;
    }

    .dialog-title {
        font-size: 1.25rem;
        font-weight: 600;
        color: #2d3748;
        margin-bottom: 1.5rem;
        padding-bottom: 0.75rem;
        border-bottom: 1px solid #e2e8f0;
    }

    .input-group {
        margin-bottom: 1.25rem;
        display: flex;
        flex-direction: column;
        gap: 0.5rem; /* Add consistent gap between label and input */
    }

    .input-label {
        display: block;
        font-weight: 500;
        color: #4a5568;
    }

    .password-wrapper {
        position: relative;
        width: 100%;
    }

    .form-input {
        width: 100%;
        padding: 0.75rem 1rem;
        border: 1px solid #ced4da;
        border-radius: 0.375rem;
        font-size: 1rem;
        transition: all 0.2s ease-in-out;
    }

        .form-input:focus {
            border-color: #3182ce;
            box-shadow: 0 0 0 3px rgba(49, 130, 206, 0.1);
            outline: none;
        }

    .car-number-input {
        text-transform: uppercase;
        margin-top: 0.5rem; /* Add consistent spacing for car number input */
    }

    .password-toggle {
        position: absolute;
        right: 10px;
        top: 50%;
        transform: translateY(-50%);
        background: none;
        border: none;
        color: #6c757d;
        cursor: pointer;
        padding: 0.25rem;
    }

        .password-toggle:hover {
            color: #495057;
        }

    .error-message {
        color: #dc3545;
        font-size: 0.875rem;
        margin-top: 0.5rem;
        display: flex;
        align-items: center;
        gap: 0.25rem;
    }

    .dialog-footer {
        display: flex;
        justify-content: flex-end;
        gap: 0.75rem;
        margin-top: 1.5rem;
        padding-top: 1rem;
        border-top: 1px solid #e2e8f0;
    }

    .btn-cancel {
        padding: 0.5rem 1rem;
        border: 1px solid #e2e8f0;
        background-color: white;
        color: #4a5568;
        border-radius: 0.375rem;
        font-weight: 500;
        transition: all 0.2s ease-in-out;
    }

        .btn-cancel:hover {
            background-color: #f7fafc;
            border-color: #cbd5e0;
        }

    .btn-submit {
        padding: 0.5rem 1rem;
        background-color: #3182ce;
        color: white;
        border: none;
        border-radius: 0.375rem;
        font-weight: 500;
        transition: all 0.2s ease-in-out;
    }

        .btn-submit:hover {
            background-color: #2c5282;
        }

        .btn-submit:disabled {
            background-color: #cbd5e0;
            cursor: not-allowed;
        }
</style>

<div class="info-dialog">
    <div class="dialog-title">
        Enter Required Information
    </div>

    <div class="input-group">
        <label class="input-label">Car Number</label>
        <input type="text"
               class="form-input car-number-input"
               @bind="CarNumber"
               @bind:event="oninput"
               placeholder="Enter car number"
               maxlength="10"
               autocomplete="off"
               autocorrect="off"
               autocapitalize="off"
               spellcheck="false" />
        @if (!string.IsNullOrEmpty(carNumberError))
        {
            <div class="error-message">
                <i class="bi bi-exclamation-circle"></i>
                <span>@carNumberError</span>
            </div>
        }
    </div>

    <div class="input-group">
        <label class="input-label">Password</label>
        <div class="password-wrapper">
            <input type="@(showPassword ? "text" : "password")"
                   class="form-input"
                   @bind="Password"
                   @bind:event="oninput"
                   placeholder="Enter your password"
                   autocomplete="new-password"
                   autocorrect="off"
                   autocapitalize="off"
                   spellcheck="false" />
            <button type="button"
                    class="password-toggle"
                    @onclick="TogglePasswordVisibility">
                <i class="bi @(showPassword ? "bi-eye-slash" : "bi-eye")"></i>
            </button>
        </div>
        @if (!string.IsNullOrEmpty(passwordError))
        {
            <div class="error-message">
                <i class="bi bi-exclamation-circle"></i>
                <span>@passwordError</span>
            </div>
        }
    </div>

    <div class="dialog-footer">
        <button type="button"
                class="btn-cancel"
                @onclick="Cancel">
            Cancel
        </button>
        <button type="button"
                class="btn-submit"
                @onclick="Submit"
                disabled="@(string.IsNullOrWhiteSpace(CarNumber) || string.IsNullOrWhiteSpace(Password))">
            Submit
        </button>
    </div>
</div>

@code {
    [CascadingParameter]
    IMudDialogInstance MudDialog { get; set; }

    private string CarNumber { get; set; }
    private string Password { get; set; }
    private bool showPassword;
    private string passwordError;
    private string carNumberError;

    private void TogglePasswordVisibility()
    {
        showPassword = !showPassword;
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private void Submit()
    {
        // Clear previous errors
        passwordError = null;
        carNumberError = null;

        // Validate car number
        if (string.IsNullOrWhiteSpace(CarNumber))
        {
            carNumberError = "Car number is required";
            return;
        }

        // Validate password
        if (string.IsNullOrWhiteSpace(Password))
        {
            passwordError = "Password is required";
            return;
        }

        if (Password != UserGlobal.User.Code)
        {
            passwordError = "Incorrect password";
            Password = string.Empty;
            return;
        }

        // If all validations pass, return the car number
        MudDialog.Close(DialogResult.Ok(CarNumber));
    }
}